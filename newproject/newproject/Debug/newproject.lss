
newproject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00001a7e  00001b12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000087  00800194  00800194  00001ba6  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001ba6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e0  00000000  00000000  00001c48  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003234  00000000  00000000  00001f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013d0  00000000  00000000  0000515c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001529  00000000  00000000  0000652c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005cc  00000000  00000000  00007a58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000018e3  00000000  00000000  00008024  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c32  00000000  00000000  00009907  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000a539  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 c4 03 	jmp	0x788	; 0x788 <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 4d 03 	jmp	0x69a	; 0x69a <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	ee e7       	ldi	r30, 0x7E	; 126
      e0:	fa e1       	ldi	r31, 0x1A	; 26
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a4 39       	cpi	r26, 0x94	; 148
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	a4 e9       	ldi	r26, 0x94	; 148
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	ab 31       	cpi	r26, 0x1B	; 27
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 ce 01 	call	0x39c	; 0x39c <main>
     102:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     10a:	0e 94 81 03 	call	0x702	; 0x702 <system_init>

	touch_init();
     10e:	0e 94 80 02 	call	0x500	; 0x500 <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31

	mega_touch_timer();
     136:	0e 94 00 03 	call	0x600	; 0x600 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     13a:	a8 9a       	sbi	0x15, 0	; 21
}
     13c:	ff 91       	pop	r31
     13e:	ef 91       	pop	r30
     140:	bf 91       	pop	r27
     142:	af 91       	pop	r26
     144:	9f 91       	pop	r25
     146:	8f 91       	pop	r24
     148:	7f 91       	pop	r23
     14a:	6f 91       	pop	r22
     14c:	5f 91       	pop	r21
     14e:	4f 91       	pop	r20
     150:	3f 91       	pop	r19
     152:	2f 91       	pop	r18
     154:	0f 90       	pop	r0
     156:	0f be       	out	0x3f, r0	; 63
     158:	0f 90       	pop	r0
     15a:	1f 90       	pop	r1
     15c:	18 95       	reti

0000015e <SPI_MasterInit>:
uint8_t touch_counter_6 = 0;

void SPI_MasterInit()
{
	// Set SS, MOSI, and SCK as outputs
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     15e:	84 b1       	in	r24, 0x04	; 4
     160:	80 6b       	ori	r24, 0xB0	; 176
     162:	84 b9       	out	0x04, r24	; 4
	// Enable SPI, Set as Master
	SPCR0 = (1 << SPE) | (1 << MSTR);
     164:	80 e5       	ldi	r24, 0x50	; 80
     166:	8c bd       	out	0x2c, r24	; 44
	// Set SS pin high (inactive)
	PORTB |= (1 << SPI_SS_PIN);
     168:	2c 9a       	sbi	0x05, 4	; 5
     16a:	08 95       	ret

0000016c <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(uint8_t data)
{
	// Set SS pin low (activate slave)
	PORTB &= ~(1 << SPI_SS_PIN);
     16c:	2c 98       	cbi	0x05, 4	; 5
	// Start transmission
	SPDR0 = data;
     16e:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission to complete
	while (!(SPSR0 & (1 << SPIF)))
     170:	0d b4       	in	r0, 0x2d	; 45
     172:	07 fe       	sbrs	r0, 7
     174:	fd cf       	rjmp	.-6      	; 0x170 <SPI_MasterTransmit+0x4>
	{
		// Add timeout or error handling if necessary
	}
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
     176:	2c 9a       	sbi	0x05, 4	; 5
     178:	08 95       	ret

0000017a <SPI_MasterTransmitString>:
		
		_delay_ms(100);
	}
}
// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	ec 01       	movw	r28, r24
	for (int i = 0; str[i] != '\0'; i++) {
     180:	88 81       	ld	r24, Y
     182:	88 23       	and	r24, r24
     184:	61 f0       	breq	.+24     	; 0x19e <SPI_MasterTransmitString+0x24>
     186:	21 96       	adiw	r28, 0x01	; 1
		SPI_MasterTransmit(str[i]);
     188:	0e 94 b6 00 	call	0x16c	; 0x16c <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18c:	87 ea       	ldi	r24, 0xA7	; 167
     18e:	91 e6       	ldi	r25, 0x61	; 97
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	f1 f7       	brne	.-4      	; 0x190 <SPI_MasterTransmitString+0x16>
     194:	00 c0       	rjmp	.+0      	; 0x196 <SPI_MasterTransmitString+0x1c>
     196:	00 00       	nop
		_delay_ms(100);
	}
}
// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     198:	89 91       	ld	r24, Y+
     19a:	81 11       	cpse	r24, r1
     19c:	f5 cf       	rjmp	.-22     	; 0x188 <SPI_MasterTransmitString+0xe>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	08 95       	ret

000001a4 <touchpin1>:
	}
	return 0;
}
void touchpin1() {
	// Get the status of the first touch sensor
	previous_key_status_1 = key_status_1;
     1a4:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <key_status_1>
     1a8:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
     1b4:	80 78       	andi	r24, 0x80	; 128
     1b6:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1ba:	88 23       	and	r24, r24
     1bc:	c1 f0       	breq	.+48     	; 0x1ee <touchpin1+0x4a>
     1be:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <previous_key_status_1>
     1c2:	81 11       	cpse	r24, r1
     1c4:	14 c0       	rjmp	.+40     	; 0x1ee <touchpin1+0x4a>
		touch_counter_1++;
     1c6:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <touch_counter_1>
     1ca:	8f 5f       	subi	r24, 0xFF	; 255
     1cc:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <touch_counter_1>
		if (touch_counter_1 == 1) {
     1d0:	81 30       	cpi	r24, 0x01	; 1
     1d2:	29 f4       	brne	.+10     	; 0x1de <touchpin1+0x3a>
			SPI_MasterTransmitString("L1");
     1d4:	8e e7       	ldi	r24, 0x7E	; 126
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     1dc:	08 95       	ret
		}
		else if (touch_counter_1 == 2) {
     1de:	82 30       	cpi	r24, 0x02	; 2
     1e0:	31 f4       	brne	.+12     	; 0x1ee <touchpin1+0x4a>
			SPI_MasterTransmitString("L1");
     1e2:	8e e7       	ldi	r24, 0x7E	; 126
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_1 = 0;
     1ea:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <touch_counter_1>
     1ee:	08 95       	ret

000001f0 <touchpin2>:
		}
	}
}
void touchpin2() {
	// Get the status of the first touch sensor
	previous_key_status_2 = key_status_2;
     1f0:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <key_status_2>
     1f4:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
     200:	80 78       	andi	r24, 0x80	; 128
     202:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <key_status_2>
	if (key_status_2 && !previous_key_status_2) {
     206:	88 23       	and	r24, r24
     208:	c1 f0       	breq	.+48     	; 0x23a <touchpin2+0x4a>
     20a:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <previous_key_status_2>
     20e:	81 11       	cpse	r24, r1
     210:	14 c0       	rjmp	.+40     	; 0x23a <touchpin2+0x4a>
		touch_counter_2++;
     212:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <touch_counter_2>
     216:	8f 5f       	subi	r24, 0xFF	; 255
     218:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <touch_counter_2>
		if (touch_counter_2 == 1) {
     21c:	81 30       	cpi	r24, 0x01	; 1
     21e:	29 f4       	brne	.+10     	; 0x22a <touchpin2+0x3a>
			SPI_MasterTransmitString("L2");
     220:	81 e8       	ldi	r24, 0x81	; 129
     222:	91 e0       	ldi	r25, 0x01	; 1
     224:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     228:	08 95       	ret
			
		}
		else if (touch_counter_2 == 2) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	31 f4       	brne	.+12     	; 0x23a <touchpin2+0x4a>
			SPI_MasterTransmitString("L2");
     22e:	81 e8       	ldi	r24, 0x81	; 129
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			touch_counter_2 = 0;
     236:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <touch_counter_2>
     23a:	08 95       	ret

0000023c <touchpin3>:
		}
	}
}
void touchpin3() {
	// Get the status of the first touch sensor
	previous_key_status_3 = key_status_3;
     23c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <key_status_3>
     240:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <previous_key_status_3>
	key_status_3 = get_sensor_state(2) & 0x80;
     244:	82 e0       	ldi	r24, 0x02	; 2
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
     24c:	80 78       	andi	r24, 0x80	; 128
     24e:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <key_status_3>
	if (key_status_3 && !previous_key_status_3) {
     252:	88 23       	and	r24, r24
     254:	c1 f0       	breq	.+48     	; 0x286 <touchpin3+0x4a>
     256:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <previous_key_status_3>
     25a:	81 11       	cpse	r24, r1
     25c:	14 c0       	rjmp	.+40     	; 0x286 <touchpin3+0x4a>
		touch_counter_3++;
     25e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <touch_counter_3>
     262:	8f 5f       	subi	r24, 0xFF	; 255
     264:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <touch_counter_3>
		if (touch_counter_3 == 1) {
     268:	81 30       	cpi	r24, 0x01	; 1
     26a:	29 f4       	brne	.+10     	; 0x276 <touchpin3+0x3a>
			SPI_MasterTransmitString("F1");
     26c:	84 e8       	ldi	r24, 0x84	; 132
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     274:	08 95       	ret
		}
		else if (touch_counter_3 == 2) {
     276:	82 30       	cpi	r24, 0x02	; 2
     278:	31 f4       	brne	.+12     	; 0x286 <touchpin3+0x4a>
			SPI_MasterTransmitString("F1");
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			touch_counter_3 = 0;
     282:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <touch_counter_3>
     286:	08 95       	ret

00000288 <touchpin4>:
		}
	}
}
void touchpin4() {
	// Get the status of the first touch sensor
	previous_key_status_4 = key_status_4;
     288:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <key_status_4>
     28c:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     290:	83 e0       	ldi	r24, 0x03	; 3
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
     298:	80 78       	andi	r24, 0x80	; 128
     29a:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <key_status_4>
	if (key_status_4 && !previous_key_status_4) {
     29e:	88 23       	and	r24, r24
     2a0:	c1 f0       	breq	.+48     	; 0x2d2 <touchpin4+0x4a>
     2a2:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <previous_key_status_4>
     2a6:	81 11       	cpse	r24, r1
     2a8:	14 c0       	rjmp	.+40     	; 0x2d2 <touchpin4+0x4a>
		touch_counter_4++;
     2aa:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <touch_counter_4>
     2ae:	8f 5f       	subi	r24, 0xFF	; 255
     2b0:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <touch_counter_4>
		if (touch_counter_4 == 1) {
     2b4:	81 30       	cpi	r24, 0x01	; 1
     2b6:	29 f4       	brne	.+10     	; 0x2c2 <touchpin4+0x3a>
		SPI_MasterTransmitString("L3");		}
     2b8:	87 e8       	ldi	r24, 0x87	; 135
     2ba:	91 e0       	ldi	r25, 0x01	; 1
     2bc:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     2c0:	08 95       	ret
		else if (touch_counter_4 == 2) {
     2c2:	82 30       	cpi	r24, 0x02	; 2
     2c4:	31 f4       	brne	.+12     	; 0x2d2 <touchpin4+0x4a>
			SPI_MasterTransmitString("L3");
     2c6:	87 e8       	ldi	r24, 0x87	; 135
     2c8:	91 e0       	ldi	r25, 0x01	; 1
     2ca:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			touch_counter_4 = 0;
     2ce:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <touch_counter_4>
     2d2:	08 95       	ret

000002d4 <touchpin5>:
		}
	}
}
void touchpin5()
{
	if (touch_counter_4 == 1)
     2d4:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <touch_counter_4>
     2d8:	81 30       	cpi	r24, 0x01	; 1
     2da:	01 f5       	brne	.+64     	; 0x31c <touchpin5+0x48>
	{
		// Get the status of the fifth touch sensor (PA0)
		previous_key_status_5 = key_status_5;
     2dc:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <key_status_5>
     2e0:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <previous_key_status_5>
		key_status_5 = get_sensor_state(4) & 0x80;
     2e4:	84 e0       	ldi	r24, 0x04	; 4
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
     2ec:	80 78       	andi	r24, 0x80	; 128
     2ee:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <key_status_5>
		// Turn on LEDs one by one when touch is detected on PA1 (Fan Up Pin)
		if (key_status_5 && !previous_key_status_5) {
     2f2:	88 23       	and	r24, r24
     2f4:	69 f0       	breq	.+26     	; 0x310 <touchpin5+0x3c>
     2f6:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <previous_key_status_5>
     2fa:	81 11       	cpse	r24, r1
     2fc:	09 c0       	rjmp	.+18     	; 0x310 <touchpin5+0x3c>
			touch_counter_5++;
     2fe:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <touch_counter_5>
     302:	8f 5f       	subi	r24, 0xFF	; 255
     304:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <touch_counter_5>
			SPI_MasterTransmitString("H");
     308:	8a e8       	ldi	r24, 0x8A	; 138
     30a:	91 e0       	ldi	r25, 0x01	; 1
     30c:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
		}
		// Reset touch_counter_5 to 0 if it reaches 5
		if (touch_counter_5 == 5) {
     310:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <touch_counter_5>
     314:	85 30       	cpi	r24, 0x05	; 5
     316:	11 f4       	brne	.+4      	; 0x31c <touchpin5+0x48>
			touch_counter_5 = 0;
     318:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <touch_counter_5>
     31c:	08 95       	ret

0000031e <touchpin6>:
		}
	}
}
void touchpin6() {
	// Get the status of the sixth touch sensor (PA1)
	previous_key_status_6 = key_status_6;
     31e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <key_status_6>
     322:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
	key_status_6 = get_sensor_state(5) & 0x80;
     326:	85 e0       	ldi	r24, 0x05	; 5
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
     32e:	80 78       	andi	r24, 0x80	; 128
     330:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <key_status_6>
	// Turn off active LEDs one by one when touch is detected on PA0 (Fan Down Pin)
	if (key_status_6 && !previous_key_status_6) {
     334:	88 23       	and	r24, r24
     336:	99 f0       	breq	.+38     	; 0x35e <touchpin6+0x40>
     338:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
     33c:	81 11       	cpse	r24, r1
     33e:	0f c0       	rjmp	.+30     	; 0x35e <touchpin6+0x40>
		touch_counter_5--;
     340:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <touch_counter_5>
     344:	81 50       	subi	r24, 0x01	; 1
     346:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <touch_counter_5>
		SPI_MasterTransmitString("L");
     34a:	8c e8       	ldi	r24, 0x8C	; 140
     34c:	91 e0       	ldi	r25, 0x01	; 1
     34e:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     352:	87 ea       	ldi	r24, 0xA7	; 167
     354:	91 e6       	ldi	r25, 0x61	; 97
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	f1 f7       	brne	.-4      	; 0x356 <touchpin6+0x38>
     35a:	00 c0       	rjmp	.+0      	; 0x35c <touchpin6+0x3e>
     35c:	00 00       	nop
     35e:	08 95       	ret

00000360 <loop>:
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
}
void loop()
{
	touch_process();
     360:	0e 94 be 02 	call	0x57c	; 0x57c <touch_process>
	// Check if touch measurement is done
	if (measurement_done_touch == 1)
     364:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <measurement_done_touch>
     368:	81 30       	cpi	r24, 0x01	; 1
     36a:	b9 f4       	brne	.+46     	; 0x39a <loop+0x3a>
	{
		measurement_done_touch = 0;
     36c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <measurement_done_touch>
		touchpin1();
     370:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <touchpin1>
		touchpin2();
     374:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <touchpin2>
		touchpin3();
     378:	0e 94 1e 01 	call	0x23c	; 0x23c <touchpin3>
		touchpin4();
     37c:	0e 94 44 01 	call	0x288	; 0x288 <touchpin4>
		touchpin5();
     380:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <touchpin5>
		touchpin6();
     384:	0e 94 8f 01 	call	0x31e	; 0x31e <touchpin6>
		if (touch_counter_4 == 0)
     388:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <touch_counter_4>
     38c:	81 11       	cpse	r24, r1
     38e:	05 c0       	rjmp	.+10     	; 0x39a <loop+0x3a>
		{
			PORTD &=0X07;
     390:	8b b1       	in	r24, 0x0b	; 11
     392:	87 70       	andi	r24, 0x07	; 7
     394:	8b b9       	out	0x0b, r24	; 11
			touch_counter_5 = 0;
     396:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <touch_counter_5>
     39a:	08 95       	ret

0000039c <main>:
	}
}
int main(void)
{
	/* Initializes MCU, drivers, and middleware */
	atmel_start_init();
     39c:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	/* Enable interrupts */
	cpu_irq_enable();
     3a0:	78 94       	sei
	// Initialize SPI as master
	SPI_MasterInit();
     3a2:	0e 94 af 00 	call	0x15e	; 0x15e <SPI_MasterInit>
	while (1)
	{
		loop();
     3a6:	0e 94 b0 01 	call	0x360	; 0x360 <loop>
     3aa:	fd cf       	rjmp	.-6      	; 0x3a6 <main+0xa>

000003ac <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     3ac:	08 95       	ret

000003ae <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     3ae:	cf 93       	push	r28
     3b0:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     3b2:	0e 94 38 04 	call	0x870	; 0x870 <USART_is_tx_ready>
     3b6:	88 23       	and	r24, r24
     3b8:	e1 f3       	breq	.-8      	; 0x3b2 <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     3ba:	8c 2f       	mov	r24, r28
     3bc:	0e 94 46 04 	call	0x88c	; 0x88c <USART_write>

	while (USART_is_tx_busy())
     3c0:	0e 94 3e 04 	call	0x87c	; 0x87c <USART_is_tx_busy>
     3c4:	81 11       	cpse	r24, r1
     3c6:	fc cf       	rjmp	.-8      	; 0x3c0 <datastreamer_transmit+0x12>
		;
}
     3c8:	cf 91       	pop	r28
     3ca:	08 95       	ret

000003cc <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     3cc:	ef 92       	push	r14
     3ce:	ff 92       	push	r15
     3d0:	0f 93       	push	r16
     3d2:	1f 93       	push	r17
     3d4:	cf 93       	push	r28
     3d6:	df 93       	push	r29
     3d8:	00 d0       	rcall	.+0      	; 0x3da <datastreamer_output+0xe>
     3da:	cd b7       	in	r28, 0x3d	; 61
     3dc:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     3de:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <sequence.2511>
     3e2:	8f 70       	andi	r24, 0x0F	; 15
     3e4:	81 f4       	brne	.+32     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     3e6:	00 e0       	ldi	r16, 0x00	; 0
     3e8:	11 e0       	ldi	r17, 0x01	; 1
     3ea:	0f 2e       	mov	r0, r31
     3ec:	f3 e1       	ldi	r31, 0x13	; 19
     3ee:	ef 2e       	mov	r14, r31
     3f0:	f1 e0       	ldi	r31, 0x01	; 1
     3f2:	ff 2e       	mov	r15, r31
     3f4:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     3f6:	f8 01       	movw	r30, r16
     3f8:	81 91       	ld	r24, Z+
     3fa:	8f 01       	movw	r16, r30
     3fc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     400:	e0 16       	cp	r14, r16
     402:	f1 06       	cpc	r15, r17
     404:	c1 f7       	brne	.-16     	; 0x3f6 <datastreamer_output+0x2a>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     406:	85 e5       	ldi	r24, 0x55	; 85
     408:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     40c:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <sequence.2511>
     410:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     414:	1a 82       	std	Y+2, r1	; 0x02
     416:	19 82       	std	Y+1, r1	; 0x01
     418:	89 81       	ldd	r24, Y+1	; 0x01
     41a:	9a 81       	ldd	r25, Y+2	; 0x02
     41c:	06 97       	sbiw	r24, 0x06	; 6
     41e:	08 f0       	brcs	.+2      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
     420:	53 c0       	rjmp	.+166    	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     422:	89 81       	ldd	r24, Y+1	; 0x01
     424:	9a 81       	ldd	r25, Y+2	; 0x02
     426:	0e 94 17 03 	call	0x62e	; 0x62e <get_sensor_node_signal>
     42a:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     42c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     430:	81 2f       	mov	r24, r17
     432:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     436:	89 81       	ldd	r24, Y+1	; 0x01
     438:	9a 81       	ldd	r25, Y+2	; 0x02
     43a:	0e 94 24 03 	call	0x648	; 0x648 <get_sensor_node_reference>
     43e:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     440:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     444:	81 2f       	mov	r24, r17
     446:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	9a 81       	ldd	r25, Y+2	; 0x02
     44e:	0e 94 17 03 	call	0x62e	; 0x62e <get_sensor_node_signal>
     452:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     454:	89 81       	ldd	r24, Y+1	; 0x01
     456:	9a 81       	ldd	r25, Y+2	; 0x02
     458:	0e 94 24 03 	call	0x648	; 0x648 <get_sensor_node_reference>
     45c:	08 1b       	sub	r16, r24
     45e:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     460:	80 2f       	mov	r24, r16
     462:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     466:	81 2f       	mov	r24, r17
     468:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     46c:	89 81       	ldd	r24, Y+1	; 0x01
     46e:	9a 81       	ldd	r25, Y+2	; 0x02
     470:	0e 94 31 03 	call	0x662	; 0x662 <get_sensor_cc_val>
     474:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     476:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     47a:	81 2f       	mov	r24, r17
     47c:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     480:	89 81       	ldd	r24, Y+1	; 0x01
     482:	9a 81       	ldd	r25, Y+2	; 0x02
     484:	0e 94 3e 03 	call	0x67c	; 0x67c <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     488:	88 23       	and	r24, r24
     48a:	24 f4       	brge	.+8      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
			datastreamer_transmit(0x01);
     48c:	81 e0       	ldi	r24, 0x01	; 1
     48e:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
     492:	03 c0       	rjmp	.+6      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
		} else {
			datastreamer_transmit(0x00);
     494:	80 e0       	ldi	r24, 0x00	; 0
     496:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     49a:	89 81       	ldd	r24, Y+1	; 0x01
     49c:	9a 81       	ldd	r25, Y+2	; 0x02
     49e:	fc 01       	movw	r30, r24
     4a0:	ee 0f       	add	r30, r30
     4a2:	ff 1f       	adc	r31, r31
     4a4:	8e 0f       	add	r24, r30
     4a6:	9f 1f       	adc	r25, r31
     4a8:	fc 01       	movw	r30, r24
     4aa:	e5 5e       	subi	r30, 0xE5	; 229
     4ac:	fe 4f       	sbci	r31, 0xFE	; 254
     4ae:	80 81       	ld	r24, Z
     4b0:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
     4b6:	9a 81       	ldd	r25, Y+2	; 0x02
     4b8:	01 96       	adiw	r24, 0x01	; 1
     4ba:	9a 83       	std	Y+2, r25	; 0x02
     4bc:	89 83       	std	Y+1, r24	; 0x01
     4be:	89 81       	ldd	r24, Y+1	; 0x01
     4c0:	9a 81       	ldd	r25, Y+2	; 0x02
     4c2:	06 97       	sbiw	r24, 0x06	; 6
     4c4:	08 f4       	brcc	.+2      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c6:	ad cf       	rjmp	.-166    	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     4c8:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <module_error_code>
     4cc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     4d0:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <sequence.2511>
     4d4:	91 e0       	ldi	r25, 0x01	; 1
     4d6:	98 0f       	add	r25, r24
     4d8:	90 93 a5 01 	sts	0x01A5, r25	; 0x8001a5 <sequence.2511>
     4dc:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     4e0:	8a ea       	ldi	r24, 0xAA	; 170
     4e2:	0e 94 d7 01 	call	0x3ae	; 0x3ae <datastreamer_transmit>
}
     4e6:	0f 90       	pop	r0
     4e8:	0f 90       	pop	r0
     4ea:	df 91       	pop	r29
     4ec:	cf 91       	pop	r28
     4ee:	1f 91       	pop	r17
     4f0:	0f 91       	pop	r16
     4f2:	ff 90       	pop	r15
     4f4:	ef 90       	pop	r14
     4f6:	08 95       	ret

000004f8 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     4f8:	81 e0       	ldi	r24, 0x01	; 1
     4fa:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <touch_postprocess_request>
     4fe:	08 95       	ret

00000500 <touch_init>:
     500:	0f 93       	push	r16
     502:	1f 93       	push	r17
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	88 e0       	ldi	r24, 0x08	; 8
     50a:	87 bd       	out	0x27, r24	; 39
     50c:	e3 e6       	ldi	r30, 0x63	; 99
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	80 81       	ld	r24, Z
     512:	87 7f       	andi	r24, 0xF7	; 247
     514:	80 83       	st	Z, r24
     516:	12 98       	cbi	0x02, 2	; 2
     518:	13 98       	cbi	0x02, 3	; 2
     51a:	14 98       	cbi	0x02, 4	; 2
     51c:	11 98       	cbi	0x02, 1	; 2
     51e:	10 98       	cbi	0x02, 0	; 2
     520:	15 98       	cbi	0x02, 5	; 2
     522:	87 e3       	ldi	r24, 0x37	; 55
     524:	91 e0       	ldi	r25, 0x01	; 1
     526:	0e 94 f6 0a 	call	0x15ec	; 0x15ec <qtm_ptc_init_acquisition_module>
     52a:	87 ee       	ldi	r24, 0xE7	; 231
     52c:	91 e0       	ldi	r25, 0x01	; 1
     52e:	0e 94 87 0b 	call	0x170e	; 0x170e <qtm_ptc_qtlib_assign_signal_memory>
     532:	c0 e0       	ldi	r28, 0x00	; 0
     534:	d0 e0       	ldi	r29, 0x00	; 0
     536:	be 01       	movw	r22, r28
     538:	87 e3       	ldi	r24, 0x37	; 55
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	0e 94 8a 0c 	call	0x1914	; 0x1914 <qtm_enable_sensor_node>
     540:	be 01       	movw	r22, r28
     542:	87 e3       	ldi	r24, 0x37	; 55
     544:	91 e0       	ldi	r25, 0x01	; 1
     546:	0e 94 a9 0c 	call	0x1952	; 0x1952 <qtm_calibrate_sensor_node>
     54a:	21 96       	adiw	r28, 0x01	; 1
     54c:	c6 30       	cpi	r28, 0x06	; 6
     54e:	d1 05       	cpc	r29, r1
     550:	91 f7       	brne	.-28     	; 0x536 <touch_init+0x36>
     552:	09 ec       	ldi	r16, 0xC9	; 201
     554:	11 e0       	ldi	r17, 0x01	; 1
     556:	c0 e0       	ldi	r28, 0x00	; 0
     558:	a8 01       	movw	r20, r16
     55a:	6c 2f       	mov	r22, r28
     55c:	83 e1       	ldi	r24, 0x13	; 19
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	0e 94 c2 04 	call	0x984	; 0x984 <qtm_init_sensor_key>
     564:	cf 5f       	subi	r28, 0xFF	; 255
     566:	0b 5f       	subi	r16, 0xFB	; 251
     568:	1f 4f       	sbci	r17, 0xFF	; 255
     56a:	c6 30       	cpi	r28, 0x06	; 6
     56c:	a9 f7       	brne	.-22     	; 0x558 <touch_init+0x58>
     56e:	0e 94 d6 01 	call	0x3ac	; 0x3ac <datastreamer_init>
     572:	df 91       	pop	r29
     574:	cf 91       	pop	r28
     576:	1f 91       	pop	r17
     578:	0f 91       	pop	r16
     57a:	08 95       	ret

0000057c <touch_process>:
     57c:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <time_to_measure_touch_flag>
     580:	81 30       	cpi	r24, 0x01	; 1
     582:	51 f4       	brne	.+20     	; 0x598 <touch_process+0x1c>
     584:	6c e7       	ldi	r22, 0x7C	; 124
     586:	72 e0       	ldi	r23, 0x02	; 2
     588:	87 e3       	ldi	r24, 0x37	; 55
     58a:	91 e0       	ldi	r25, 0x01	; 1
     58c:	0e 94 91 0b 	call	0x1722	; 0x1722 <qtm_ptc_start_measurement_seq>
     590:	81 11       	cpse	r24, r1
     592:	02 c0       	rjmp	.+4      	; 0x598 <touch_process+0x1c>
     594:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <time_to_measure_touch_flag>
     598:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <touch_postprocess_request>
     59c:	81 30       	cpi	r24, 0x01	; 1
     59e:	39 f5       	brne	.+78     	; 0x5ee <touch_process+0x72>
     5a0:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <touch_postprocess_request>
     5a4:	0e 94 8f 09 	call	0x131e	; 0x131e <qtm_acquisition_process>
     5a8:	81 11       	cpse	r24, r1
     5aa:	0c c0       	rjmp	.+24     	; 0x5c4 <touch_process+0x48>
     5ac:	83 e1       	ldi	r24, 0x13	; 19
     5ae:	91 e0       	ldi	r25, 0x01	; 1
     5b0:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <qtm_key_sensors_process>
     5b4:	88 23       	and	r24, r24
     5b6:	59 f0       	breq	.+22     	; 0x5ce <touch_process+0x52>
     5b8:	82 e0       	ldi	r24, 0x02	; 2
     5ba:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <module_error_code>
     5be:	0e 94 e6 01 	call	0x3cc	; 0x3cc <datastreamer_output>
     5c2:	05 c0       	rjmp	.+10     	; 0x5ce <touch_process+0x52>
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <module_error_code>
     5ca:	0e 94 e6 01 	call	0x3cc	; 0x3cc <datastreamer_output>
     5ce:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     5d2:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     5d6:	80 81       	ld	r24, Z
     5d8:	88 23       	and	r24, r24
     5da:	24 f4       	brge	.+8      	; 0x5e4 <touch_process+0x68>
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <time_to_measure_touch_flag>
     5e2:	03 c0       	rjmp	.+6      	; 0x5ea <touch_process+0x6e>
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <measurement_done_touch>
     5ea:	0e 94 e6 01 	call	0x3cc	; 0x3cc <datastreamer_output>
     5ee:	08 95       	ret

000005f0 <touch_timer_handler>:
     5f0:	81 e0       	ldi	r24, 0x01	; 1
     5f2:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <time_to_measure_touch_flag>
     5f6:	84 e1       	ldi	r24, 0x14	; 20
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 b7 04 	call	0x96e	; 0x96e <qtm_update_qtlib_timer>
     5fe:	08 95       	ret

00000600 <mega_touch_timer>:
     600:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <touch_time_counter.2335>
     604:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <touch_time_counter.2335+0x1>
     608:	44 97       	sbiw	r24, 0x14	; 20
     60a:	39 f4       	brne	.+14     	; 0x61a <mega_touch_timer+0x1a>
     60c:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <touch_time_counter.2335+0x1>
     610:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <touch_time_counter.2335>
     614:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <touch_timer_handler>
     618:	08 95       	ret
     61a:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <touch_time_counter.2335>
     61e:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <touch_time_counter.2335+0x1>
     622:	01 96       	adiw	r24, 0x01	; 1
     624:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <touch_time_counter.2335+0x1>
     628:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <touch_time_counter.2335>
     62c:	08 95       	ret

0000062e <get_sensor_node_signal>:
     62e:	9c 01       	movw	r18, r24
     630:	22 0f       	add	r18, r18
     632:	33 1f       	adc	r19, r19
     634:	22 0f       	add	r18, r18
     636:	33 1f       	adc	r19, r19
     638:	82 0f       	add	r24, r18
     63a:	93 1f       	adc	r25, r19
     63c:	fc 01       	movw	r30, r24
     63e:	e7 53       	subi	r30, 0x37	; 55
     640:	fe 4f       	sbci	r31, 0xFE	; 254
     642:	81 81       	ldd	r24, Z+1	; 0x01
     644:	92 81       	ldd	r25, Z+2	; 0x02
     646:	08 95       	ret

00000648 <get_sensor_node_reference>:
     648:	9c 01       	movw	r18, r24
     64a:	22 0f       	add	r18, r18
     64c:	33 1f       	adc	r19, r19
     64e:	82 0f       	add	r24, r18
     650:	93 1f       	adc	r25, r19
     652:	fc 01       	movw	r30, r24
     654:	ee 0f       	add	r30, r30
     656:	ff 1f       	adc	r31, r31
     658:	ed 50       	subi	r30, 0x0D	; 13
     65a:	fe 4f       	sbci	r31, 0xFE	; 254
     65c:	84 81       	ldd	r24, Z+4	; 0x04
     65e:	95 81       	ldd	r25, Z+5	; 0x05
     660:	08 95       	ret

00000662 <get_sensor_cc_val>:
     662:	9c 01       	movw	r18, r24
     664:	22 0f       	add	r18, r18
     666:	33 1f       	adc	r19, r19
     668:	22 0f       	add	r18, r18
     66a:	33 1f       	adc	r19, r19
     66c:	82 0f       	add	r24, r18
     66e:	93 1f       	adc	r25, r19
     670:	fc 01       	movw	r30, r24
     672:	e7 53       	subi	r30, 0x37	; 55
     674:	fe 4f       	sbci	r31, 0xFE	; 254
     676:	83 81       	ldd	r24, Z+3	; 0x03
     678:	94 81       	ldd	r25, Z+4	; 0x04
     67a:	08 95       	ret

0000067c <get_sensor_state>:
     67c:	9c 01       	movw	r18, r24
     67e:	22 0f       	add	r18, r18
     680:	33 1f       	adc	r19, r19
     682:	82 0f       	add	r24, r18
     684:	93 1f       	adc	r25, r19
     686:	88 0f       	add	r24, r24
     688:	99 1f       	adc	r25, r25
     68a:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     68e:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     692:	e8 0f       	add	r30, r24
     694:	f9 1f       	adc	r31, r25
     696:	80 81       	ld	r24, Z
     698:	08 95       	ret

0000069a <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     69a:	1f 92       	push	r1
     69c:	0f 92       	push	r0
     69e:	0f b6       	in	r0, 0x3f	; 63
     6a0:	0f 92       	push	r0
     6a2:	11 24       	eor	r1, r1
     6a4:	2f 93       	push	r18
     6a6:	3f 93       	push	r19
     6a8:	4f 93       	push	r20
     6aa:	5f 93       	push	r21
     6ac:	6f 93       	push	r22
     6ae:	7f 93       	push	r23
     6b0:	8f 93       	push	r24
     6b2:	9f 93       	push	r25
     6b4:	af 93       	push	r26
     6b6:	bf 93       	push	r27
     6b8:	ef 93       	push	r30
     6ba:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     6bc:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <qtm_m324pb_ptc_handler_eoc>
}
     6c0:	ff 91       	pop	r31
     6c2:	ef 91       	pop	r30
     6c4:	bf 91       	pop	r27
     6c6:	af 91       	pop	r26
     6c8:	9f 91       	pop	r25
     6ca:	8f 91       	pop	r24
     6cc:	7f 91       	pop	r23
     6ce:	6f 91       	pop	r22
     6d0:	5f 91       	pop	r21
     6d2:	4f 91       	pop	r20
     6d4:	3f 91       	pop	r19
     6d6:	2f 91       	pop	r18
     6d8:	0f 90       	pop	r0
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	0f 90       	pop	r0
     6de:	1f 90       	pop	r1
     6e0:	18 95       	reti

000006e2 <SPI_0_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     6e2:	26 98       	cbi	0x04, 6	; 4
     6e4:	2e 98       	cbi	0x05, 6	; 5
     6e6:	25 9a       	sbi	0x04, 5	; 4
     6e8:	2d 98       	cbi	0x05, 5	; 5
     6ea:	27 9a       	sbi	0x04, 7	; 4
     6ec:	2f 98       	cbi	0x05, 7	; 5
     6ee:	0e 94 b7 03 	call	0x76e	; 0x76e <SPI_0_init>
     6f2:	08 95       	ret

000006f4 <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     6f4:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     6f6:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     6f8:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     6fa:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     6fc:	0e 94 27 04 	call	0x84e	; 0x84e <USART_init>
     700:	08 95       	ret

00000702 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     702:	83 e0       	ldi	r24, 0x03	; 3
     704:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     708:	8f ef       	ldi	r24, 0xFF	; 255
     70a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     70e:	9f e0       	ldi	r25, 0x0F	; 15
     710:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     714:	91 b1       	in	r25, 0x01	; 1
     716:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     718:	92 b1       	in	r25, 0x02	; 2
     71a:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     71c:	94 b1       	in	r25, 0x04	; 4
     71e:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     720:	95 b1       	in	r25, 0x05	; 5
     722:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     724:	97 b1       	in	r25, 0x07	; 7
     726:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     728:	98 b1       	in	r25, 0x08	; 8
     72a:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     72c:	9a b1       	in	r25, 0x0a	; 10
     72e:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     730:	9b b1       	in	r25, 0x0b	; 11
     732:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     734:	8d b1       	in	r24, 0x0d	; 13
     736:	80 78       	andi	r24, 0x80	; 128
     738:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     73a:	8e b1       	in	r24, 0x0e	; 14
     73c:	8f 67       	ori	r24, 0x7F	; 127
     73e:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     740:	40 e0       	ldi	r20, 0x00	; 0
     742:	60 e8       	ldi	r22, 0x80	; 128
     744:	81 e6       	ldi	r24, 0x61	; 97
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	0e 94 b0 03 	call	0x760	; 0x760 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     74c:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     74e:	15 be       	out	0x35, r1	; 53

	ENABLE_INTERRUPTS();
     750:	78 94       	sei
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     752:	0e 94 71 03 	call	0x6e2	; 0x6e2 <SPI_0_initialization>
}

void Timer_initialization(void)
{

	Timer_init();
     756:	0e 94 1a 04 	call	0x834	; 0x834 <Timer_init>

	SPI_0_initialization();

	Timer_initialization();

	USART_initialization();
     75a:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <USART_initialization>
     75e:	08 95       	ret

00000760 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     760:	2f b7       	in	r18, 0x3f	; 63
	cli
     762:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     764:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     766:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     768:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     76a:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     76c:	08 95       	ret

0000076e <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     76e:	e4 e6       	ldi	r30, 0x64	; 100
     770:	f0 e0       	ldi	r31, 0x00	; 0
     772:	80 81       	ld	r24, Z
     774:	8b 7f       	andi	r24, 0xFB	; 251
     776:	80 83       	st	Z, r24
     778:	80 ed       	ldi	r24, 0xD0	; 208
     77a:	8c bd       	out	0x2c, r24	; 44
     77c:	ec ea       	ldi	r30, 0xAC	; 172
     77e:	f1 e0       	ldi	r31, 0x01	; 1
     780:	10 82       	st	Z, r1
     782:	16 82       	std	Z+6, r1	; 0x06
     784:	15 82       	std	Z+5, r1	; 0x05
     786:	08 95       	ret

00000788 <__vector_19>:
}

ISR(SPI0_STC_vect)
{
     788:	1f 92       	push	r1
     78a:	0f 92       	push	r0
     78c:	0f b6       	in	r0, 0x3f	; 63
     78e:	0f 92       	push	r0
     790:	11 24       	eor	r1, r1
     792:	2f 93       	push	r18
     794:	3f 93       	push	r19
     796:	4f 93       	push	r20
     798:	5f 93       	push	r21
     79a:	6f 93       	push	r22
     79c:	7f 93       	push	r23
     79e:	8f 93       	push	r24
     7a0:	9f 93       	push	r25
     7a2:	af 93       	push	r26
     7a4:	bf 93       	push	r27
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	ef 93       	push	r30
     7ac:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
     7ae:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
     7b0:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <SPI_0_desc+0x4>
     7b4:	82 30       	cpi	r24, 0x02	; 2
     7b6:	11 f1       	breq	.+68     	; 0x7fc <__vector_19+0x74>
		*SPI_0_desc.data = rdata;
     7b8:	cc ea       	ldi	r28, 0xAC	; 172
     7ba:	d1 e0       	ldi	r29, 0x01	; 1
     7bc:	a9 81       	ldd	r26, Y+1	; 0x01
     7be:	ba 81       	ldd	r27, Y+2	; 0x02
     7c0:	fd 01       	movw	r30, r26
     7c2:	91 93       	st	Z+, r25
	}

	SPI_0_desc.data++;
     7c4:	fa 83       	std	Y+2, r31	; 0x02
     7c6:	e9 83       	std	Y+1, r30	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     7c8:	81 30       	cpi	r24, 0x01	; 1
     7ca:	19 f0       	breq	.+6      	; 0x7d2 <__vector_19+0x4a>
		wdata = *SPI_0_desc.data;
     7cc:	11 96       	adiw	r26, 0x01	; 1
     7ce:	9c 91       	ld	r25, X
     7d0:	01 c0       	rjmp	.+2      	; 0x7d4 <__vector_19+0x4c>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
	uint8_t wdata = 0;
     7d2:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     7d4:	ec ea       	ldi	r30, 0xAC	; 172
     7d6:	f1 e0       	ldi	r31, 0x01	; 1
     7d8:	83 81       	ldd	r24, Z+3	; 0x03
     7da:	81 50       	subi	r24, 0x01	; 1
     7dc:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     7de:	88 23       	and	r24, r24
     7e0:	11 f0       	breq	.+4      	; 0x7e6 <__vector_19+0x5e>
		// more data to send, send a byte
		SPDR0 = wdata;
     7e2:	9e bd       	out	0x2e, r25	; 46
     7e4:	14 c0       	rjmp	.+40     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     7e6:	ec ea       	ldi	r30, 0xAC	; 172
     7e8:	f1 e0       	ldi	r31, 0x01	; 1
     7ea:	83 e0       	ldi	r24, 0x03	; 3
     7ec:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     7ee:	05 80       	ldd	r0, Z+5	; 0x05
     7f0:	f6 81       	ldd	r31, Z+6	; 0x06
     7f2:	e0 2d       	mov	r30, r0
     7f4:	30 97       	sbiw	r30, 0x00	; 0
     7f6:	59 f0       	breq	.+22     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
			SPI_0_desc.cb();
     7f8:	09 95       	icall
		}
	}
}
     7fa:	09 c0       	rjmp	.+18     	; 0x80e <__DATA_REGION_LENGTH__+0xe>

	if (SPI_0_desc.type != SPI_WRITE) {
		*SPI_0_desc.data = rdata;
	}

	SPI_0_desc.data++;
     7fc:	ec ea       	ldi	r30, 0xAC	; 172
     7fe:	f1 e0       	ldi	r31, 0x01	; 1
     800:	a1 81       	ldd	r26, Z+1	; 0x01
     802:	b2 81       	ldd	r27, Z+2	; 0x02
     804:	cd 01       	movw	r24, r26
     806:	01 96       	adiw	r24, 0x01	; 1
     808:	92 83       	std	Z+2, r25	; 0x02
     80a:	81 83       	std	Z+1, r24	; 0x01
     80c:	df cf       	rjmp	.-66     	; 0x7cc <__vector_19+0x44>
		SPI_0_desc.status = SPI_DONE;
		if (SPI_0_desc.cb != NULL) {
			SPI_0_desc.cb();
		}
	}
}
     80e:	ff 91       	pop	r31
     810:	ef 91       	pop	r30
     812:	df 91       	pop	r29
     814:	cf 91       	pop	r28
     816:	bf 91       	pop	r27
     818:	af 91       	pop	r26
     81a:	9f 91       	pop	r25
     81c:	8f 91       	pop	r24
     81e:	7f 91       	pop	r23
     820:	6f 91       	pop	r22
     822:	5f 91       	pop	r21
     824:	4f 91       	pop	r20
     826:	3f 91       	pop	r19
     828:	2f 91       	pop	r18
     82a:	0f 90       	pop	r0
     82c:	0f be       	out	0x3f, r0	; 63
     82e:	0f 90       	pop	r0
     830:	1f 90       	pop	r1
     832:	18 95       	reti

00000834 <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     834:	e4 e6       	ldi	r30, 0x64	; 100
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	80 81       	ld	r24, Z
     83a:	8f 7d       	andi	r24, 0xDF	; 223
     83c:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     83e:	82 e0       	ldi	r24, 0x02	; 2
     840:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     842:	95 e0       	ldi	r25, 0x05	; 5
     844:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     846:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	08 95       	ret

0000084e <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     84e:	e4 e6       	ldi	r30, 0x64	; 100
     850:	f0 e0       	ldi	r31, 0x00	; 0
     852:	80 81       	ld	r24, Z
     854:	8d 7f       	andi	r24, 0xFD	; 253
     856:	80 83       	st	Z, r24
     858:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     85c:	8c e0       	ldi	r24, 0x0C	; 12
     85e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     862:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     866:	88 e0       	ldi	r24, 0x08	; 8
     868:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	08 95       	ret

00000870 <USART_is_tx_ready>:
     870:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     874:	85 fb       	bst	r24, 5
     876:	88 27       	eor	r24, r24
     878:	80 f9       	bld	r24, 0
     87a:	08 95       	ret

0000087c <USART_is_tx_busy>:
     87c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     880:	86 fb       	bst	r24, 6
     882:	88 27       	eor	r24, r24
     884:	80 f9       	bld	r24, 0
     886:	91 e0       	ldi	r25, 0x01	; 1
     888:	89 27       	eor	r24, r25
     88a:	08 95       	ret

0000088c <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     88c:	e0 ec       	ldi	r30, 0xC0	; 192
     88e:	f0 e0       	ldi	r31, 0x00	; 0
     890:	90 81       	ld	r25, Z
     892:	95 ff       	sbrs	r25, 5
     894:	fd cf       	rjmp	.-6      	; 0x890 <USART_write+0x4>
		;
	UDR0 = data;
     896:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     89a:	08 95       	ret

0000089c <check_for_aks_block>:
     89c:	cf 92       	push	r12
     89e:	df 92       	push	r13
     8a0:	ff 92       	push	r15
     8a2:	0f 93       	push	r16
     8a4:	1f 93       	push	r17
     8a6:	cf 93       	push	r28
     8a8:	df 93       	push	r29
     8aa:	ec 01       	movw	r28, r24
     8ac:	ae 81       	ldd	r26, Y+6	; 0x06
     8ae:	bf 81       	ldd	r27, Y+7	; 0x07
     8b0:	eb 01       	movw	r28, r22
     8b2:	cc 0f       	add	r28, r28
     8b4:	dd 1f       	adc	r29, r29
     8b6:	c6 0f       	add	r28, r22
     8b8:	d7 1f       	adc	r29, r23
     8ba:	ca 0f       	add	r28, r26
     8bc:	db 1f       	adc	r29, r27
     8be:	fa 80       	ldd	r15, Y+2	; 0x02
     8c0:	fc 01       	movw	r30, r24
     8c2:	44 81       	ldd	r20, Z+4	; 0x04
     8c4:	55 81       	ldd	r21, Z+5	; 0x05
     8c6:	e6 e0       	ldi	r30, 0x06	; 6
     8c8:	e6 9f       	mul	r30, r22
     8ca:	90 01       	movw	r18, r0
     8cc:	e7 9f       	mul	r30, r23
     8ce:	30 0d       	add	r19, r0
     8d0:	11 24       	eor	r1, r1
     8d2:	8a 01       	movw	r16, r20
     8d4:	02 0f       	add	r16, r18
     8d6:	13 1f       	adc	r17, r19
     8d8:	f8 01       	movw	r30, r16
     8da:	22 81       	ldd	r18, Z+2	; 0x02
     8dc:	33 81       	ldd	r19, Z+3	; 0x03
     8de:	f9 01       	movw	r30, r18
     8e0:	21 81       	ldd	r18, Z+1	; 0x01
     8e2:	32 81       	ldd	r19, Z+2	; 0x02
     8e4:	f8 01       	movw	r30, r16
     8e6:	04 81       	ldd	r16, Z+4	; 0x04
     8e8:	15 81       	ldd	r17, Z+5	; 0x05
     8ea:	20 1b       	sub	r18, r16
     8ec:	31 0b       	sbc	r19, r17
     8ee:	e8 81       	ld	r30, Y
     8f0:	2e 1b       	sub	r18, r30
     8f2:	31 09       	sbc	r19, r1
     8f4:	ec 01       	movw	r28, r24
     8f6:	ea 81       	ldd	r30, Y+2	; 0x02
     8f8:	fb 81       	ldd	r31, Y+3	; 0x03
     8fa:	00 81       	ld	r16, Z
     8fc:	11 81       	ldd	r17, Z+1	; 0x01
     8fe:	fa 01       	movw	r30, r20
     900:	40 e0       	ldi	r20, 0x00	; 0
     902:	50 e0       	ldi	r21, 0x00	; 0
     904:	40 17       	cp	r20, r16
     906:	51 07       	cpc	r21, r17
     908:	39 f1       	breq	.+78     	; 0x958 <__stack+0x59>
     90a:	46 17       	cp	r20, r22
     90c:	57 07       	cpc	r21, r23
     90e:	f9 f0       	breq	.+62     	; 0x94e <__stack+0x4f>
     910:	12 96       	adiw	r26, 0x02	; 2
     912:	8c 91       	ld	r24, X
     914:	12 97       	sbiw	r26, 0x02	; 2
     916:	f8 12       	cpse	r15, r24
     918:	1a c0       	rjmp	.+52     	; 0x94e <__stack+0x4f>
     91a:	80 81       	ld	r24, Z
     91c:	85 58       	subi	r24, 0x85	; 133
     91e:	82 30       	cpi	r24, 0x02	; 2
     920:	e8 f0       	brcs	.+58     	; 0x95c <__stack+0x5d>
     922:	c4 80       	ldd	r12, Z+4	; 0x04
     924:	d5 80       	ldd	r13, Z+5	; 0x05
     926:	82 81       	ldd	r24, Z+2	; 0x02
     928:	93 81       	ldd	r25, Z+3	; 0x03
     92a:	ec 01       	movw	r28, r24
     92c:	89 81       	ldd	r24, Y+1	; 0x01
     92e:	9a 81       	ldd	r25, Y+2	; 0x02
     930:	c8 16       	cp	r12, r24
     932:	d9 06       	cpc	r13, r25
     934:	60 f4       	brcc	.+24     	; 0x94e <__stack+0x4f>
     936:	8c 19       	sub	r24, r12
     938:	9d 09       	sbc	r25, r13
     93a:	cc 91       	ld	r28, X
     93c:	d0 e0       	ldi	r29, 0x00	; 0
     93e:	c8 17       	cp	r28, r24
     940:	d9 07       	cpc	r29, r25
     942:	28 f4       	brcc	.+10     	; 0x94e <__stack+0x4f>
     944:	8c 1b       	sub	r24, r28
     946:	9d 0b       	sbc	r25, r29
     948:	28 17       	cp	r18, r24
     94a:	39 07       	cpc	r19, r25
     94c:	38 f0       	brcs	.+14     	; 0x95c <__stack+0x5d>
     94e:	4f 5f       	subi	r20, 0xFF	; 255
     950:	5f 4f       	sbci	r21, 0xFF	; 255
     952:	13 96       	adiw	r26, 0x03	; 3
     954:	36 96       	adiw	r30, 0x06	; 6
     956:	d6 cf       	rjmp	.-84     	; 0x904 <__stack+0x5>
     958:	80 e0       	ldi	r24, 0x00	; 0
     95a:	01 c0       	rjmp	.+2      	; 0x95e <__stack+0x5f>
     95c:	81 e0       	ldi	r24, 0x01	; 1
     95e:	df 91       	pop	r29
     960:	cf 91       	pop	r28
     962:	1f 91       	pop	r17
     964:	0f 91       	pop	r16
     966:	ff 90       	pop	r15
     968:	df 90       	pop	r13
     96a:	cf 90       	pop	r12
     96c:	08 95       	ret

0000096e <qtm_update_qtlib_timer>:
     96e:	20 91 b3 01 	lds	r18, 0x01B3	; 0x8001b3 <qtm_local_ms_timecount>
     972:	30 91 b4 01 	lds	r19, 0x01B4	; 0x8001b4 <qtm_local_ms_timecount+0x1>
     976:	82 0f       	add	r24, r18
     978:	93 1f       	adc	r25, r19
     97a:	90 93 b4 01 	sts	0x01B4, r25	; 0x8001b4 <qtm_local_ms_timecount+0x1>
     97e:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <qtm_local_ms_timecount>
     982:	08 95       	ret

00000984 <qtm_init_sensor_key>:
     984:	00 97       	sbiw	r24, 0x00	; 0
     986:	d9 f0       	breq	.+54     	; 0x9be <qtm_init_sensor_key+0x3a>
     988:	41 15       	cp	r20, r1
     98a:	51 05       	cpc	r21, r1
     98c:	c1 f0       	breq	.+48     	; 0x9be <qtm_init_sensor_key+0x3a>
     98e:	26 e0       	ldi	r18, 0x06	; 6
     990:	62 9f       	mul	r22, r18
     992:	b0 01       	movw	r22, r0
     994:	11 24       	eor	r1, r1
     996:	dc 01       	movw	r26, r24
     998:	14 96       	adiw	r26, 0x04	; 4
     99a:	ed 91       	ld	r30, X+
     99c:	fc 91       	ld	r31, X
     99e:	15 97       	sbiw	r26, 0x05	; 5
     9a0:	e6 0f       	add	r30, r22
     9a2:	f7 1f       	adc	r31, r23
     9a4:	21 e0       	ldi	r18, 0x01	; 1
     9a6:	20 83       	st	Z, r18
     9a8:	14 96       	adiw	r26, 0x04	; 4
     9aa:	8d 91       	ld	r24, X+
     9ac:	9c 91       	ld	r25, X
     9ae:	15 97       	sbiw	r26, 0x05	; 5
     9b0:	fc 01       	movw	r30, r24
     9b2:	e6 0f       	add	r30, r22
     9b4:	f7 1f       	adc	r31, r23
     9b6:	53 83       	std	Z+3, r21	; 0x03
     9b8:	42 83       	std	Z+2, r20	; 0x02
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	08 95       	ret
     9be:	8b e0       	ldi	r24, 0x0B	; 11
     9c0:	08 95       	ret

000009c2 <qtm_key_sensors_process>:
     9c2:	2f 92       	push	r2
     9c4:	3f 92       	push	r3
     9c6:	4f 92       	push	r4
     9c8:	5f 92       	push	r5
     9ca:	6f 92       	push	r6
     9cc:	7f 92       	push	r7
     9ce:	8f 92       	push	r8
     9d0:	9f 92       	push	r9
     9d2:	af 92       	push	r10
     9d4:	bf 92       	push	r11
     9d6:	cf 92       	push	r12
     9d8:	df 92       	push	r13
     9da:	ef 92       	push	r14
     9dc:	ff 92       	push	r15
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	00 97       	sbiw	r24, 0x00	; 0
     9e8:	09 f4       	brne	.+2      	; 0x9ec <qtm_key_sensors_process+0x2a>
     9ea:	7e c3       	rjmp	.+1788   	; 0x10e8 <qtm_key_sensors_process+0x726>
     9ec:	ec 01       	movw	r28, r24
     9ee:	a1 2c       	mov	r10, r1
     9f0:	b1 2c       	mov	r11, r1
     9f2:	81 2c       	mov	r8, r1
     9f4:	91 2c       	mov	r9, r1
     9f6:	21 2c       	mov	r2, r1
     9f8:	d1 2c       	mov	r13, r1
     9fa:	55 24       	eor	r5, r5
     9fc:	53 94       	inc	r5
     9fe:	33 e0       	ldi	r19, 0x03	; 3
     a00:	c3 2e       	mov	r12, r19
     a02:	45 e8       	ldi	r20, 0x85	; 133
     a04:	64 2e       	mov	r6, r20
     a06:	56 e8       	ldi	r21, 0x86	; 134
     a08:	75 2e       	mov	r7, r21
     a0a:	62 e0       	ldi	r22, 0x02	; 2
     a0c:	36 2e       	mov	r3, r22
     a0e:	78 e0       	ldi	r23, 0x08	; 8
     a10:	47 2e       	mov	r4, r23
     a12:	ea 81       	ldd	r30, Y+2	; 0x02
     a14:	fb 81       	ldd	r31, Y+3	; 0x03
     a16:	80 81       	ld	r24, Z
     a18:	91 81       	ldd	r25, Z+1	; 0x01
     a1a:	88 16       	cp	r8, r24
     a1c:	99 06       	cpc	r9, r25
     a1e:	08 f0       	brcs	.+2      	; 0xa22 <qtm_key_sensors_process+0x60>
     a20:	a6 c1       	rjmp	.+844    	; 0xd6e <qtm_key_sensors_process+0x3ac>
     a22:	75 01       	movw	r14, r10
     a24:	ee 0c       	add	r14, r14
     a26:	ff 1c       	adc	r15, r15
     a28:	ec 81       	ldd	r30, Y+4	; 0x04
     a2a:	fd 81       	ldd	r31, Y+5	; 0x05
     a2c:	ee 0d       	add	r30, r14
     a2e:	ff 1d       	adc	r31, r15
     a30:	a2 81       	ldd	r26, Z+2	; 0x02
     a32:	b3 81       	ldd	r27, Z+3	; 0x03
     a34:	9c 91       	ld	r25, X
     a36:	9e 71       	andi	r25, 0x1E	; 30
     a38:	09 f0       	breq	.+2      	; 0xa3c <qtm_key_sensors_process+0x7a>
     a3a:	50 82       	st	Z, r5
     a3c:	0c 81       	ldd	r16, Y+4	; 0x04
     a3e:	1d 81       	ldd	r17, Y+5	; 0x05
     a40:	0e 0d       	add	r16, r14
     a42:	1f 1d       	adc	r17, r15
     a44:	d8 01       	movw	r26, r16
     a46:	8c 91       	ld	r24, X
     a48:	84 30       	cpi	r24, 0x04	; 4
     a4a:	09 f4       	brne	.+2      	; 0xa4e <qtm_key_sensors_process+0x8c>
     a4c:	9e c0       	rjmp	.+316    	; 0xb8a <qtm_key_sensors_process+0x1c8>
     a4e:	38 f4       	brcc	.+14     	; 0xa5e <qtm_key_sensors_process+0x9c>
     a50:	82 30       	cpi	r24, 0x02	; 2
     a52:	d1 f0       	breq	.+52     	; 0xa88 <qtm_key_sensors_process+0xc6>
     a54:	08 f0       	brcs	.+2      	; 0xa58 <qtm_key_sensors_process+0x96>
     a56:	45 c0       	rjmp	.+138    	; 0xae2 <qtm_key_sensors_process+0x120>
     a58:	81 30       	cpi	r24, 0x01	; 1
     a5a:	59 f0       	breq	.+22     	; 0xa72 <qtm_key_sensors_process+0xb0>
     a5c:	81 c1       	rjmp	.+770    	; 0xd60 <qtm_key_sensors_process+0x39e>
     a5e:	85 38       	cpi	r24, 0x85	; 133
     a60:	09 f4       	brne	.+2      	; 0xa64 <qtm_key_sensors_process+0xa2>
     a62:	bf c0       	rjmp	.+382    	; 0xbe2 <qtm_key_sensors_process+0x220>
     a64:	86 38       	cpi	r24, 0x86	; 134
     a66:	09 f4       	brne	.+2      	; 0xa6a <qtm_key_sensors_process+0xa8>
     a68:	f5 c0       	rjmp	.+490    	; 0xc54 <qtm_key_sensors_process+0x292>
     a6a:	87 30       	cpi	r24, 0x07	; 7
     a6c:	09 f0       	breq	.+2      	; 0xa70 <qtm_key_sensors_process+0xae>
     a6e:	78 c1       	rjmp	.+752    	; 0xd60 <qtm_key_sensors_process+0x39e>
     a70:	36 c1       	rjmp	.+620    	; 0xcde <qtm_key_sensors_process+0x31c>
     a72:	91 11       	cpse	r25, r1
     a74:	67 c1       	rjmp	.+718    	; 0xd44 <qtm_key_sensors_process+0x382>
     a76:	f8 01       	movw	r30, r16
     a78:	30 82       	st	Z, r3
     a7a:	8c 81       	ldd	r24, Y+4	; 0x04
     a7c:	9d 81       	ldd	r25, Y+5	; 0x05
     a7e:	fc 01       	movw	r30, r24
     a80:	ee 0d       	add	r30, r14
     a82:	ff 1d       	adc	r31, r15
     a84:	41 82       	std	Z+1, r4	; 0x01
     a86:	5e c1       	rjmp	.+700    	; 0xd44 <qtm_key_sensors_process+0x382>
     a88:	d8 01       	movw	r26, r16
     a8a:	11 96       	adiw	r26, 0x01	; 1
     a8c:	2c 91       	ld	r18, X
     a8e:	11 97       	sbiw	r26, 0x01	; 1
     a90:	22 23       	and	r18, r18
     a92:	29 f1       	breq	.+74     	; 0xade <qtm_key_sensors_process+0x11c>
     a94:	12 96       	adiw	r26, 0x02	; 2
     a96:	ed 91       	ld	r30, X+
     a98:	fc 91       	ld	r31, X
     a9a:	13 97       	sbiw	r26, 0x03	; 3
     a9c:	25 30       	cpi	r18, 0x05	; 5
     a9e:	18 f0       	brcs	.+6      	; 0xaa6 <qtm_key_sensors_process+0xe4>
     aa0:	81 81       	ldd	r24, Z+1	; 0x01
     aa2:	92 81       	ldd	r25, Z+2	; 0x02
     aa4:	0e c0       	rjmp	.+28     	; 0xac2 <qtm_key_sensors_process+0x100>
     aa6:	d8 01       	movw	r26, r16
     aa8:	14 96       	adiw	r26, 0x04	; 4
     aaa:	8d 91       	ld	r24, X+
     aac:	9c 91       	ld	r25, X
     aae:	15 97       	sbiw	r26, 0x05	; 5
     ab0:	41 81       	ldd	r20, Z+1	; 0x01
     ab2:	52 81       	ldd	r21, Z+2	; 0x02
     ab4:	84 17       	cp	r24, r20
     ab6:	95 07       	cpc	r25, r21
     ab8:	69 f0       	breq	.+26     	; 0xad4 <qtm_key_sensors_process+0x112>
     aba:	48 17       	cp	r20, r24
     abc:	59 07       	cpc	r21, r25
     abe:	30 f4       	brcc	.+12     	; 0xacc <qtm_key_sensors_process+0x10a>
     ac0:	01 97       	sbiw	r24, 0x01	; 1
     ac2:	15 96       	adiw	r26, 0x05	; 5
     ac4:	9c 93       	st	X, r25
     ac6:	8e 93       	st	-X, r24
     ac8:	14 97       	sbiw	r26, 0x04	; 4
     aca:	04 c0       	rjmp	.+8      	; 0xad4 <qtm_key_sensors_process+0x112>
     acc:	01 96       	adiw	r24, 0x01	; 1
     ace:	f8 01       	movw	r30, r16
     ad0:	95 83       	std	Z+5, r25	; 0x05
     ad2:	84 83       	std	Z+4, r24	; 0x04
     ad4:	21 50       	subi	r18, 0x01	; 1
     ad6:	d8 01       	movw	r26, r16
     ad8:	11 96       	adiw	r26, 0x01	; 1
     ada:	2c 93       	st	X, r18
     adc:	33 c1       	rjmp	.+614    	; 0xd44 <qtm_key_sensors_process+0x382>
     ade:	f8 01       	movw	r30, r16
     ae0:	2d c1       	rjmp	.+602    	; 0xd3c <qtm_key_sensors_process+0x37a>
     ae2:	d8 01       	movw	r26, r16
     ae4:	14 96       	adiw	r26, 0x04	; 4
     ae6:	2d 91       	ld	r18, X+
     ae8:	3c 91       	ld	r19, X
     aea:	15 97       	sbiw	r26, 0x05	; 5
     aec:	12 96       	adiw	r26, 0x02	; 2
     aee:	ed 91       	ld	r30, X+
     af0:	fc 91       	ld	r31, X
     af2:	13 97       	sbiw	r26, 0x03	; 3
     af4:	41 81       	ldd	r20, Z+1	; 0x01
     af6:	52 81       	ldd	r21, Z+2	; 0x02
     af8:	24 17       	cp	r18, r20
     afa:	35 07       	cpc	r19, r21
     afc:	09 f4       	brne	.+2      	; 0xb00 <qtm_key_sensors_process+0x13e>
     afe:	30 c1       	rjmp	.+608    	; 0xd60 <qtm_key_sensors_process+0x39e>
     b00:	8e 81       	ldd	r24, Y+6	; 0x06
     b02:	9f 81       	ldd	r25, Y+7	; 0x07
     b04:	42 17       	cp	r20, r18
     b06:	53 07       	cpc	r21, r19
     b08:	f8 f4       	brcc	.+62     	; 0xb48 <qtm_key_sensors_process+0x186>
     b0a:	ea 81       	ldd	r30, Y+2	; 0x02
     b0c:	fb 81       	ldd	r31, Y+3	; 0x03
     b0e:	24 1b       	sub	r18, r20
     b10:	35 0b       	sbc	r19, r21
     b12:	dc 01       	movw	r26, r24
     b14:	aa 0d       	add	r26, r10
     b16:	bb 1d       	adc	r27, r11
     b18:	8c 91       	ld	r24, X
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	05 80       	ldd	r0, Z+5	; 0x05
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <qtm_key_sensors_process+0x162>
     b20:	95 95       	asr	r25
     b22:	87 95       	ror	r24
     b24:	0a 94       	dec	r0
     b26:	e2 f7       	brpl	.-8      	; 0xb20 <qtm_key_sensors_process+0x15e>
     b28:	99 27       	eor	r25, r25
     b2a:	28 17       	cp	r18, r24
     b2c:	39 07       	cpc	r19, r25
     b2e:	08 f4       	brcc	.+2      	; 0xb32 <qtm_key_sensors_process+0x170>
     b30:	17 c1       	rjmp	.+558    	; 0xd60 <qtm_key_sensors_process+0x39e>
     b32:	84 81       	ldd	r24, Z+4	; 0x04
     b34:	88 23       	and	r24, r24
     b36:	09 f4       	brne	.+2      	; 0xb3a <qtm_key_sensors_process+0x178>
     b38:	13 c1       	rjmp	.+550    	; 0xd60 <qtm_key_sensors_process+0x39e>
     b3a:	87 e0       	ldi	r24, 0x07	; 7
     b3c:	f8 01       	movw	r30, r16
     b3e:	80 83       	st	Z, r24
     b40:	ea 81       	ldd	r30, Y+2	; 0x02
     b42:	fb 81       	ldd	r31, Y+3	; 0x03
     b44:	24 81       	ldd	r18, Z+4	; 0x04
     b46:	1a c0       	rjmp	.+52     	; 0xb7c <qtm_key_sensors_process+0x1ba>
     b48:	fc 01       	movw	r30, r24
     b4a:	ea 0d       	add	r30, r10
     b4c:	fb 1d       	adc	r31, r11
     b4e:	42 1b       	sub	r20, r18
     b50:	53 0b       	sbc	r21, r19
     b52:	80 81       	ld	r24, Z
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	48 17       	cp	r20, r24
     b58:	59 07       	cpc	r21, r25
     b5a:	08 f4       	brcc	.+2      	; 0xb5e <qtm_key_sensors_process+0x19c>
     b5c:	01 c1       	rjmp	.+514    	; 0xd60 <qtm_key_sensors_process+0x39e>
     b5e:	82 81       	ldd	r24, Z+2	; 0x02
     b60:	88 23       	and	r24, r24
     b62:	31 f0       	breq	.+12     	; 0xb70 <qtm_key_sensors_process+0x1ae>
     b64:	b4 01       	movw	r22, r8
     b66:	ce 01       	movw	r24, r28
     b68:	0e 94 4e 04 	call	0x89c	; 0x89c <check_for_aks_block>
     b6c:	81 11       	cpse	r24, r1
     b6e:	f8 c0       	rjmp	.+496    	; 0xd60 <qtm_key_sensors_process+0x39e>
     b70:	e4 e0       	ldi	r30, 0x04	; 4
     b72:	d8 01       	movw	r26, r16
     b74:	ec 93       	st	X, r30
     b76:	ea 81       	ldd	r30, Y+2	; 0x02
     b78:	fb 81       	ldd	r31, Y+3	; 0x03
     b7a:	22 81       	ldd	r18, Z+2	; 0x02
     b7c:	8c 81       	ldd	r24, Y+4	; 0x04
     b7e:	9d 81       	ldd	r25, Y+5	; 0x05
     b80:	fc 01       	movw	r30, r24
     b82:	ee 0d       	add	r30, r14
     b84:	ff 1d       	adc	r31, r15
     b86:	21 83       	std	Z+1, r18	; 0x01
     b88:	dd c0       	rjmp	.+442    	; 0xd44 <qtm_key_sensors_process+0x382>
     b8a:	d8 01       	movw	r26, r16
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 91       	ld	r18, X+
     b90:	3c 91       	ld	r19, X
     b92:	15 97       	sbiw	r26, 0x05	; 5
     b94:	12 96       	adiw	r26, 0x02	; 2
     b96:	ed 91       	ld	r30, X+
     b98:	fc 91       	ld	r31, X
     b9a:	13 97       	sbiw	r26, 0x03	; 3
     b9c:	81 81       	ldd	r24, Z+1	; 0x01
     b9e:	92 81       	ldd	r25, Z+2	; 0x02
     ba0:	82 17       	cp	r24, r18
     ba2:	93 07       	cpc	r25, r19
     ba4:	08 f4       	brcc	.+2      	; 0xba8 <qtm_key_sensors_process+0x1e6>
     ba6:	bb c0       	rjmp	.+374    	; 0xd1e <qtm_key_sensors_process+0x35c>
     ba8:	ee 81       	ldd	r30, Y+6	; 0x06
     baa:	ff 81       	ldd	r31, Y+7	; 0x07
     bac:	ea 0d       	add	r30, r10
     bae:	fb 1d       	adc	r31, r11
     bb0:	82 1b       	sub	r24, r18
     bb2:	93 0b       	sbc	r25, r19
     bb4:	20 81       	ld	r18, Z
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	28 17       	cp	r18, r24
     bba:	39 07       	cpc	r19, r25
     bbc:	08 f0       	brcs	.+2      	; 0xbc0 <qtm_key_sensors_process+0x1fe>
     bbe:	c5 c0       	rjmp	.+394    	; 0xd4a <qtm_key_sensors_process+0x388>
     bc0:	82 81       	ldd	r24, Z+2	; 0x02
     bc2:	88 23       	and	r24, r24
     bc4:	31 f0       	breq	.+12     	; 0xbd2 <qtm_key_sensors_process+0x210>
     bc6:	b4 01       	movw	r22, r8
     bc8:	ce 01       	movw	r24, r28
     bca:	0e 94 4e 04 	call	0x89c	; 0x89c <check_for_aks_block>
     bce:	81 11       	cpse	r24, r1
     bd0:	c7 c0       	rjmp	.+398    	; 0xd60 <qtm_key_sensors_process+0x39e>
     bd2:	f8 01       	movw	r30, r16
     bd4:	81 81       	ldd	r24, Z+1	; 0x01
     bd6:	88 23       	and	r24, r24
     bd8:	09 f4       	brne	.+2      	; 0xbdc <qtm_key_sensors_process+0x21a>
     bda:	6a c0       	rjmp	.+212    	; 0xcb0 <qtm_key_sensors_process+0x2ee>
     bdc:	81 50       	subi	r24, 0x01	; 1
     bde:	81 83       	std	Z+1, r24	; 0x01
     be0:	b1 c0       	rjmp	.+354    	; 0xd44 <qtm_key_sensors_process+0x382>
     be2:	e8 81       	ld	r30, Y
     be4:	f9 81       	ldd	r31, Y+1	; 0x01
     be6:	aa 81       	ldd	r26, Y+2	; 0x02
     be8:	bb 81       	ldd	r27, Y+3	; 0x03
     bea:	18 96       	adiw	r26, 0x08	; 8
     bec:	8c 91       	ld	r24, X
     bee:	83 83       	std	Z+3, r24	; 0x03
     bf0:	ec 81       	ldd	r30, Y+4	; 0x04
     bf2:	fd 81       	ldd	r31, Y+5	; 0x05
     bf4:	ee 0d       	add	r30, r14
     bf6:	ff 1d       	adc	r31, r15
     bf8:	44 81       	ldd	r20, Z+4	; 0x04
     bfa:	55 81       	ldd	r21, Z+5	; 0x05
     bfc:	a2 81       	ldd	r26, Z+2	; 0x02
     bfe:	b3 81       	ldd	r27, Z+3	; 0x03
     c00:	11 96       	adiw	r26, 0x01	; 1
     c02:	8d 91       	ld	r24, X+
     c04:	9c 91       	ld	r25, X
     c06:	12 97       	sbiw	r26, 0x02	; 2
     c08:	84 17       	cp	r24, r20
     c0a:	95 07       	cpc	r25, r21
     c0c:	c0 f0       	brcs	.+48     	; 0xc3e <qtm_key_sensors_process+0x27c>
     c0e:	ae 81       	ldd	r26, Y+6	; 0x06
     c10:	bf 81       	ldd	r27, Y+7	; 0x07
     c12:	aa 0d       	add	r26, r10
     c14:	bb 1d       	adc	r27, r11
     c16:	6c 91       	ld	r22, X
     c18:	26 2f       	mov	r18, r22
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	11 96       	adiw	r26, 0x01	; 1
     c1e:	7c 91       	ld	r23, X
     c20:	7f 5f       	subi	r23, 0xFF	; 255
     c22:	02 c0       	rjmp	.+4      	; 0xc28 <qtm_key_sensors_process+0x266>
     c24:	35 95       	asr	r19
     c26:	27 95       	ror	r18
     c28:	7a 95       	dec	r23
     c2a:	e2 f7       	brpl	.-8      	; 0xc24 <qtm_key_sensors_process+0x262>
     c2c:	84 1b       	sub	r24, r20
     c2e:	95 0b       	sbc	r25, r21
     c30:	62 1b       	sub	r22, r18
     c32:	26 2f       	mov	r18, r22
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	28 17       	cp	r18, r24
     c38:	39 07       	cpc	r19, r25
     c3a:	08 f4       	brcc	.+2      	; 0xc3e <qtm_key_sensors_process+0x27c>
     c3c:	8f c0       	rjmp	.+286    	; 0xd5c <qtm_key_sensors_process+0x39a>
     c3e:	70 82       	st	Z, r7
     c40:	ea 81       	ldd	r30, Y+2	; 0x02
     c42:	fb 81       	ldd	r31, Y+3	; 0x03
     c44:	22 81       	ldd	r18, Z+2	; 0x02
     c46:	8c 81       	ldd	r24, Y+4	; 0x04
     c48:	9d 81       	ldd	r25, Y+5	; 0x05
     c4a:	fc 01       	movw	r30, r24
     c4c:	ee 0d       	add	r30, r14
     c4e:	ff 1d       	adc	r31, r15
     c50:	21 83       	std	Z+1, r18	; 0x01
     c52:	42 c0       	rjmp	.+132    	; 0xcd8 <qtm_key_sensors_process+0x316>
     c54:	d8 01       	movw	r26, r16
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	6d 91       	ld	r22, X+
     c5a:	7c 91       	ld	r23, X
     c5c:	15 97       	sbiw	r26, 0x05	; 5
     c5e:	12 96       	adiw	r26, 0x02	; 2
     c60:	ed 91       	ld	r30, X+
     c62:	fc 91       	ld	r31, X
     c64:	13 97       	sbiw	r26, 0x03	; 3
     c66:	21 81       	ldd	r18, Z+1	; 0x01
     c68:	32 81       	ldd	r19, Z+2	; 0x02
     c6a:	26 17       	cp	r18, r22
     c6c:	37 07       	cpc	r19, r23
     c6e:	58 f4       	brcc	.+22     	; 0xc86 <qtm_key_sensors_process+0x2c4>
     c70:	11 96       	adiw	r26, 0x01	; 1
     c72:	8c 91       	ld	r24, X
     c74:	11 97       	sbiw	r26, 0x01	; 1
     c76:	81 11       	cpse	r24, r1
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <qtm_key_sensors_process+0x2bc>
     c7a:	cc 92       	st	X, r12
     c7c:	6f c0       	rjmp	.+222    	; 0xd5c <qtm_key_sensors_process+0x39a>
     c7e:	81 50       	subi	r24, 0x01	; 1
     c80:	f8 01       	movw	r30, r16
     c82:	81 83       	std	Z+1, r24	; 0x01
     c84:	6b c0       	rjmp	.+214    	; 0xd5c <qtm_key_sensors_process+0x39a>
     c86:	ee 81       	ldd	r30, Y+6	; 0x06
     c88:	ff 81       	ldd	r31, Y+7	; 0x07
     c8a:	ea 0d       	add	r30, r10
     c8c:	fb 1d       	adc	r31, r11
     c8e:	80 81       	ld	r24, Z
     c90:	48 2f       	mov	r20, r24
     c92:	50 e0       	ldi	r21, 0x00	; 0
     c94:	91 81       	ldd	r25, Z+1	; 0x01
     c96:	9f 5f       	subi	r25, 0xFF	; 255
     c98:	02 c0       	rjmp	.+4      	; 0xc9e <qtm_key_sensors_process+0x2dc>
     c9a:	55 95       	asr	r21
     c9c:	47 95       	ror	r20
     c9e:	9a 95       	dec	r25
     ca0:	e2 f7       	brpl	.-8      	; 0xc9a <qtm_key_sensors_process+0x2d8>
     ca2:	26 1b       	sub	r18, r22
     ca4:	37 0b       	sbc	r19, r23
     ca6:	84 1b       	sub	r24, r20
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	82 17       	cp	r24, r18
     cac:	93 07       	cpc	r25, r19
     cae:	60 f4       	brcc	.+24     	; 0xcc8 <qtm_key_sensors_process+0x306>
     cb0:	d8 01       	movw	r26, r16
     cb2:	6c 92       	st	X, r6
     cb4:	ea 81       	ldd	r30, Y+2	; 0x02
     cb6:	fb 81       	ldd	r31, Y+3	; 0x03
     cb8:	23 81       	ldd	r18, Z+3	; 0x03
     cba:	8c 81       	ldd	r24, Y+4	; 0x04
     cbc:	9d 81       	ldd	r25, Y+5	; 0x05
     cbe:	fc 01       	movw	r30, r24
     cc0:	ee 0d       	add	r30, r14
     cc2:	ff 1d       	adc	r31, r15
     cc4:	21 83       	std	Z+1, r18	; 0x01
     cc6:	4a c0       	rjmp	.+148    	; 0xd5c <qtm_key_sensors_process+0x39a>
     cc8:	f8 01       	movw	r30, r16
     cca:	81 81       	ldd	r24, Z+1	; 0x01
     ccc:	81 11       	cpse	r24, r1
     cce:	02 c0       	rjmp	.+4      	; 0xcd4 <qtm_key_sensors_process+0x312>
     cd0:	c0 82       	st	Z, r12
     cd2:	44 c0       	rjmp	.+136    	; 0xd5c <qtm_key_sensors_process+0x39a>
     cd4:	81 50       	subi	r24, 0x01	; 1
     cd6:	81 83       	std	Z+1, r24	; 0x01
     cd8:	22 24       	eor	r2, r2
     cda:	23 94       	inc	r2
     cdc:	33 c0       	rjmp	.+102    	; 0xd44 <qtm_key_sensors_process+0x382>
     cde:	f8 01       	movw	r30, r16
     ce0:	24 81       	ldd	r18, Z+4	; 0x04
     ce2:	35 81       	ldd	r19, Z+5	; 0x05
     ce4:	02 80       	ldd	r0, Z+2	; 0x02
     ce6:	f3 81       	ldd	r31, Z+3	; 0x03
     ce8:	e0 2d       	mov	r30, r0
     cea:	81 81       	ldd	r24, Z+1	; 0x01
     cec:	92 81       	ldd	r25, Z+2	; 0x02
     cee:	82 17       	cp	r24, r18
     cf0:	93 07       	cpc	r25, r19
     cf2:	58 f5       	brcc	.+86     	; 0xd4a <qtm_key_sensors_process+0x388>
     cf4:	28 1b       	sub	r18, r24
     cf6:	39 0b       	sbc	r19, r25
     cf8:	ee 81       	ldd	r30, Y+6	; 0x06
     cfa:	ff 81       	ldd	r31, Y+7	; 0x07
     cfc:	ea 0d       	add	r30, r10
     cfe:	fb 1d       	adc	r31, r11
     d00:	80 81       	ld	r24, Z
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	ea 81       	ldd	r30, Y+2	; 0x02
     d06:	fb 81       	ldd	r31, Y+3	; 0x03
     d08:	05 80       	ldd	r0, Z+5	; 0x05
     d0a:	02 c0       	rjmp	.+4      	; 0xd10 <qtm_key_sensors_process+0x34e>
     d0c:	95 95       	asr	r25
     d0e:	87 95       	ror	r24
     d10:	0a 94       	dec	r0
     d12:	e2 f7       	brpl	.-8      	; 0xd0c <qtm_key_sensors_process+0x34a>
     d14:	99 27       	eor	r25, r25
     d16:	28 17       	cp	r18, r24
     d18:	39 07       	cpc	r19, r25
     d1a:	18 f4       	brcc	.+6      	; 0xd22 <qtm_key_sensors_process+0x360>
     d1c:	d8 01       	movw	r26, r16
     d1e:	cc 92       	st	X, r12
     d20:	16 c0       	rjmp	.+44     	; 0xd4e <qtm_key_sensors_process+0x38c>
     d22:	f8 01       	movw	r30, r16
     d24:	81 81       	ldd	r24, Z+1	; 0x01
     d26:	81 11       	cpse	r24, r1
     d28:	0b c0       	rjmp	.+22     	; 0xd40 <qtm_key_sensors_process+0x37e>
     d2a:	50 82       	st	Z, r5
     d2c:	8c 81       	ldd	r24, Y+4	; 0x04
     d2e:	9d 81       	ldd	r25, Y+5	; 0x05
     d30:	fc 01       	movw	r30, r24
     d32:	ee 0d       	add	r30, r14
     d34:	ff 1d       	adc	r31, r15
     d36:	02 80       	ldd	r0, Z+2	; 0x02
     d38:	f3 81       	ldd	r31, Z+3	; 0x03
     d3a:	e0 2d       	mov	r30, r0
     d3c:	c0 82       	st	Z, r12
     d3e:	10 c0       	rjmp	.+32     	; 0xd60 <qtm_key_sensors_process+0x39e>
     d40:	81 50       	subi	r24, 0x01	; 1
     d42:	81 83       	std	Z+1, r24	; 0x01
     d44:	dd 24       	eor	r13, r13
     d46:	d3 94       	inc	r13
     d48:	0b c0       	rjmp	.+22     	; 0xd60 <qtm_key_sensors_process+0x39e>
     d4a:	f8 01       	movw	r30, r16
     d4c:	c0 82       	st	Z, r12
     d4e:	8c 81       	ldd	r24, Y+4	; 0x04
     d50:	9d 81       	ldd	r25, Y+5	; 0x05
     d52:	fc 01       	movw	r30, r24
     d54:	ee 0d       	add	r30, r14
     d56:	ff 1d       	adc	r31, r15
     d58:	11 82       	std	Z+1, r1	; 0x01
     d5a:	02 c0       	rjmp	.+4      	; 0xd60 <qtm_key_sensors_process+0x39e>
     d5c:	22 24       	eor	r2, r2
     d5e:	23 94       	inc	r2
     d60:	ff ef       	ldi	r31, 0xFF	; 255
     d62:	8f 1a       	sub	r8, r31
     d64:	9f 0a       	sbc	r9, r31
     d66:	83 e0       	ldi	r24, 0x03	; 3
     d68:	a8 0e       	add	r10, r24
     d6a:	b1 1c       	adc	r11, r1
     d6c:	52 ce       	rjmp	.-860    	; 0xa12 <qtm_key_sensors_process+0x50>
     d6e:	e8 81       	ld	r30, Y
     d70:	f9 81       	ldd	r31, Y+1	; 0x01
     d72:	80 81       	ld	r24, Z
     d74:	87 ff       	sbrs	r24, 7
     d76:	23 c0       	rjmp	.+70     	; 0xdbe <qtm_key_sensors_process+0x3fc>
     d78:	40 e0       	ldi	r20, 0x00	; 0
     d7a:	50 e0       	ldi	r21, 0x00	; 0
     d7c:	20 e0       	ldi	r18, 0x00	; 0
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	ea 81       	ldd	r30, Y+2	; 0x02
     d82:	fb 81       	ldd	r31, Y+3	; 0x03
     d84:	80 81       	ld	r24, Z
     d86:	91 81       	ldd	r25, Z+1	; 0x01
     d88:	28 17       	cp	r18, r24
     d8a:	39 07       	cpc	r19, r25
     d8c:	98 f4       	brcc	.+38     	; 0xdb4 <qtm_key_sensors_process+0x3f2>
     d8e:	ec 81       	ldd	r30, Y+4	; 0x04
     d90:	fd 81       	ldd	r31, Y+5	; 0x05
     d92:	e4 0f       	add	r30, r20
     d94:	f5 1f       	adc	r31, r21
     d96:	a2 81       	ldd	r26, Z+2	; 0x02
     d98:	b3 81       	ldd	r27, Z+3	; 0x03
     d9a:	8c 91       	ld	r24, X
     d9c:	80 fd       	sbrc	r24, 0
     d9e:	05 c0       	rjmp	.+10     	; 0xdaa <qtm_key_sensors_process+0x3e8>
     da0:	90 81       	ld	r25, Z
     da2:	97 7f       	andi	r25, 0xF7	; 247
     da4:	11 f0       	breq	.+4      	; 0xdaa <qtm_key_sensors_process+0x3e8>
     da6:	81 60       	ori	r24, 0x01	; 1
     da8:	8c 93       	st	X, r24
     daa:	2f 5f       	subi	r18, 0xFF	; 255
     dac:	3f 4f       	sbci	r19, 0xFF	; 255
     dae:	4a 5f       	subi	r20, 0xFA	; 250
     db0:	5f 4f       	sbci	r21, 0xFF	; 255
     db2:	e6 cf       	rjmp	.-52     	; 0xd80 <qtm_key_sensors_process+0x3be>
     db4:	e8 81       	ld	r30, Y
     db6:	f9 81       	ldd	r31, Y+1	; 0x01
     db8:	80 81       	ld	r24, Z
     dba:	8f 77       	andi	r24, 0x7F	; 127
     dbc:	80 83       	st	Z, r24
     dbe:	d1 10       	cpse	r13, r1
     dc0:	07 c0       	rjmp	.+14     	; 0xdd0 <qtm_key_sensors_process+0x40e>
     dc2:	e8 81       	ld	r30, Y
     dc4:	f9 81       	ldd	r31, Y+1	; 0x01
     dc6:	21 10       	cpse	r2, r1
     dc8:	6f c0       	rjmp	.+222    	; 0xea8 <qtm_key_sensors_process+0x4e6>
     dca:	80 81       	ld	r24, Z
     dcc:	8e 7f       	andi	r24, 0xFE	; 254
     dce:	6e c0       	rjmp	.+220    	; 0xeac <qtm_key_sensors_process+0x4ea>
     dd0:	ea 81       	ldd	r30, Y+2	; 0x02
     dd2:	fb 81       	ldd	r31, Y+3	; 0x03
     dd4:	81 85       	ldd	r24, Z+9	; 0x09
     dd6:	88 23       	and	r24, r24
     dd8:	a1 f3       	breq	.-24     	; 0xdc2 <qtm_key_sensors_process+0x400>
     dda:	e8 81       	ld	r30, Y
     ddc:	f9 81       	ldd	r31, Y+1	; 0x01
     dde:	80 81       	ld	r24, Z
     de0:	80 68       	ori	r24, 0x80	; 128
     de2:	80 83       	st	Z, r24
     de4:	ea 81       	ldd	r30, Y+2	; 0x02
     de6:	fb 81       	ldd	r31, Y+3	; 0x03
     de8:	81 85       	ldd	r24, Z+9	; 0x09
     dea:	81 30       	cpi	r24, 0x01	; 1
     dec:	51 f7       	brne	.-44     	; 0xdc2 <qtm_key_sensors_process+0x400>
     dee:	40 e0       	ldi	r20, 0x00	; 0
     df0:	50 e0       	ldi	r21, 0x00	; 0
     df2:	20 e0       	ldi	r18, 0x00	; 0
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	96 e0       	ldi	r25, 0x06	; 6
     df8:	d9 2e       	mov	r13, r25
     dfa:	ea 81       	ldd	r30, Y+2	; 0x02
     dfc:	fb 81       	ldd	r31, Y+3	; 0x03
     dfe:	60 81       	ld	r22, Z
     e00:	71 81       	ldd	r23, Z+1	; 0x01
     e02:	26 17       	cp	r18, r22
     e04:	37 07       	cpc	r19, r23
     e06:	e8 f6       	brcc	.-70     	; 0xdc2 <qtm_key_sensors_process+0x400>
     e08:	0c 81       	ldd	r16, Y+4	; 0x04
     e0a:	1d 81       	ldd	r17, Y+5	; 0x05
     e0c:	fa 01       	movw	r30, r20
     e0e:	ee 0f       	add	r30, r30
     e10:	ff 1f       	adc	r31, r31
     e12:	e0 0f       	add	r30, r16
     e14:	f1 1f       	adc	r31, r17
     e16:	80 81       	ld	r24, Z
     e18:	98 2f       	mov	r25, r24
     e1a:	97 7f       	andi	r25, 0xF7	; 247
     e1c:	a1 f1       	breq	.+104    	; 0xe86 <qtm_key_sensors_process+0x4c4>
     e1e:	85 38       	cpi	r24, 0x85	; 133
     e20:	11 f0       	breq	.+4      	; 0xe26 <qtm_key_sensors_process+0x464>
     e22:	83 30       	cpi	r24, 0x03	; 3
     e24:	b1 f5       	brne	.+108    	; 0xe92 <qtm_key_sensors_process+0x4d0>
     e26:	ee 80       	ldd	r14, Y+6	; 0x06
     e28:	ff 80       	ldd	r15, Y+7	; 0x07
     e2a:	d7 01       	movw	r26, r14
     e2c:	a4 0f       	add	r26, r20
     e2e:	b5 1f       	adc	r27, r21
     e30:	12 96       	adiw	r26, 0x02	; 2
     e32:	bc 90       	ld	r11, X
     e34:	bb 20       	and	r11, r11
     e36:	39 f1       	breq	.+78     	; 0xe86 <qtm_key_sensors_process+0x4c4>
     e38:	80 e0       	ldi	r24, 0x00	; 0
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	c1 2c       	mov	r12, r1
     e3e:	86 17       	cp	r24, r22
     e40:	97 07       	cpc	r25, r23
     e42:	f8 f4       	brcc	.+62     	; 0xe82 <qtm_key_sensors_process+0x4c0>
     e44:	28 17       	cp	r18, r24
     e46:	39 07       	cpc	r19, r25
     e48:	d1 f0       	breq	.+52     	; 0xe7e <qtm_key_sensors_process+0x4bc>
     e4a:	d8 9e       	mul	r13, r24
     e4c:	d0 01       	movw	r26, r0
     e4e:	d9 9e       	mul	r13, r25
     e50:	b0 0d       	add	r27, r0
     e52:	11 24       	eor	r1, r1
     e54:	a0 0f       	add	r26, r16
     e56:	b1 1f       	adc	r27, r17
     e58:	ac 91       	ld	r26, X
     e5a:	a4 30       	cpi	r26, 0x04	; 4
     e5c:	11 f0       	breq	.+4      	; 0xe62 <qtm_key_sensors_process+0x4a0>
     e5e:	a6 38       	cpi	r26, 0x86	; 134
     e60:	71 f4       	brne	.+28     	; 0xe7e <qtm_key_sensors_process+0x4bc>
     e62:	dc 01       	movw	r26, r24
     e64:	aa 0f       	add	r26, r26
     e66:	bb 1f       	adc	r27, r27
     e68:	a8 0f       	add	r26, r24
     e6a:	b9 1f       	adc	r27, r25
     e6c:	ae 0d       	add	r26, r14
     e6e:	bf 1d       	adc	r27, r15
     e70:	12 96       	adiw	r26, 0x02	; 2
     e72:	ac 91       	ld	r26, X
     e74:	ba 12       	cpse	r11, r26
     e76:	03 c0       	rjmp	.+6      	; 0xe7e <qtm_key_sensors_process+0x4bc>
     e78:	cb 01       	movw	r24, r22
     e7a:	cc 24       	eor	r12, r12
     e7c:	c3 94       	inc	r12
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	de cf       	rjmp	.-68     	; 0xe3e <qtm_key_sensors_process+0x47c>
     e82:	c1 10       	cpse	r12, r1
     e84:	06 c0       	rjmp	.+12     	; 0xe92 <qtm_key_sensors_process+0x4d0>
     e86:	02 80       	ldd	r0, Z+2	; 0x02
     e88:	f3 81       	ldd	r31, Z+3	; 0x03
     e8a:	e0 2d       	mov	r30, r0
     e8c:	80 81       	ld	r24, Z
     e8e:	8e 7f       	andi	r24, 0xFE	; 254
     e90:	05 c0       	rjmp	.+10     	; 0xe9c <qtm_key_sensors_process+0x4da>
     e92:	02 80       	ldd	r0, Z+2	; 0x02
     e94:	f3 81       	ldd	r31, Z+3	; 0x03
     e96:	e0 2d       	mov	r30, r0
     e98:	80 81       	ld	r24, Z
     e9a:	81 60       	ori	r24, 0x01	; 1
     e9c:	80 83       	st	Z, r24
     e9e:	2f 5f       	subi	r18, 0xFF	; 255
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	4d 5f       	subi	r20, 0xFD	; 253
     ea4:	5f 4f       	sbci	r21, 0xFF	; 255
     ea6:	a9 cf       	rjmp	.-174    	; 0xdfa <qtm_key_sensors_process+0x438>
     ea8:	80 81       	ld	r24, Z
     eaa:	81 60       	ori	r24, 0x01	; 1
     eac:	80 83       	st	Z, r24
     eae:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <qtm_local_ms_timecount>
     eb2:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <qtm_local_ms_timecount+0x1>
     eb6:	e8 81       	ld	r30, Y
     eb8:	f9 81       	ldd	r31, Y+1	; 0x01
     eba:	21 81       	ldd	r18, Z+1	; 0x01
     ebc:	32 81       	ldd	r19, Z+2	; 0x02
     ebe:	a9 01       	movw	r20, r18
     ec0:	48 53       	subi	r20, 0x38	; 56
     ec2:	5f 4f       	sbci	r21, 0xFF	; 255
     ec4:	48 17       	cp	r20, r24
     ec6:	59 07       	cpc	r21, r25
     ec8:	38 f4       	brcc	.+14     	; 0xed8 <qtm_key_sensors_process+0x516>
     eca:	82 1b       	sub	r24, r18
     ecc:	93 0b       	sbc	r25, r19
     ece:	aa 24       	eor	r10, r10
     ed0:	a3 94       	inc	r10
     ed2:	a3 e0       	ldi	r26, 0x03	; 3
     ed4:	ba 2e       	mov	r11, r26
     ed6:	44 c0       	rjmp	.+136    	; 0xf60 <qtm_key_sensors_process+0x59e>
     ed8:	82 17       	cp	r24, r18
     eda:	93 07       	cpc	r25, r19
     edc:	10 f0       	brcs	.+4      	; 0xee2 <qtm_key_sensors_process+0x520>
     ede:	80 e0       	ldi	r24, 0x00	; 0
     ee0:	04 c1       	rjmp	.+520    	; 0x10ea <qtm_key_sensors_process+0x728>
     ee2:	82 1b       	sub	r24, r18
     ee4:	93 0b       	sbc	r25, r19
     ee6:	01 97       	sbiw	r24, 0x01	; 1
     ee8:	89 3c       	cpi	r24, 0xC9	; 201
     eea:	91 05       	cpc	r25, r1
     eec:	c0 f3       	brcs	.-16     	; 0xede <qtm_key_sensors_process+0x51c>
     eee:	ef cf       	rjmp	.-34     	; 0xece <qtm_key_sensors_process+0x50c>
     ef0:	88 5c       	subi	r24, 0xC8	; 200
     ef2:	91 09       	sbc	r25, r1
     ef4:	e8 81       	ld	r30, Y
     ef6:	f9 81       	ldd	r31, Y+1	; 0x01
     ef8:	21 81       	ldd	r18, Z+1	; 0x01
     efa:	32 81       	ldd	r19, Z+2	; 0x02
     efc:	28 53       	subi	r18, 0x38	; 56
     efe:	3f 4f       	sbci	r19, 0xFF	; 255
     f00:	32 83       	std	Z+2, r19	; 0x02
     f02:	21 83       	std	Z+1, r18	; 0x01
     f04:	23 81       	ldd	r18, Z+3	; 0x03
     f06:	21 11       	cpse	r18, r1
     f08:	96 c0       	rjmp	.+300    	; 0x1036 <qtm_key_sensors_process+0x674>
     f0a:	24 81       	ldd	r18, Z+4	; 0x04
     f0c:	22 23       	and	r18, r18
     f0e:	11 f0       	breq	.+4      	; 0xf14 <qtm_key_sensors_process+0x552>
     f10:	21 50       	subi	r18, 0x01	; 1
     f12:	24 83       	std	Z+4, r18	; 0x04
     f14:	e8 81       	ld	r30, Y
     f16:	f9 81       	ldd	r31, Y+1	; 0x01
     f18:	25 81       	ldd	r18, Z+5	; 0x05
     f1a:	22 23       	and	r18, r18
     f1c:	11 f0       	breq	.+4      	; 0xf22 <qtm_key_sensors_process+0x560>
     f1e:	21 50       	subi	r18, 0x01	; 1
     f20:	25 83       	std	Z+5, r18	; 0x05
     f22:	8a 80       	ldd	r8, Y+2	; 0x02
     f24:	9b 80       	ldd	r9, Y+3	; 0x03
     f26:	d4 01       	movw	r26, r8
     f28:	16 96       	adiw	r26, 0x06	; 6
     f2a:	2c 91       	ld	r18, X
     f2c:	16 97       	sbiw	r26, 0x06	; 6
     f2e:	21 11       	cpse	r18, r1
     f30:	1b c0       	rjmp	.+54     	; 0xf68 <qtm_key_sensors_process+0x5a6>
     f32:	8a 80       	ldd	r8, Y+2	; 0x02
     f34:	9b 80       	ldd	r9, Y+3	; 0x03
     f36:	f4 01       	movw	r30, r8
     f38:	27 81       	ldd	r18, Z+7	; 0x07
     f3a:	21 11       	cpse	r18, r1
     f3c:	48 c0       	rjmp	.+144    	; 0xfce <qtm_key_sensors_process+0x60c>
     f3e:	ea 81       	ldd	r30, Y+2	; 0x02
     f40:	fb 81       	ldd	r31, Y+3	; 0x03
     f42:	23 81       	ldd	r18, Z+3	; 0x03
     f44:	22 23       	and	r18, r18
     f46:	61 f0       	breq	.+24     	; 0xf60 <qtm_key_sensors_process+0x59e>
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	a0 e0       	ldi	r26, 0x00	; 0
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	ea 81       	ldd	r30, Y+2	; 0x02
     f52:	fb 81       	ldd	r31, Y+3	; 0x03
     f54:	40 81       	ld	r20, Z
     f56:	51 81       	ldd	r21, Z+1	; 0x01
     f58:	a4 17       	cp	r26, r20
     f5a:	b5 07       	cpc	r27, r21
     f5c:	08 f4       	brcc	.+2      	; 0xf60 <qtm_key_sensors_process+0x59e>
     f5e:	6e c0       	rjmp	.+220    	; 0x103c <qtm_key_sensors_process+0x67a>
     f60:	89 3c       	cpi	r24, 0xC9	; 201
     f62:	91 05       	cpc	r25, r1
     f64:	28 f6       	brcc	.-118    	; 0xef0 <qtm_key_sensors_process+0x52e>
     f66:	bb cf       	rjmp	.-138    	; 0xede <qtm_key_sensors_process+0x51c>
     f68:	08 81       	ld	r16, Y
     f6a:	19 81       	ldd	r17, Y+1	; 0x01
     f6c:	f8 01       	movw	r30, r16
     f6e:	24 81       	ldd	r18, Z+4	; 0x04
     f70:	21 11       	cpse	r18, r1
     f72:	df cf       	rjmp	.-66     	; 0xf32 <qtm_key_sensors_process+0x570>
     f74:	ed 90       	ld	r14, X+
     f76:	fc 90       	ld	r15, X
     f78:	60 e0       	ldi	r22, 0x00	; 0
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	40 e0       	ldi	r20, 0x00	; 0
     f7e:	50 e0       	ldi	r21, 0x00	; 0
     f80:	4e 15       	cp	r20, r14
     f82:	5f 05       	cpc	r21, r15
     f84:	f1 f0       	breq	.+60     	; 0xfc2 <qtm_key_sensors_process+0x600>
     f86:	ec 81       	ldd	r30, Y+4	; 0x04
     f88:	fd 81       	ldd	r31, Y+5	; 0x05
     f8a:	e6 0f       	add	r30, r22
     f8c:	f7 1f       	adc	r31, r23
     f8e:	20 81       	ld	r18, Z
     f90:	23 30       	cpi	r18, 0x03	; 3
     f92:	11 f0       	breq	.+4      	; 0xf98 <qtm_key_sensors_process+0x5d6>
     f94:	28 30       	cpi	r18, 0x08	; 8
     f96:	81 f4       	brne	.+32     	; 0xfb8 <qtm_key_sensors_process+0x5f6>
     f98:	24 81       	ldd	r18, Z+4	; 0x04
     f9a:	35 81       	ldd	r19, Z+5	; 0x05
     f9c:	c2 80       	ldd	r12, Z+2	; 0x02
     f9e:	d3 80       	ldd	r13, Z+3	; 0x03
     fa0:	d6 01       	movw	r26, r12
     fa2:	11 96       	adiw	r26, 0x01	; 1
     fa4:	cd 90       	ld	r12, X+
     fa6:	dc 90       	ld	r13, X
     fa8:	12 97       	sbiw	r26, 0x02	; 2
     faa:	2c 15       	cp	r18, r12
     fac:	3d 05       	cpc	r19, r13
     fae:	20 f4       	brcc	.+8      	; 0xfb8 <qtm_key_sensors_process+0x5f6>
     fb0:	2f 5f       	subi	r18, 0xFF	; 255
     fb2:	3f 4f       	sbci	r19, 0xFF	; 255
     fb4:	35 83       	std	Z+5, r19	; 0x05
     fb6:	24 83       	std	Z+4, r18	; 0x04
     fb8:	4f 5f       	subi	r20, 0xFF	; 255
     fba:	5f 4f       	sbci	r21, 0xFF	; 255
     fbc:	6a 5f       	subi	r22, 0xFA	; 250
     fbe:	7f 4f       	sbci	r23, 0xFF	; 255
     fc0:	df cf       	rjmp	.-66     	; 0xf80 <qtm_key_sensors_process+0x5be>
     fc2:	f4 01       	movw	r30, r8
     fc4:	26 81       	ldd	r18, Z+6	; 0x06
     fc6:	d8 01       	movw	r26, r16
     fc8:	14 96       	adiw	r26, 0x04	; 4
     fca:	2c 93       	st	X, r18
     fcc:	b2 cf       	rjmp	.-156    	; 0xf32 <qtm_key_sensors_process+0x570>
     fce:	08 81       	ld	r16, Y
     fd0:	19 81       	ldd	r17, Y+1	; 0x01
     fd2:	d8 01       	movw	r26, r16
     fd4:	15 96       	adiw	r26, 0x05	; 5
     fd6:	2c 91       	ld	r18, X
     fd8:	21 11       	cpse	r18, r1
     fda:	b1 cf       	rjmp	.-158    	; 0xf3e <qtm_key_sensors_process+0x57c>
     fdc:	e0 80       	ld	r14, Z
     fde:	f1 80       	ldd	r15, Z+1	; 0x01
     fe0:	60 e0       	ldi	r22, 0x00	; 0
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	40 e0       	ldi	r20, 0x00	; 0
     fe6:	50 e0       	ldi	r21, 0x00	; 0
     fe8:	4e 15       	cp	r20, r14
     fea:	5f 05       	cpc	r21, r15
     fec:	f1 f0       	breq	.+60     	; 0x102a <qtm_key_sensors_process+0x668>
     fee:	ec 81       	ldd	r30, Y+4	; 0x04
     ff0:	fd 81       	ldd	r31, Y+5	; 0x05
     ff2:	e6 0f       	add	r30, r22
     ff4:	f7 1f       	adc	r31, r23
     ff6:	20 81       	ld	r18, Z
     ff8:	23 30       	cpi	r18, 0x03	; 3
     ffa:	11 f0       	breq	.+4      	; 0x1000 <qtm_key_sensors_process+0x63e>
     ffc:	28 30       	cpi	r18, 0x08	; 8
     ffe:	81 f4       	brne	.+32     	; 0x1020 <qtm_key_sensors_process+0x65e>
    1000:	24 81       	ldd	r18, Z+4	; 0x04
    1002:	35 81       	ldd	r19, Z+5	; 0x05
    1004:	c2 80       	ldd	r12, Z+2	; 0x02
    1006:	d3 80       	ldd	r13, Z+3	; 0x03
    1008:	d6 01       	movw	r26, r12
    100a:	11 96       	adiw	r26, 0x01	; 1
    100c:	cd 90       	ld	r12, X+
    100e:	dc 90       	ld	r13, X
    1010:	12 97       	sbiw	r26, 0x02	; 2
    1012:	c2 16       	cp	r12, r18
    1014:	d3 06       	cpc	r13, r19
    1016:	20 f4       	brcc	.+8      	; 0x1020 <qtm_key_sensors_process+0x65e>
    1018:	21 50       	subi	r18, 0x01	; 1
    101a:	31 09       	sbc	r19, r1
    101c:	35 83       	std	Z+5, r19	; 0x05
    101e:	24 83       	std	Z+4, r18	; 0x04
    1020:	4f 5f       	subi	r20, 0xFF	; 255
    1022:	5f 4f       	sbci	r21, 0xFF	; 255
    1024:	6a 5f       	subi	r22, 0xFA	; 250
    1026:	7f 4f       	sbci	r23, 0xFF	; 255
    1028:	df cf       	rjmp	.-66     	; 0xfe8 <qtm_key_sensors_process+0x626>
    102a:	f4 01       	movw	r30, r8
    102c:	27 81       	ldd	r18, Z+7	; 0x07
    102e:	d8 01       	movw	r26, r16
    1030:	15 96       	adiw	r26, 0x05	; 5
    1032:	2c 93       	st	X, r18
    1034:	84 cf       	rjmp	.-248    	; 0xf3e <qtm_key_sensors_process+0x57c>
    1036:	21 50       	subi	r18, 0x01	; 1
    1038:	23 83       	std	Z+3, r18	; 0x03
    103a:	81 cf       	rjmp	.-254    	; 0xf3e <qtm_key_sensors_process+0x57c>
    103c:	a9 01       	movw	r20, r18
    103e:	44 0f       	add	r20, r20
    1040:	55 1f       	adc	r21, r21
    1042:	ec 81       	ldd	r30, Y+4	; 0x04
    1044:	fd 81       	ldd	r31, Y+5	; 0x05
    1046:	e4 0f       	add	r30, r20
    1048:	f5 1f       	adc	r31, r21
    104a:	60 81       	ld	r22, Z
    104c:	65 38       	cpi	r22, 0x85	; 133
    104e:	09 f0       	breq	.+2      	; 0x1052 <qtm_key_sensors_process+0x690>
    1050:	47 c0       	rjmp	.+142    	; 0x10e0 <qtm_key_sensors_process+0x71e>
    1052:	61 81       	ldd	r22, Z+1	; 0x01
    1054:	66 23       	and	r22, r22
    1056:	19 f0       	breq	.+6      	; 0x105e <qtm_key_sensors_process+0x69c>
    1058:	61 50       	subi	r22, 0x01	; 1
    105a:	61 83       	std	Z+1, r22	; 0x01
    105c:	41 c0       	rjmp	.+130    	; 0x10e0 <qtm_key_sensors_process+0x71e>
    105e:	a0 82       	st	Z, r10
    1060:	6c 81       	ldd	r22, Y+4	; 0x04
    1062:	7d 81       	ldd	r23, Y+5	; 0x05
    1064:	fb 01       	movw	r30, r22
    1066:	e4 0f       	add	r30, r20
    1068:	f5 1f       	adc	r31, r21
    106a:	02 80       	ldd	r0, Z+2	; 0x02
    106c:	f3 81       	ldd	r31, Z+3	; 0x03
    106e:	e0 2d       	mov	r30, r0
    1070:	b0 82       	st	Z, r11
    1072:	ee 81       	ldd	r30, Y+6	; 0x06
    1074:	ff 81       	ldd	r31, Y+7	; 0x07
    1076:	e2 0f       	add	r30, r18
    1078:	f3 1f       	adc	r31, r19
    107a:	d2 80       	ldd	r13, Z+2	; 0x02
    107c:	dd 20       	and	r13, r13
    107e:	81 f1       	breq	.+96     	; 0x10e0 <qtm_key_sensors_process+0x71e>
    1080:	40 e0       	ldi	r20, 0x00	; 0
    1082:	50 e0       	ldi	r21, 0x00	; 0
    1084:	00 e0       	ldi	r16, 0x00	; 0
    1086:	10 e0       	ldi	r17, 0x00	; 0
    1088:	ea 81       	ldd	r30, Y+2	; 0x02
    108a:	fb 81       	ldd	r31, Y+3	; 0x03
    108c:	60 81       	ld	r22, Z
    108e:	71 81       	ldd	r23, Z+1	; 0x01
    1090:	06 17       	cp	r16, r22
    1092:	17 07       	cpc	r17, r23
    1094:	28 f5       	brcc	.+74     	; 0x10e0 <qtm_key_sensors_process+0x71e>
    1096:	ee 81       	ldd	r30, Y+6	; 0x06
    1098:	ff 81       	ldd	r31, Y+7	; 0x07
    109a:	e4 0f       	add	r30, r20
    109c:	f5 1f       	adc	r31, r21
    109e:	62 81       	ldd	r22, Z+2	; 0x02
    10a0:	d6 12       	cpse	r13, r22
    10a2:	19 c0       	rjmp	.+50     	; 0x10d6 <qtm_key_sensors_process+0x714>
    10a4:	ba 01       	movw	r22, r20
    10a6:	66 0f       	add	r22, r22
    10a8:	77 1f       	adc	r23, r23
    10aa:	ec 81       	ldd	r30, Y+4	; 0x04
    10ac:	fd 81       	ldd	r31, Y+5	; 0x05
    10ae:	4f 01       	movw	r8, r30
    10b0:	86 0e       	add	r8, r22
    10b2:	97 1e       	adc	r9, r23
    10b4:	f4 01       	movw	r30, r8
    10b6:	e2 80       	ldd	r14, Z+2	; 0x02
    10b8:	f3 80       	ldd	r15, Z+3	; 0x03
    10ba:	f7 01       	movw	r30, r14
    10bc:	f0 80       	ld	r15, Z
    10be:	f0 fe       	sbrs	r15, 0
    10c0:	0a c0       	rjmp	.+20     	; 0x10d6 <qtm_key_sensors_process+0x714>
    10c2:	f4 01       	movw	r30, r8
    10c4:	a0 82       	st	Z, r10
    10c6:	ec 81       	ldd	r30, Y+4	; 0x04
    10c8:	fd 81       	ldd	r31, Y+5	; 0x05
    10ca:	e6 0f       	add	r30, r22
    10cc:	f7 1f       	adc	r31, r23
    10ce:	02 80       	ldd	r0, Z+2	; 0x02
    10d0:	f3 81       	ldd	r31, Z+3	; 0x03
    10d2:	e0 2d       	mov	r30, r0
    10d4:	b0 82       	st	Z, r11
    10d6:	0f 5f       	subi	r16, 0xFF	; 255
    10d8:	1f 4f       	sbci	r17, 0xFF	; 255
    10da:	4d 5f       	subi	r20, 0xFD	; 253
    10dc:	5f 4f       	sbci	r21, 0xFF	; 255
    10de:	d4 cf       	rjmp	.-88     	; 0x1088 <qtm_key_sensors_process+0x6c6>
    10e0:	11 96       	adiw	r26, 0x01	; 1
    10e2:	2d 5f       	subi	r18, 0xFD	; 253
    10e4:	3f 4f       	sbci	r19, 0xFF	; 255
    10e6:	34 cf       	rjmp	.-408    	; 0xf50 <qtm_key_sensors_process+0x58e>
    10e8:	8b e0       	ldi	r24, 0x0B	; 11
    10ea:	df 91       	pop	r29
    10ec:	cf 91       	pop	r28
    10ee:	1f 91       	pop	r17
    10f0:	0f 91       	pop	r16
    10f2:	ff 90       	pop	r15
    10f4:	ef 90       	pop	r14
    10f6:	df 90       	pop	r13
    10f8:	cf 90       	pop	r12
    10fa:	bf 90       	pop	r11
    10fc:	af 90       	pop	r10
    10fe:	9f 90       	pop	r9
    1100:	8f 90       	pop	r8
    1102:	7f 90       	pop	r7
    1104:	6f 90       	pop	r6
    1106:	5f 90       	pop	r5
    1108:	4f 90       	pop	r4
    110a:	3f 90       	pop	r3
    110c:	2f 90       	pop	r2
    110e:	08 95       	ret

00001110 <select_next_channel_to_measure>:
    1110:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <current_measure_channel>
    1114:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <current_measure_channel+0x1>
    1118:	a0 91 17 02 	lds	r26, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    111c:	b0 91 18 02 	lds	r27, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    1120:	ed 91       	ld	r30, X+
    1122:	fc 91       	ld	r31, X
    1124:	11 97       	sbiw	r26, 0x01	; 1
    1126:	40 81       	ld	r20, Z
    1128:	51 81       	ldd	r21, Z+1	; 0x01
    112a:	25 e0       	ldi	r18, 0x05	; 5
    112c:	28 9f       	mul	r18, r24
    112e:	b0 01       	movw	r22, r0
    1130:	29 9f       	mul	r18, r25
    1132:	70 0d       	add	r23, r0
    1134:	11 24       	eor	r1, r1
    1136:	20 e0       	ldi	r18, 0x00	; 0
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	84 17       	cp	r24, r20
    113c:	95 07       	cpc	r25, r21
    113e:	a8 f4       	brcc	.+42     	; 0x116a <select_next_channel_to_measure+0x5a>
    1140:	14 96       	adiw	r26, 0x04	; 4
    1142:	ed 91       	ld	r30, X+
    1144:	fc 91       	ld	r31, X
    1146:	15 97       	sbiw	r26, 0x05	; 5
    1148:	e2 0f       	add	r30, r18
    114a:	f3 1f       	adc	r31, r19
    114c:	e6 0f       	add	r30, r22
    114e:	f7 1f       	adc	r31, r23
    1150:	e0 81       	ld	r30, Z
    1152:	2b 5f       	subi	r18, 0xFB	; 251
    1154:	3f 4f       	sbci	r19, 0xFF	; 255
    1156:	e0 fd       	sbrc	r30, 0
    1158:	02 c0       	rjmp	.+4      	; 0x115e <select_next_channel_to_measure+0x4e>
    115a:	01 96       	adiw	r24, 0x01	; 1
    115c:	ee cf       	rjmp	.-36     	; 0x113a <select_next_channel_to_measure+0x2a>
    115e:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <current_measure_channel+0x1>
    1162:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <current_measure_channel>
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	08 95       	ret
    116a:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <current_measure_channel+0x1>
    116e:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <current_measure_channel>
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	08 95       	ret

00001176 <qtm_measure_node>:
    1176:	4a e0       	ldi	r20, 0x0A	; 10
    1178:	48 9f       	mul	r20, r24
    117a:	90 01       	movw	r18, r0
    117c:	49 9f       	mul	r20, r25
    117e:	30 0d       	add	r19, r0
    1180:	11 24       	eor	r1, r1
    1182:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    1186:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    118a:	02 80       	ldd	r0, Z+2	; 0x02
    118c:	f3 81       	ldd	r31, Z+3	; 0x03
    118e:	e0 2d       	mov	r30, r0
    1190:	e2 0f       	add	r30, r18
    1192:	f3 1f       	adc	r31, r19
    1194:	42 81       	ldd	r20, Z+2	; 0x02
    1196:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    119a:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    119e:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    11a2:	02 80       	ldd	r0, Z+2	; 0x02
    11a4:	f3 81       	ldd	r31, Z+3	; 0x03
    11a6:	e0 2d       	mov	r30, r0
    11a8:	e2 0f       	add	r30, r18
    11aa:	f3 1f       	adc	r31, r19
    11ac:	43 81       	ldd	r20, Z+3	; 0x03
    11ae:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    11b2:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    11b6:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    11ba:	02 80       	ldd	r0, Z+2	; 0x02
    11bc:	f3 81       	ldd	r31, Z+3	; 0x03
    11be:	e0 2d       	mov	r30, r0
    11c0:	e2 0f       	add	r30, r18
    11c2:	f3 1f       	adc	r31, r19
    11c4:	44 81       	ldd	r20, Z+4	; 0x04
    11c6:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    11ca:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    11ce:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    11d2:	02 80       	ldd	r0, Z+2	; 0x02
    11d4:	f3 81       	ldd	r31, Z+3	; 0x03
    11d6:	e0 2d       	mov	r30, r0
    11d8:	e2 0f       	add	r30, r18
    11da:	f3 1f       	adc	r31, r19
    11dc:	42 81       	ldd	r20, Z+2	; 0x02
    11de:	53 81       	ldd	r21, Z+3	; 0x03
    11e0:	64 81       	ldd	r22, Z+4	; 0x04
    11e2:	75 81       	ldd	r23, Z+5	; 0x05
    11e4:	47 2f       	mov	r20, r23
    11e6:	55 27       	eor	r21, r21
    11e8:	66 27       	eor	r22, r22
    11ea:	77 27       	eor	r23, r23
    11ec:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    11f0:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    11f4:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    11f8:	02 80       	ldd	r0, Z+2	; 0x02
    11fa:	f3 81       	ldd	r31, Z+3	; 0x03
    11fc:	e0 2d       	mov	r30, r0
    11fe:	e2 0f       	add	r30, r18
    1200:	f3 1f       	adc	r31, r19
    1202:	40 81       	ld	r20, Z
    1204:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    1208:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    120c:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    1210:	02 80       	ldd	r0, Z+2	; 0x02
    1212:	f3 81       	ldd	r31, Z+3	; 0x03
    1214:	e0 2d       	mov	r30, r0
    1216:	e2 0f       	add	r30, r18
    1218:	f3 1f       	adc	r31, r19
    121a:	41 81       	ldd	r20, Z+1	; 0x01
    121c:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    1220:	65 e0       	ldi	r22, 0x05	; 5
    1222:	68 9f       	mul	r22, r24
    1224:	a0 01       	movw	r20, r0
    1226:	69 9f       	mul	r22, r25
    1228:	50 0d       	add	r21, r0
    122a:	11 24       	eor	r1, r1
    122c:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    1230:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    1234:	04 80       	ldd	r0, Z+4	; 0x04
    1236:	f5 81       	ldd	r31, Z+5	; 0x05
    1238:	e0 2d       	mov	r30, r0
    123a:	e4 0f       	add	r30, r20
    123c:	f5 1f       	adc	r31, r21
    123e:	83 81       	ldd	r24, Z+3	; 0x03
    1240:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    1244:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    1248:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    124c:	04 80       	ldd	r0, Z+4	; 0x04
    124e:	f5 81       	ldd	r31, Z+5	; 0x05
    1250:	e0 2d       	mov	r30, r0
    1252:	e4 0f       	add	r30, r20
    1254:	f5 1f       	adc	r31, r21
    1256:	83 81       	ldd	r24, Z+3	; 0x03
    1258:	94 81       	ldd	r25, Z+4	; 0x04
    125a:	88 27       	eor	r24, r24
    125c:	9f 73       	andi	r25, 0x3F	; 63
    125e:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    1262:	a0 91 17 02 	lds	r26, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    1266:	b0 91 18 02 	lds	r27, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    126a:	14 96       	adiw	r26, 0x04	; 4
    126c:	ed 91       	ld	r30, X+
    126e:	fc 91       	ld	r31, X
    1270:	15 97       	sbiw	r26, 0x05	; 5
    1272:	e4 0f       	add	r30, r20
    1274:	f5 1f       	adc	r31, r21
    1276:	80 81       	ld	r24, Z
    1278:	81 fd       	sbrc	r24, 1
    127a:	60 83       	st	Z, r22
    127c:	14 96       	adiw	r26, 0x04	; 4
    127e:	8d 91       	ld	r24, X+
    1280:	9c 91       	ld	r25, X
    1282:	15 97       	sbiw	r26, 0x05	; 5
    1284:	fc 01       	movw	r30, r24
    1286:	e4 0f       	add	r30, r20
    1288:	f5 1f       	adc	r31, r21
    128a:	80 81       	ld	r24, Z
    128c:	8c 71       	andi	r24, 0x1C	; 28
    128e:	71 f4       	brne	.+28     	; 0x12ac <qtm_measure_node+0x136>
    1290:	12 96       	adiw	r26, 0x02	; 2
    1292:	ed 91       	ld	r30, X+
    1294:	fc 91       	ld	r31, X
    1296:	13 97       	sbiw	r26, 0x03	; 3
    1298:	e2 0f       	add	r30, r18
    129a:	f3 1f       	adc	r31, r19
    129c:	e0 85       	ldd	r30, Z+8	; 0x08
    129e:	e2 95       	swap	r30
    12a0:	ef 70       	andi	r30, 0x0F	; 15
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	e2 57       	subi	r30, 0x72	; 114
    12a6:	fe 4f       	sbci	r31, 0xFE	; 254
    12a8:	80 81       	ld	r24, Z
    12aa:	01 c0       	rjmp	.+2      	; 0x12ae <qtm_measure_node+0x138>
    12ac:	8f e3       	ldi	r24, 0x3F	; 63
    12ae:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    12b2:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    12b6:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    12ba:	02 80       	ldd	r0, Z+2	; 0x02
    12bc:	f3 81       	ldd	r31, Z+3	; 0x03
    12be:	e0 2d       	mov	r30, r0
    12c0:	e2 0f       	add	r30, r18
    12c2:	f3 1f       	adc	r31, r19
    12c4:	86 81       	ldd	r24, Z+6	; 0x06
    12c6:	8b 3f       	cpi	r24, 0xFB	; 251
    12c8:	10 f4       	brcc	.+4      	; 0x12ce <qtm_measure_node+0x158>
    12ca:	8c 5f       	subi	r24, 0xFC	; 252
    12cc:	01 c0       	rjmp	.+2      	; 0x12d0 <qtm_measure_node+0x15a>
    12ce:	8f ef       	ldi	r24, 0xFF	; 255
    12d0:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    12d4:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    12d8:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    12dc:	02 80       	ldd	r0, Z+2	; 0x02
    12de:	f3 81       	ldd	r31, Z+3	; 0x03
    12e0:	e0 2d       	mov	r30, r0
    12e2:	e2 0f       	add	r30, r18
    12e4:	f3 1f       	adc	r31, r19
    12e6:	87 81       	ldd	r24, Z+7	; 0x07
    12e8:	80 7f       	andi	r24, 0xF0	; 240
    12ea:	91 85       	ldd	r25, Z+9	; 0x09
    12ec:	89 2b       	or	r24, r25
    12ee:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    12f2:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    12f6:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    12fa:	82 81       	ldd	r24, Z+2	; 0x02
    12fc:	93 81       	ldd	r25, Z+3	; 0x03
    12fe:	fc 01       	movw	r30, r24
    1300:	e2 0f       	add	r30, r18
    1302:	f3 1f       	adc	r31, r19
    1304:	87 81       	ldd	r24, Z+7	; 0x07
    1306:	8f 70       	andi	r24, 0x0F	; 15
    1308:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    130c:	82 e1       	ldi	r24, 0x12	; 18
    130e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1312:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1316:	81 60       	ori	r24, 0x01	; 1
    1318:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    131c:	08 95       	ret

0000131e <qtm_acquisition_process>:
    131e:	4f 92       	push	r4
    1320:	5f 92       	push	r5
    1322:	6f 92       	push	r6
    1324:	7f 92       	push	r7
    1326:	8f 92       	push	r8
    1328:	9f 92       	push	r9
    132a:	af 92       	push	r10
    132c:	bf 92       	push	r11
    132e:	cf 92       	push	r12
    1330:	df 92       	push	r13
    1332:	ef 92       	push	r14
    1334:	ff 92       	push	r15
    1336:	0f 93       	push	r16
    1338:	1f 93       	push	r17
    133a:	cf 93       	push	r28
    133c:	df 93       	push	r29
    133e:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <touch_seq_lib_state>
    1342:	88 23       	and	r24, r24
    1344:	09 f4       	brne	.+2      	; 0x1348 <qtm_acquisition_process+0x2a>
    1346:	31 c1       	rjmp	.+610    	; 0x15aa <qtm_acquisition_process+0x28c>
    1348:	a0 91 17 02 	lds	r26, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    134c:	b0 91 18 02 	lds	r27, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    1350:	e0 90 19 02 	lds	r14, 0x0219	; 0x800219 <qtm_raw_data_measurements_ptr>
    1354:	f0 90 1a 02 	lds	r15, 0x021A	; 0x80021a <qtm_raw_data_measurements_ptr+0x1>
    1358:	41 2c       	mov	r4, r1
    135a:	51 2c       	mov	r5, r1
    135c:	60 e0       	ldi	r22, 0x00	; 0
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	00 e0       	ldi	r16, 0x00	; 0
    1362:	10 e0       	ldi	r17, 0x00	; 0
    1364:	80 e0       	ldi	r24, 0x00	; 0
    1366:	66 24       	eor	r6, r6
    1368:	63 94       	inc	r6
    136a:	91 e8       	ldi	r25, 0x81	; 129
    136c:	79 2e       	mov	r7, r25
    136e:	aa 24       	eor	r10, r10
    1370:	aa 94       	dec	r10
    1372:	bb 24       	eor	r11, r11
    1374:	b3 94       	inc	r11
    1376:	cd 90       	ld	r12, X+
    1378:	dc 90       	ld	r13, X
    137a:	11 97       	sbiw	r26, 0x01	; 1
    137c:	f6 01       	movw	r30, r12
    137e:	20 81       	ld	r18, Z
    1380:	31 81       	ldd	r19, Z+1	; 0x01
    1382:	02 17       	cp	r16, r18
    1384:	13 07       	cpc	r17, r19
    1386:	08 f0       	brcs	.+2      	; 0x138a <qtm_acquisition_process+0x6c>
    1388:	0c c1       	rjmp	.+536    	; 0x15a2 <qtm_acquisition_process+0x284>
    138a:	e7 01       	movw	r28, r14
    138c:	29 91       	ld	r18, Y+
    138e:	39 91       	ld	r19, Y+
    1390:	7e 01       	movw	r14, r28
    1392:	14 96       	adiw	r26, 0x04	; 4
    1394:	ed 91       	ld	r30, X+
    1396:	fc 91       	ld	r31, X
    1398:	15 97       	sbiw	r26, 0x05	; 5
    139a:	e6 0f       	add	r30, r22
    139c:	f7 1f       	adc	r31, r23
    139e:	40 81       	ld	r20, Z
    13a0:	4c 71       	andi	r20, 0x1C	; 28
    13a2:	50 e0       	ldi	r21, 0x00	; 0
    13a4:	56 95       	lsr	r21
    13a6:	47 95       	ror	r20
    13a8:	56 95       	lsr	r21
    13aa:	47 95       	ror	r20
    13ac:	41 15       	cp	r20, r1
    13ae:	51 05       	cpc	r21, r1
    13b0:	21 f0       	breq	.+8      	; 0x13ba <qtm_acquisition_process+0x9c>
    13b2:	41 30       	cpi	r20, 0x01	; 1
    13b4:	51 05       	cpc	r21, r1
    13b6:	c1 f0       	breq	.+48     	; 0x13e8 <qtm_acquisition_process+0xca>
    13b8:	eb c0       	rjmp	.+470    	; 0x1590 <qtm_acquisition_process+0x272>
    13ba:	12 96       	adiw	r26, 0x02	; 2
    13bc:	4d 91       	ld	r20, X+
    13be:	5c 91       	ld	r21, X
    13c0:	13 97       	sbiw	r26, 0x03	; 3
    13c2:	44 0d       	add	r20, r4
    13c4:	55 1d       	adc	r21, r5
    13c6:	ea 01       	movw	r28, r20
    13c8:	98 85       	ldd	r25, Y+8	; 0x08
    13ca:	9f 70       	andi	r25, 0x0F	; 15
    13cc:	49 85       	ldd	r20, Y+9	; 0x09
    13ce:	94 17       	cp	r25, r20
    13d0:	10 f4       	brcc	.+4      	; 0x13d6 <qtm_acquisition_process+0xb8>
    13d2:	49 1b       	sub	r20, r25
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <qtm_acquisition_process+0xba>
    13d6:	40 e0       	ldi	r20, 0x00	; 0
    13d8:	02 c0       	rjmp	.+4      	; 0x13de <qtm_acquisition_process+0xc0>
    13da:	36 95       	lsr	r19
    13dc:	27 95       	ror	r18
    13de:	4a 95       	dec	r20
    13e0:	e2 f7       	brpl	.-8      	; 0x13da <qtm_acquisition_process+0xbc>
    13e2:	32 83       	std	Z+2, r19	; 0x02
    13e4:	21 83       	std	Z+1, r18	; 0x01
    13e6:	d5 c0       	rjmp	.+426    	; 0x1592 <qtm_acquisition_process+0x274>
    13e8:	12 96       	adiw	r26, 0x02	; 2
    13ea:	4d 91       	ld	r20, X+
    13ec:	5c 91       	ld	r21, X
    13ee:	13 97       	sbiw	r26, 0x03	; 3
    13f0:	44 0d       	add	r20, r4
    13f2:	55 1d       	adc	r21, r5
    13f4:	ea 01       	movw	r28, r20
    13f6:	09 84       	ldd	r0, Y+9	; 0x09
    13f8:	02 c0       	rjmp	.+4      	; 0x13fe <qtm_acquisition_process+0xe0>
    13fa:	36 95       	lsr	r19
    13fc:	27 95       	ror	r18
    13fe:	0a 94       	dec	r0
    1400:	e2 f7       	brpl	.-8      	; 0x13fa <qtm_acquisition_process+0xdc>
    1402:	32 83       	std	Z+2, r19	; 0x02
    1404:	21 83       	std	Z+1, r18	; 0x01
    1406:	43 81       	ldd	r20, Z+3	; 0x03
    1408:	54 81       	ldd	r21, Z+4	; 0x04
    140a:	21 15       	cp	r18, r1
    140c:	d2 e0       	ldi	r29, 0x02	; 2
    140e:	3d 07       	cpc	r19, r29
    1410:	20 f0       	brcs	.+8      	; 0x141a <qtm_acquisition_process+0xfc>
    1412:	2f 5f       	subi	r18, 0xFF	; 255
    1414:	31 40       	sbci	r19, 0x01	; 1
    1416:	91 e0       	ldi	r25, 0x01	; 1
    1418:	05 c0       	rjmp	.+10     	; 0x1424 <qtm_acquisition_process+0x106>
    141a:	e5 01       	movw	r28, r10
    141c:	c2 1b       	sub	r28, r18
    141e:	d3 0b       	sbc	r29, r19
    1420:	9e 01       	movw	r18, r28
    1422:	90 e0       	ldi	r25, 0x00	; 0
    1424:	e6 01       	movw	r28, r12
    1426:	da 80       	ldd	r13, Y+2	; 0x02
    1428:	d0 e4       	ldi	r29, 0x40	; 64
    142a:	dd 12       	cpse	r13, r29
    142c:	05 c0       	rjmp	.+10     	; 0x1438 <qtm_acquisition_process+0x11a>
    142e:	36 95       	lsr	r19
    1430:	27 95       	ror	r18
    1432:	99 23       	and	r25, r25
    1434:	19 f0       	breq	.+6      	; 0x143c <qtm_acquisition_process+0x11e>
    1436:	09 c0       	rjmp	.+18     	; 0x144a <qtm_acquisition_process+0x12c>
    1438:	99 23       	and	r25, r25
    143a:	39 f0       	breq	.+14     	; 0x144a <qtm_acquisition_process+0x12c>
    143c:	4f 3f       	cpi	r20, 0xFF	; 255
    143e:	9f e3       	ldi	r25, 0x3F	; 63
    1440:	59 07       	cpc	r21, r25
    1442:	31 f4       	brne	.+12     	; 0x1450 <qtm_acquisition_process+0x132>
    1444:	70 82       	st	Z, r7
    1446:	8e e0       	ldi	r24, 0x0E	; 14
    1448:	07 c0       	rjmp	.+14     	; 0x1458 <qtm_acquisition_process+0x13a>
    144a:	88 24       	eor	r8, r8
    144c:	83 94       	inc	r8
    144e:	01 c0       	rjmp	.+2      	; 0x1452 <qtm_acquisition_process+0x134>
    1450:	81 2c       	mov	r8, r1
    1452:	2a 30       	cpi	r18, 0x0A	; 10
    1454:	31 05       	cpc	r19, r1
    1456:	98 f4       	brcc	.+38     	; 0x147e <qtm_acquisition_process+0x160>
    1458:	14 96       	adiw	r26, 0x04	; 4
    145a:	ed 91       	ld	r30, X+
    145c:	fc 91       	ld	r31, X
    145e:	15 97       	sbiw	r26, 0x05	; 5
    1460:	e6 0f       	add	r30, r22
    1462:	f7 1f       	adc	r31, r23
    1464:	20 81       	ld	r18, Z
    1466:	27 ff       	sbrs	r18, 7
    1468:	60 82       	st	Z, r6
    146a:	14 96       	adiw	r26, 0x04	; 4
    146c:	ed 91       	ld	r30, X+
    146e:	fc 91       	ld	r31, X
    1470:	15 97       	sbiw	r26, 0x05	; 5
    1472:	e6 0f       	add	r30, r22
    1474:	f7 1f       	adc	r31, r23
    1476:	5f 73       	andi	r21, 0x3F	; 63
    1478:	54 83       	std	Z+4, r21	; 0x04
    147a:	43 83       	std	Z+3, r20	; 0x03
    147c:	8a c0       	rjmp	.+276    	; 0x1592 <qtm_acquisition_process+0x274>
    147e:	6a 01       	movw	r12, r20
    1480:	cc 24       	eor	r12, r12
    1482:	c0 e3       	ldi	r28, 0x30	; 48
    1484:	dc 22       	and	r13, r28
    1486:	9d 2c       	mov	r9, r13
    1488:	92 94       	swap	r9
    148a:	df e0       	ldi	r29, 0x0F	; 15
    148c:	9d 22       	and	r9, r29
    148e:	6a 01       	movw	r12, r20
    1490:	cc 24       	eor	r12, r12
    1492:	df e0       	ldi	r29, 0x0F	; 15
    1494:	dd 22       	and	r13, r29
    1496:	9d 2d       	mov	r25, r13
    1498:	6a 01       	movw	r12, r20
    149a:	c0 ef       	ldi	r28, 0xF0	; 240
    149c:	cc 22       	and	r12, r28
    149e:	dd 24       	eor	r13, r13
    14a0:	54 e0       	ldi	r21, 0x04	; 4
    14a2:	d6 94       	lsr	r13
    14a4:	c7 94       	ror	r12
    14a6:	5a 95       	dec	r21
    14a8:	e1 f7       	brne	.-8      	; 0x14a2 <qtm_acquisition_process+0x184>
    14aa:	5c 2d       	mov	r21, r12
    14ac:	4f 70       	andi	r20, 0x0F	; 15
    14ae:	81 10       	cpse	r8, r1
    14b0:	32 c0       	rjmp	.+100    	; 0x1516 <qtm_acquisition_process+0x1f8>
    14b2:	20 3d       	cpi	r18, 0xD0	; 208
    14b4:	31 05       	cpc	r19, r1
    14b6:	60 f0       	brcs	.+24     	; 0x14d0 <qtm_acquisition_process+0x1b2>
    14b8:	d3 e0       	ldi	r29, 0x03	; 3
    14ba:	9d 16       	cp	r9, r29
    14bc:	49 f0       	breq	.+18     	; 0x14d0 <qtm_acquisition_process+0x1b2>
    14be:	93 94       	inc	r9
    14c0:	2f 5c       	subi	r18, 0xCF	; 207
    14c2:	31 09       	sbc	r19, r1
    14c4:	f6 cf       	rjmp	.-20     	; 0x14b2 <qtm_acquisition_process+0x194>
    14c6:	9f 30       	cpi	r25, 0x0F	; 15
    14c8:	41 f0       	breq	.+16     	; 0x14da <qtm_acquisition_process+0x1bc>
    14ca:	9f 5f       	subi	r25, 0xFF	; 255
    14cc:	25 51       	subi	r18, 0x15	; 21
    14ce:	31 09       	sbc	r19, r1
    14d0:	26 31       	cpi	r18, 0x16	; 22
    14d2:	31 05       	cpc	r19, r1
    14d4:	c0 f7       	brcc	.-16     	; 0x14c6 <qtm_acquisition_process+0x1a8>
    14d6:	9f 30       	cpi	r25, 0x0F	; 15
    14d8:	69 f4       	brne	.+26     	; 0x14f4 <qtm_acquisition_process+0x1d6>
    14da:	93 e0       	ldi	r25, 0x03	; 3
    14dc:	99 12       	cpse	r9, r25
    14de:	02 c0       	rjmp	.+4      	; 0x14e4 <qtm_acquisition_process+0x1c6>
    14e0:	9f e0       	ldi	r25, 0x0F	; 15
    14e2:	08 c0       	rjmp	.+16     	; 0x14f4 <qtm_acquisition_process+0x1d6>
    14e4:	93 94       	inc	r9
    14e6:	95 e0       	ldi	r25, 0x05	; 5
    14e8:	05 c0       	rjmp	.+10     	; 0x14f4 <qtm_acquisition_process+0x1d6>
    14ea:	5f 30       	cpi	r21, 0x0F	; 15
    14ec:	49 f0       	breq	.+18     	; 0x1500 <qtm_acquisition_process+0x1e2>
    14ee:	5f 5f       	subi	r21, 0xFF	; 255
    14f0:	22 50       	subi	r18, 0x02	; 2
    14f2:	31 09       	sbc	r19, r1
    14f4:	23 30       	cpi	r18, 0x03	; 3
    14f6:	31 05       	cpc	r19, r1
    14f8:	c0 f7       	brcc	.-16     	; 0x14ea <qtm_acquisition_process+0x1cc>
    14fa:	5f 30       	cpi	r21, 0x0F	; 15
    14fc:	09 f0       	breq	.+2      	; 0x1500 <qtm_acquisition_process+0x1e2>
    14fe:	5b c0       	rjmp	.+182    	; 0x15b6 <qtm_acquisition_process+0x298>
    1500:	9f 30       	cpi	r25, 0x0F	; 15
    1502:	09 f4       	brne	.+2      	; 0x1506 <qtm_acquisition_process+0x1e8>
    1504:	54 c0       	rjmp	.+168    	; 0x15ae <qtm_acquisition_process+0x290>
    1506:	9f 5f       	subi	r25, 0xFF	; 255
    1508:	55 e0       	ldi	r21, 0x05	; 5
    150a:	55 c0       	rjmp	.+170    	; 0x15b6 <qtm_acquisition_process+0x298>
    150c:	99 20       	and	r9, r9
    150e:	61 f0       	breq	.+24     	; 0x1528 <qtm_acquisition_process+0x20a>
    1510:	9a 94       	dec	r9
    1512:	2f 5c       	subi	r18, 0xCF	; 207
    1514:	31 09       	sbc	r19, r1
    1516:	20 3d       	cpi	r18, 0xD0	; 208
    1518:	31 05       	cpc	r19, r1
    151a:	c0 f7       	brcc	.-16     	; 0x150c <qtm_acquisition_process+0x1ee>
    151c:	05 c0       	rjmp	.+10     	; 0x1528 <qtm_acquisition_process+0x20a>
    151e:	99 23       	and	r25, r25
    1520:	41 f0       	breq	.+16     	; 0x1532 <qtm_acquisition_process+0x214>
    1522:	91 50       	subi	r25, 0x01	; 1
    1524:	25 51       	subi	r18, 0x15	; 21
    1526:	31 09       	sbc	r19, r1
    1528:	26 31       	cpi	r18, 0x16	; 22
    152a:	31 05       	cpc	r19, r1
    152c:	c0 f7       	brcc	.-16     	; 0x151e <qtm_acquisition_process+0x200>
    152e:	91 11       	cpse	r25, r1
    1530:	0c c0       	rjmp	.+24     	; 0x154a <qtm_acquisition_process+0x22c>
    1532:	91 10       	cpse	r9, r1
    1534:	02 c0       	rjmp	.+4      	; 0x153a <qtm_acquisition_process+0x21c>
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	08 c0       	rjmp	.+16     	; 0x154a <qtm_acquisition_process+0x22c>
    153a:	9a 94       	dec	r9
    153c:	9a e0       	ldi	r25, 0x0A	; 10
    153e:	05 c0       	rjmp	.+10     	; 0x154a <qtm_acquisition_process+0x22c>
    1540:	55 23       	and	r21, r21
    1542:	41 f0       	breq	.+16     	; 0x1554 <qtm_acquisition_process+0x236>
    1544:	51 50       	subi	r21, 0x01	; 1
    1546:	22 50       	subi	r18, 0x02	; 2
    1548:	31 09       	sbc	r19, r1
    154a:	23 30       	cpi	r18, 0x03	; 3
    154c:	31 05       	cpc	r19, r1
    154e:	c0 f7       	brcc	.-16     	; 0x1540 <qtm_acquisition_process+0x222>
    1550:	51 11       	cpse	r21, r1
    1552:	0d c0       	rjmp	.+26     	; 0x156e <qtm_acquisition_process+0x250>
    1554:	99 23       	and	r25, r25
    1556:	b9 f1       	breq	.+110    	; 0x15c6 <qtm_acquisition_process+0x2a8>
    1558:	91 50       	subi	r25, 0x01	; 1
    155a:	5a e0       	ldi	r21, 0x0A	; 10
    155c:	23 30       	cpi	r18, 0x03	; 3
    155e:	31 05       	cpc	r19, r1
    1560:	d0 f6       	brcc	.-76     	; 0x1516 <qtm_acquisition_process+0x1f8>
    1562:	05 c0       	rjmp	.+10     	; 0x156e <qtm_acquisition_process+0x250>
    1564:	23 30       	cpi	r18, 0x03	; 3
    1566:	31 05       	cpc	r19, r1
    1568:	58 f1       	brcs	.+86     	; 0x15c0 <qtm_acquisition_process+0x2a2>
    156a:	4f e0       	ldi	r20, 0x0F	; 15
    156c:	5f e0       	ldi	r21, 0x0F	; 15
    156e:	29 2d       	mov	r18, r9
    1570:	30 e0       	ldi	r19, 0x00	; 0
    1572:	32 2f       	mov	r19, r18
    1574:	22 27       	eor	r18, r18
    1576:	32 95       	swap	r19
    1578:	30 7f       	andi	r19, 0xF0	; 240
    157a:	39 2b       	or	r19, r25
    157c:	24 2b       	or	r18, r20
    157e:	c0 e1       	ldi	r28, 0x10	; 16
    1580:	5c 9f       	mul	r21, r28
    1582:	60 01       	movw	r12, r0
    1584:	11 24       	eor	r1, r1
    1586:	c2 2a       	or	r12, r18
    1588:	d3 2a       	or	r13, r19
    158a:	d4 82       	std	Z+4, r13	; 0x04
    158c:	c3 82       	std	Z+3, r12	; 0x03
    158e:	01 c0       	rjmp	.+2      	; 0x1592 <qtm_acquisition_process+0x274>
    1590:	ff cf       	rjmp	.-2      	; 0x1590 <qtm_acquisition_process+0x272>
    1592:	0f 5f       	subi	r16, 0xFF	; 255
    1594:	1f 4f       	sbci	r17, 0xFF	; 255
    1596:	6b 5f       	subi	r22, 0xFB	; 251
    1598:	7f 4f       	sbci	r23, 0xFF	; 255
    159a:	da e0       	ldi	r29, 0x0A	; 10
    159c:	4d 0e       	add	r4, r29
    159e:	51 1c       	adc	r5, r1
    15a0:	ea ce       	rjmp	.-556    	; 0x1376 <qtm_acquisition_process+0x58>
    15a2:	92 e0       	ldi	r25, 0x02	; 2
    15a4:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <touch_seq_lib_state>
    15a8:	10 c0       	rjmp	.+32     	; 0x15ca <qtm_acquisition_process+0x2ac>
    15aa:	83 e0       	ldi	r24, 0x03	; 3
    15ac:	0e c0       	rjmp	.+28     	; 0x15ca <qtm_acquisition_process+0x2ac>
    15ae:	53 e0       	ldi	r21, 0x03	; 3
    15b0:	95 16       	cp	r9, r21
    15b2:	c1 f2       	breq	.-80     	; 0x1564 <qtm_acquisition_process+0x246>
    15b4:	5f e0       	ldi	r21, 0x0F	; 15
    15b6:	23 30       	cpi	r18, 0x03	; 3
    15b8:	31 05       	cpc	r19, r1
    15ba:	08 f0       	brcs	.+2      	; 0x15be <qtm_acquisition_process+0x2a0>
    15bc:	7a cf       	rjmp	.-268    	; 0x14b2 <qtm_acquisition_process+0x194>
    15be:	d7 cf       	rjmp	.-82     	; 0x156e <qtm_acquisition_process+0x250>
    15c0:	5f e0       	ldi	r21, 0x0F	; 15
    15c2:	4f e0       	ldi	r20, 0x0F	; 15
    15c4:	d4 cf       	rjmp	.-88     	; 0x156e <qtm_acquisition_process+0x250>
    15c6:	50 e0       	ldi	r21, 0x00	; 0
    15c8:	d2 cf       	rjmp	.-92     	; 0x156e <qtm_acquisition_process+0x250>
    15ca:	df 91       	pop	r29
    15cc:	cf 91       	pop	r28
    15ce:	1f 91       	pop	r17
    15d0:	0f 91       	pop	r16
    15d2:	ff 90       	pop	r15
    15d4:	ef 90       	pop	r14
    15d6:	df 90       	pop	r13
    15d8:	cf 90       	pop	r12
    15da:	bf 90       	pop	r11
    15dc:	af 90       	pop	r10
    15de:	9f 90       	pop	r9
    15e0:	8f 90       	pop	r8
    15e2:	7f 90       	pop	r7
    15e4:	6f 90       	pop	r6
    15e6:	5f 90       	pop	r5
    15e8:	4f 90       	pop	r4
    15ea:	08 95       	ret

000015ec <qtm_ptc_init_acquisition_module>:
    15ec:	8f 92       	push	r8
    15ee:	9f 92       	push	r9
    15f0:	af 92       	push	r10
    15f2:	bf 92       	push	r11
    15f4:	cf 92       	push	r12
    15f6:	df 92       	push	r13
    15f8:	ef 92       	push	r14
    15fa:	ff 92       	push	r15
    15fc:	cf 93       	push	r28
    15fe:	df 93       	push	r29
    1600:	00 97       	sbiw	r24, 0x00	; 0
    1602:	09 f4       	brne	.+2      	; 0x1606 <qtm_ptc_init_acquisition_module+0x1a>
    1604:	76 c0       	rjmp	.+236    	; 0x16f2 <qtm_ptc_init_acquisition_module+0x106>
    1606:	dc 01       	movw	r26, r24
    1608:	ed 91       	ld	r30, X+
    160a:	fc 91       	ld	r31, X
    160c:	c0 80       	ld	r12, Z
    160e:	d1 80       	ldd	r13, Z+1	; 0x01
    1610:	e1 2c       	mov	r14, r1
    1612:	f1 2c       	mov	r15, r1
    1614:	a0 e0       	ldi	r26, 0x00	; 0
    1616:	b0 e0       	ldi	r27, 0x00	; 0
    1618:	40 e0       	ldi	r20, 0x00	; 0
    161a:	50 e0       	ldi	r21, 0x00	; 0
    161c:	ba 01       	movw	r22, r20
    161e:	20 e0       	ldi	r18, 0x00	; 0
    1620:	30 e0       	ldi	r19, 0x00	; 0
    1622:	ac 15       	cp	r26, r12
    1624:	bd 05       	cpc	r27, r13
    1626:	b1 f0       	breq	.+44     	; 0x1654 <qtm_ptc_init_acquisition_module+0x68>
    1628:	ec 01       	movw	r28, r24
    162a:	ea 81       	ldd	r30, Y+2	; 0x02
    162c:	fb 81       	ldd	r31, Y+3	; 0x03
    162e:	ee 0d       	add	r30, r14
    1630:	ff 1d       	adc	r31, r15
    1632:	a0 80       	ld	r10, Z
    1634:	b1 80       	ldd	r11, Z+1	; 0x01
    1636:	2a 29       	or	r18, r10
    1638:	3b 29       	or	r19, r11
    163a:	82 80       	ldd	r8, Z+2	; 0x02
    163c:	93 80       	ldd	r9, Z+3	; 0x03
    163e:	a4 80       	ldd	r10, Z+4	; 0x04
    1640:	b5 80       	ldd	r11, Z+5	; 0x05
    1642:	48 29       	or	r20, r8
    1644:	59 29       	or	r21, r9
    1646:	6a 29       	or	r22, r10
    1648:	7b 29       	or	r23, r11
    164a:	11 96       	adiw	r26, 0x01	; 1
    164c:	da e0       	ldi	r29, 0x0A	; 10
    164e:	ed 0e       	add	r14, r29
    1650:	f1 1c       	adc	r15, r1
    1652:	e7 cf       	rjmp	.-50     	; 0x1622 <qtm_ptc_init_acquisition_module+0x36>
    1654:	41 15       	cp	r20, r1
    1656:	51 05       	cpc	r21, r1
    1658:	61 05       	cpc	r22, r1
    165a:	71 05       	cpc	r23, r1
    165c:	09 f4       	brne	.+2      	; 0x1660 <qtm_ptc_init_acquisition_module+0x74>
    165e:	4b c0       	rjmp	.+150    	; 0x16f6 <qtm_ptc_init_acquisition_module+0x10a>
    1660:	e0 91 bb 01 	lds	r30, 0x01BB	; 0x8001bb <touch_seq_lib_state>
    1664:	4a 01       	movw	r8, r20
    1666:	5b 01       	movw	r10, r22
    1668:	88 24       	eor	r8, r8
    166a:	aa 24       	eor	r10, r10
    166c:	bb 24       	eor	r11, r11
    166e:	6a 01       	movw	r12, r20
    1670:	7b 01       	movw	r14, r22
    1672:	cc 24       	eor	r12, r12
    1674:	dd 24       	eor	r13, r13
    1676:	ff 24       	eor	r15, r15
    1678:	87 2f       	mov	r24, r23
    167a:	99 27       	eor	r25, r25
    167c:	aa 27       	eor	r26, r26
    167e:	bb 27       	eor	r27, r27
    1680:	e1 11       	cpse	r30, r1
    1682:	17 c0       	rjmp	.+46     	; 0x16b2 <qtm_ptc_init_acquisition_module+0xc6>
    1684:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1688:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    168c:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1690:	89 2c       	mov	r8, r9
    1692:	9a 2c       	mov	r9, r10
    1694:	ab 2c       	mov	r10, r11
    1696:	bb 24       	eor	r11, r11
    1698:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    169c:	67 01       	movw	r12, r14
    169e:	ee 24       	eor	r14, r14
    16a0:	ff 24       	eor	r15, r15
    16a2:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16a6:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <touch_seq_lib_state>
    16b0:	1e c0       	rjmp	.+60     	; 0x16ee <qtm_ptc_init_acquisition_module+0x102>
    16b2:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16b6:	2e 2b       	or	r18, r30
    16b8:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16bc:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16c0:	23 2b       	or	r18, r19
    16c2:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16c6:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    16ca:	42 2b       	or	r20, r18
    16cc:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    16d0:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    16d4:	29 29       	or	r18, r9
    16d6:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    16da:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16de:	2e 29       	or	r18, r14
    16e0:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16e4:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16e8:	82 2b       	or	r24, r18
    16ea:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16ee:	80 e0       	ldi	r24, 0x00	; 0
    16f0:	03 c0       	rjmp	.+6      	; 0x16f8 <qtm_ptc_init_acquisition_module+0x10c>
    16f2:	8b e0       	ldi	r24, 0x0B	; 11
    16f4:	01 c0       	rjmp	.+2      	; 0x16f8 <qtm_ptc_init_acquisition_module+0x10c>
    16f6:	82 e0       	ldi	r24, 0x02	; 2
    16f8:	df 91       	pop	r29
    16fa:	cf 91       	pop	r28
    16fc:	ff 90       	pop	r15
    16fe:	ef 90       	pop	r14
    1700:	df 90       	pop	r13
    1702:	cf 90       	pop	r12
    1704:	bf 90       	pop	r11
    1706:	af 90       	pop	r10
    1708:	9f 90       	pop	r9
    170a:	8f 90       	pop	r8
    170c:	08 95       	ret

0000170e <qtm_ptc_qtlib_assign_signal_memory>:
    170e:	00 97       	sbiw	r24, 0x00	; 0
    1710:	31 f0       	breq	.+12     	; 0x171e <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1712:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <qtm_raw_data_measurements_ptr+0x1>
    1716:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <qtm_raw_data_measurements_ptr>
    171a:	80 e0       	ldi	r24, 0x00	; 0
    171c:	08 95       	ret
    171e:	8b e0       	ldi	r24, 0x0B	; 11
    1720:	08 95       	ret

00001722 <qtm_ptc_start_measurement_seq>:
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	00 d0       	rcall	.+0      	; 0x1728 <qtm_ptc_start_measurement_seq+0x6>
    1728:	00 d0       	rcall	.+0      	; 0x172a <qtm_ptc_start_measurement_seq+0x8>
    172a:	cd b7       	in	r28, 0x3d	; 61
    172c:	de b7       	in	r29, 0x3e	; 62
    172e:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <max_conversion_cycles>
    1732:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <max_conversion_cycles+0x1>
    1736:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <max_conversion_cycles+0x2>
    173a:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <max_conversion_cycles+0x3>
    173e:	61 15       	cp	r22, r1
    1740:	71 05       	cpc	r23, r1
    1742:	09 f4       	brne	.+2      	; 0x1746 <qtm_ptc_start_measurement_seq+0x24>
    1744:	db c0       	rjmp	.+438    	; 0x18fc <qtm_ptc_start_measurement_seq+0x1da>
    1746:	00 97       	sbiw	r24, 0x00	; 0
    1748:	09 f4       	brne	.+2      	; 0x174c <qtm_ptc_start_measurement_seq+0x2a>
    174a:	d8 c0       	rjmp	.+432    	; 0x18fc <qtm_ptc_start_measurement_seq+0x1da>
    174c:	20 91 bb 01 	lds	r18, 0x01BB	; 0x8001bb <touch_seq_lib_state>
    1750:	22 23       	and	r18, r18
    1752:	09 f4       	brne	.+2      	; 0x1756 <qtm_ptc_start_measurement_seq+0x34>
    1754:	d5 c0       	rjmp	.+426    	; 0x1900 <qtm_ptc_start_measurement_seq+0x1de>
    1756:	24 30       	cpi	r18, 0x04	; 4
    1758:	09 f0       	breq	.+2      	; 0x175c <qtm_ptc_start_measurement_seq+0x3a>
    175a:	93 c0       	rjmp	.+294    	; 0x1882 <qtm_ptc_start_measurement_seq+0x160>
    175c:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <ptc_eoc_ok_flag>
    1760:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1764:	80 ff       	sbrs	r24, 0
    1766:	8b c0       	rjmp	.+278    	; 0x187e <qtm_ptc_start_measurement_seq+0x15c>
    1768:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    176c:	30 e0       	ldi	r19, 0x00	; 0
    176e:	a6 e0       	ldi	r26, 0x06	; 6
    1770:	b0 e0       	ldi	r27, 0x00	; 0
    1772:	0e 94 2e 0d 	call	0x1a5c	; 0x1a5c <__umulhisi3>
    1776:	60 93 bf 01 	sts	0x01BF, r22	; 0x8001bf <max_conversion_cycles>
    177a:	70 93 c0 01 	sts	0x01C0, r23	; 0x8001c0 <max_conversion_cycles+0x1>
    177e:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <max_conversion_cycles+0x2>
    1782:	90 93 c2 01 	sts	0x01C2, r25	; 0x8001c2 <max_conversion_cycles+0x3>
    1786:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    178a:	2f 70       	andi	r18, 0x0F	; 15
    178c:	dc 01       	movw	r26, r24
    178e:	cb 01       	movw	r24, r22
    1790:	82 0f       	add	r24, r18
    1792:	91 1d       	adc	r25, r1
    1794:	a1 1d       	adc	r26, r1
    1796:	b1 1d       	adc	r27, r1
    1798:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <max_conversion_cycles>
    179c:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <max_conversion_cycles+0x1>
    17a0:	a0 93 c1 01 	sts	0x01C1, r26	; 0x8001c1 <max_conversion_cycles+0x2>
    17a4:	b0 93 c2 01 	sts	0x01C2, r27	; 0x8001c2 <max_conversion_cycles+0x3>
    17a8:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    17ac:	27 70       	andi	r18, 0x07	; 7
    17ae:	04 c0       	rjmp	.+8      	; 0x17b8 <qtm_ptc_start_measurement_seq+0x96>
    17b0:	88 0f       	add	r24, r24
    17b2:	99 1f       	adc	r25, r25
    17b4:	aa 1f       	adc	r26, r26
    17b6:	bb 1f       	adc	r27, r27
    17b8:	2a 95       	dec	r18
    17ba:	d2 f7       	brpl	.-12     	; 0x17b0 <qtm_ptc_start_measurement_seq+0x8e>
    17bc:	0e 96       	adiw	r24, 0x0e	; 14
    17be:	a1 1d       	adc	r26, r1
    17c0:	b1 1d       	adc	r27, r1
    17c2:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <max_conversion_cycles>
    17c6:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <max_conversion_cycles+0x1>
    17ca:	a0 93 c1 01 	sts	0x01C1, r26	; 0x8001c1 <max_conversion_cycles+0x2>
    17ce:	b0 93 c2 01 	sts	0x01C2, r27	; 0x8001c2 <max_conversion_cycles+0x3>
    17d2:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    17d6:	23 70       	andi	r18, 0x03	; 3
    17d8:	04 c0       	rjmp	.+8      	; 0x17e2 <qtm_ptc_start_measurement_seq+0xc0>
    17da:	88 0f       	add	r24, r24
    17dc:	99 1f       	adc	r25, r25
    17de:	aa 1f       	adc	r26, r26
    17e0:	bb 1f       	adc	r27, r27
    17e2:	2a 95       	dec	r18
    17e4:	d2 f7       	brpl	.-12     	; 0x17da <qtm_ptc_start_measurement_seq+0xb8>
    17e6:	22 e0       	ldi	r18, 0x02	; 2
    17e8:	b6 95       	lsr	r27
    17ea:	a7 95       	ror	r26
    17ec:	97 95       	ror	r25
    17ee:	87 95       	ror	r24
    17f0:	2a 95       	dec	r18
    17f2:	d1 f7       	brne	.-12     	; 0x17e8 <qtm_ptc_start_measurement_seq+0xc6>
    17f4:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <max_conversion_cycles>
    17f8:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <max_conversion_cycles+0x1>
    17fc:	a0 93 c1 01 	sts	0x01C1, r26	; 0x8001c1 <max_conversion_cycles+0x2>
    1800:	b0 93 c2 01 	sts	0x01C2, r27	; 0x8001c2 <max_conversion_cycles+0x3>
    1804:	19 82       	std	Y+1, r1	; 0x01
    1806:	1a 82       	std	Y+2, r1	; 0x02
    1808:	1b 82       	std	Y+3, r1	; 0x03
    180a:	1c 82       	std	Y+4, r1	; 0x04
    180c:	21 e0       	ldi	r18, 0x01	; 1
    180e:	49 81       	ldd	r20, Y+1	; 0x01
    1810:	5a 81       	ldd	r21, Y+2	; 0x02
    1812:	6b 81       	ldd	r22, Y+3	; 0x03
    1814:	7c 81       	ldd	r23, Y+4	; 0x04
    1816:	48 17       	cp	r20, r24
    1818:	59 07       	cpc	r21, r25
    181a:	6a 07       	cpc	r22, r26
    181c:	7b 07       	cpc	r23, r27
    181e:	b0 f4       	brcc	.+44     	; 0x184c <qtm_ptc_start_measurement_seq+0x12a>
    1820:	30 91 be 01 	lds	r19, 0x01BE	; 0x8001be <ptc_eoc_ok_flag>
    1824:	33 23       	and	r19, r19
    1826:	29 f0       	breq	.+10     	; 0x1832 <qtm_ptc_start_measurement_seq+0x110>
    1828:	89 83       	std	Y+1, r24	; 0x01
    182a:	9a 83       	std	Y+2, r25	; 0x02
    182c:	ab 83       	std	Y+3, r26	; 0x03
    182e:	bc 83       	std	Y+4, r27	; 0x04
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	49 81       	ldd	r20, Y+1	; 0x01
    1834:	5a 81       	ldd	r21, Y+2	; 0x02
    1836:	6b 81       	ldd	r22, Y+3	; 0x03
    1838:	7c 81       	ldd	r23, Y+4	; 0x04
    183a:	4f 5f       	subi	r20, 0xFF	; 255
    183c:	5f 4f       	sbci	r21, 0xFF	; 255
    183e:	6f 4f       	sbci	r22, 0xFF	; 255
    1840:	7f 4f       	sbci	r23, 0xFF	; 255
    1842:	49 83       	std	Y+1, r20	; 0x01
    1844:	5a 83       	std	Y+2, r21	; 0x02
    1846:	6b 83       	std	Y+3, r22	; 0x03
    1848:	7c 83       	std	Y+4, r23	; 0x04
    184a:	e1 cf       	rjmp	.-62     	; 0x180e <qtm_ptc_start_measurement_seq+0xec>
    184c:	22 23       	and	r18, r18
    184e:	b9 f0       	breq	.+46     	; 0x187e <qtm_ptc_start_measurement_seq+0x15c>
    1850:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1854:	80 ff       	sbrs	r24, 0
    1856:	13 c0       	rjmp	.+38     	; 0x187e <qtm_ptc_start_measurement_seq+0x15c>
    1858:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    185c:	00 00       	nop
    185e:	82 e1       	ldi	r24, 0x12	; 18
    1860:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1864:	00 00       	nop
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    186c:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <ptc_lockups>
    1870:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <ptc_lockups+0x1>
    1874:	01 96       	adiw	r24, 0x01	; 1
    1876:	90 93 b8 01 	sts	0x01B8, r25	; 0x8001b8 <ptc_lockups+0x1>
    187a:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <ptc_lockups>
    187e:	81 e0       	ldi	r24, 0x01	; 1
    1880:	42 c0       	rjmp	.+132    	; 0x1906 <qtm_ptc_start_measurement_seq+0x1e4>
    1882:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    1886:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    188a:	70 93 b6 01 	sts	0x01B6, r23	; 0x8001b6 <ptc_seq_measure_complete_pointer+0x1>
    188e:	60 93 b5 01 	sts	0x01B5, r22	; 0x8001b5 <ptc_seq_measure_complete_pointer>
    1892:	dc 01       	movw	r26, r24
    1894:	ed 91       	ld	r30, X+
    1896:	fc 91       	ld	r31, X
    1898:	82 81       	ldd	r24, Z+2	; 0x02
    189a:	80 34       	cpi	r24, 0x40	; 64
    189c:	11 f4       	brne	.+4      	; 0x18a2 <qtm_ptc_start_measurement_seq+0x180>
    189e:	88 e0       	ldi	r24, 0x08	; 8
    18a0:	03 c0       	rjmp	.+6      	; 0x18a8 <qtm_ptc_start_measurement_seq+0x186>
    18a2:	80 38       	cpi	r24, 0x80	; 128
    18a4:	79 f5       	brne	.+94     	; 0x1904 <qtm_ptc_start_measurement_seq+0x1e2>
    18a6:	8a e0       	ldi	r24, 0x0A	; 10
    18a8:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    18ac:	e0 91 17 02 	lds	r30, 0x0217	; 0x800217 <qtm_acquisition_control_working_set_ptr>
    18b0:	f0 91 18 02 	lds	r31, 0x0218	; 0x800218 <qtm_acquisition_control_working_set_ptr+0x1>
    18b4:	01 90       	ld	r0, Z+
    18b6:	f0 81       	ld	r31, Z
    18b8:	e0 2d       	mov	r30, r0
    18ba:	84 81       	ldd	r24, Z+4	; 0x04
    18bc:	80 31       	cpi	r24, 0x10	; 16
    18be:	08 f0       	brcs	.+2      	; 0x18c2 <qtm_ptc_start_measurement_seq+0x1a0>
    18c0:	80 e1       	ldi	r24, 0x10	; 16
    18c2:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    18c6:	81 e0       	ldi	r24, 0x01	; 1
    18c8:	84 bf       	out	0x34, r24	; 52
    18ca:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    18ce:	10 92 bd 01 	sts	0x01BD, r1	; 0x8001bd <current_measure_channel+0x1>
    18d2:	10 92 bc 01 	sts	0x01BC, r1	; 0x8001bc <current_measure_channel>
    18d6:	0e 94 88 08 	call	0x1110	; 0x1110 <select_next_channel_to_measure>
    18da:	81 11       	cpse	r24, r1
    18dc:	0b c0       	rjmp	.+22     	; 0x18f4 <qtm_ptc_start_measurement_seq+0x1d2>
    18de:	84 e0       	ldi	r24, 0x04	; 4
    18e0:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <touch_seq_lib_state>
    18e4:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <current_measure_channel>
    18e8:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <current_measure_channel+0x1>
    18ec:	0e 94 bb 08 	call	0x1176	; 0x1176 <qtm_measure_node>
    18f0:	80 e0       	ldi	r24, 0x00	; 0
    18f2:	09 c0       	rjmp	.+18     	; 0x1906 <qtm_ptc_start_measurement_seq+0x1e4>
    18f4:	82 e0       	ldi	r24, 0x02	; 2
    18f6:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <touch_seq_lib_state>
    18fa:	05 c0       	rjmp	.+10     	; 0x1906 <qtm_ptc_start_measurement_seq+0x1e4>
    18fc:	8b e0       	ldi	r24, 0x0B	; 11
    18fe:	03 c0       	rjmp	.+6      	; 0x1906 <qtm_ptc_start_measurement_seq+0x1e4>
    1900:	83 e0       	ldi	r24, 0x03	; 3
    1902:	01 c0       	rjmp	.+2      	; 0x1906 <qtm_ptc_start_measurement_seq+0x1e4>
    1904:	82 e0       	ldi	r24, 0x02	; 2
    1906:	0f 90       	pop	r0
    1908:	0f 90       	pop	r0
    190a:	0f 90       	pop	r0
    190c:	0f 90       	pop	r0
    190e:	df 91       	pop	r29
    1910:	cf 91       	pop	r28
    1912:	08 95       	ret

00001914 <qtm_enable_sensor_node>:
    1914:	00 97       	sbiw	r24, 0x00	; 0
    1916:	c9 f0       	breq	.+50     	; 0x194a <qtm_enable_sensor_node+0x36>
    1918:	dc 01       	movw	r26, r24
    191a:	ed 91       	ld	r30, X+
    191c:	fc 91       	ld	r31, X
    191e:	11 97       	sbiw	r26, 0x01	; 1
    1920:	20 81       	ld	r18, Z
    1922:	31 81       	ldd	r19, Z+1	; 0x01
    1924:	26 17       	cp	r18, r22
    1926:	37 07       	cpc	r19, r23
    1928:	90 f0       	brcs	.+36     	; 0x194e <qtm_enable_sensor_node+0x3a>
    192a:	45 e0       	ldi	r20, 0x05	; 5
    192c:	46 9f       	mul	r20, r22
    192e:	90 01       	movw	r18, r0
    1930:	47 9f       	mul	r20, r23
    1932:	30 0d       	add	r19, r0
    1934:	11 24       	eor	r1, r1
    1936:	14 96       	adiw	r26, 0x04	; 4
    1938:	ed 91       	ld	r30, X+
    193a:	fc 91       	ld	r31, X
    193c:	15 97       	sbiw	r26, 0x05	; 5
    193e:	e2 0f       	add	r30, r18
    1940:	f3 1f       	adc	r31, r19
    1942:	81 e0       	ldi	r24, 0x01	; 1
    1944:	80 83       	st	Z, r24
    1946:	80 e0       	ldi	r24, 0x00	; 0
    1948:	08 95       	ret
    194a:	8b e0       	ldi	r24, 0x0B	; 11
    194c:	08 95       	ret
    194e:	82 e0       	ldi	r24, 0x02	; 2
    1950:	08 95       	ret

00001952 <qtm_calibrate_sensor_node>:
    1952:	00 97       	sbiw	r24, 0x00	; 0
    1954:	d1 f1       	breq	.+116    	; 0x19ca <qtm_calibrate_sensor_node+0x78>
    1956:	dc 01       	movw	r26, r24
    1958:	ed 91       	ld	r30, X+
    195a:	fc 91       	ld	r31, X
    195c:	11 97       	sbiw	r26, 0x01	; 1
    195e:	20 81       	ld	r18, Z
    1960:	31 81       	ldd	r19, Z+1	; 0x01
    1962:	26 17       	cp	r18, r22
    1964:	37 07       	cpc	r19, r23
    1966:	98 f1       	brcs	.+102    	; 0x19ce <qtm_calibrate_sensor_node+0x7c>
    1968:	22 81       	ldd	r18, Z+2	; 0x02
    196a:	14 96       	adiw	r26, 0x04	; 4
    196c:	ed 91       	ld	r30, X+
    196e:	fc 91       	ld	r31, X
    1970:	15 97       	sbiw	r26, 0x05	; 5
    1972:	20 34       	cpi	r18, 0x40	; 64
    1974:	59 f4       	brne	.+22     	; 0x198c <qtm_calibrate_sensor_node+0x3a>
    1976:	85 e0       	ldi	r24, 0x05	; 5
    1978:	86 9f       	mul	r24, r22
    197a:	d0 01       	movw	r26, r0
    197c:	87 9f       	mul	r24, r23
    197e:	b0 0d       	add	r27, r0
    1980:	11 24       	eor	r1, r1
    1982:	ae 0f       	add	r26, r30
    1984:	bf 1f       	adc	r27, r31
    1986:	84 e3       	ldi	r24, 0x34	; 52
    1988:	92 e0       	ldi	r25, 0x02	; 2
    198a:	0c c0       	rjmp	.+24     	; 0x19a4 <qtm_calibrate_sensor_node+0x52>
    198c:	20 38       	cpi	r18, 0x80	; 128
    198e:	81 f4       	brne	.+32     	; 0x19b0 <qtm_calibrate_sensor_node+0x5e>
    1990:	85 e0       	ldi	r24, 0x05	; 5
    1992:	86 9f       	mul	r24, r22
    1994:	d0 01       	movw	r26, r0
    1996:	87 9f       	mul	r24, r23
    1998:	b0 0d       	add	r27, r0
    199a:	11 24       	eor	r1, r1
    199c:	ae 0f       	add	r26, r30
    199e:	bf 1f       	adc	r27, r31
    19a0:	87 e6       	ldi	r24, 0x67	; 103
    19a2:	95 e0       	ldi	r25, 0x05	; 5
    19a4:	14 96       	adiw	r26, 0x04	; 4
    19a6:	9c 93       	st	X, r25
    19a8:	8e 93       	st	-X, r24
    19aa:	13 97       	sbiw	r26, 0x03	; 3
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	01 c0       	rjmp	.+2      	; 0x19b2 <qtm_calibrate_sensor_node+0x60>
    19b0:	82 e0       	ldi	r24, 0x02	; 2
    19b2:	95 e0       	ldi	r25, 0x05	; 5
    19b4:	96 9f       	mul	r25, r22
    19b6:	90 01       	movw	r18, r0
    19b8:	97 9f       	mul	r25, r23
    19ba:	30 0d       	add	r19, r0
    19bc:	11 24       	eor	r1, r1
    19be:	e2 0f       	add	r30, r18
    19c0:	f3 1f       	adc	r31, r19
    19c2:	90 81       	ld	r25, Z
    19c4:	92 60       	ori	r25, 0x02	; 2
    19c6:	90 83       	st	Z, r25
    19c8:	08 95       	ret
    19ca:	8b e0       	ldi	r24, 0x0B	; 11
    19cc:	08 95       	ret
    19ce:	82 e0       	ldi	r24, 0x02	; 2
    19d0:	08 95       	ret

000019d2 <qtm_m324pb_ptc_handler_eoc>:
    19d2:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    19d6:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    19da:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    19de:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <current_measure_channel>
    19e2:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <current_measure_channel+0x1>
    19e6:	ee 0f       	add	r30, r30
    19e8:	ff 1f       	adc	r31, r31
    19ea:	40 91 19 02 	lds	r20, 0x0219	; 0x800219 <qtm_raw_data_measurements_ptr>
    19ee:	50 91 1a 02 	lds	r21, 0x021A	; 0x80021a <qtm_raw_data_measurements_ptr+0x1>
    19f2:	e4 0f       	add	r30, r20
    19f4:	f5 1f       	adc	r31, r21
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	92 2b       	or	r25, r18
    19fa:	91 83       	std	Z+1, r25	; 0x01
    19fc:	80 83       	st	Z, r24
    19fe:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <good_eocs>
    1a02:	90 91 ba 01 	lds	r25, 0x01BA	; 0x8001ba <good_eocs+0x1>
    1a06:	01 96       	adiw	r24, 0x01	; 1
    1a08:	90 93 ba 01 	sts	0x01BA, r25	; 0x8001ba <good_eocs+0x1>
    1a0c:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <good_eocs>
    1a10:	89 2b       	or	r24, r25
    1a12:	21 f4       	brne	.+8      	; 0x1a1c <qtm_m324pb_ptc_handler_eoc+0x4a>
    1a14:	10 92 b8 01 	sts	0x01B8, r1	; 0x8001b8 <ptc_lockups+0x1>
    1a18:	10 92 b7 01 	sts	0x01B7, r1	; 0x8001b7 <ptc_lockups>
    1a1c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <current_measure_channel>
    1a20:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <current_measure_channel+0x1>
    1a24:	01 96       	adiw	r24, 0x01	; 1
    1a26:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <current_measure_channel+0x1>
    1a2a:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <current_measure_channel>
    1a2e:	0e 94 88 08 	call	0x1110	; 0x1110 <select_next_channel_to_measure>
    1a32:	81 11       	cpse	r24, r1
    1a34:	0a c0       	rjmp	.+20     	; 0x1a4a <qtm_m324pb_ptc_handler_eoc+0x78>
    1a36:	84 e0       	ldi	r24, 0x04	; 4
    1a38:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <touch_seq_lib_state>
    1a3c:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <current_measure_channel>
    1a40:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <current_measure_channel+0x1>
    1a44:	0e 94 bb 08 	call	0x1176	; 0x1176 <qtm_measure_node>
    1a48:	05 c0       	rjmp	.+10     	; 0x1a54 <qtm_m324pb_ptc_handler_eoc+0x82>
    1a4a:	e0 91 b5 01 	lds	r30, 0x01B5	; 0x8001b5 <ptc_seq_measure_complete_pointer>
    1a4e:	f0 91 b6 01 	lds	r31, 0x01B6	; 0x8001b6 <ptc_seq_measure_complete_pointer+0x1>
    1a52:	09 95       	icall
    1a54:	81 e0       	ldi	r24, 0x01	; 1
    1a56:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <ptc_eoc_ok_flag>
    1a5a:	08 95       	ret

00001a5c <__umulhisi3>:
    1a5c:	a2 9f       	mul	r26, r18
    1a5e:	b0 01       	movw	r22, r0
    1a60:	b3 9f       	mul	r27, r19
    1a62:	c0 01       	movw	r24, r0
    1a64:	a3 9f       	mul	r26, r19
    1a66:	70 0d       	add	r23, r0
    1a68:	81 1d       	adc	r24, r1
    1a6a:	11 24       	eor	r1, r1
    1a6c:	91 1d       	adc	r25, r1
    1a6e:	b2 9f       	mul	r27, r18
    1a70:	70 0d       	add	r23, r0
    1a72:	81 1d       	adc	r24, r1
    1a74:	11 24       	eor	r1, r1
    1a76:	91 1d       	adc	r25, r1
    1a78:	08 95       	ret

00001a7a <_exit>:
    1a7a:	f8 94       	cli

00001a7c <__stop_program>:
    1a7c:	ff cf       	rjmp	.-2      	; 0x1a7c <__stop_program>
