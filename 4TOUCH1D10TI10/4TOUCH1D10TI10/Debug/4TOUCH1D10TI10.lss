
4TOUCH1D10TI10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000076  00800100  000019d4  00001a68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019d4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000068  00800176  00800176  00001ade  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001ade  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d0  00000000  00000000  00001b80  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000306a  00000000  00000000  00001e50  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013d0  00000000  00000000  00004eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000147a  00000000  00000000  0000628a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005ac  00000000  00000000  00007704  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000188b  00000000  00000000  00007cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bae  00000000  00000000  0000953b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000a0e9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 6f 03 	jmp	0x6de	; 0x6de <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 f8 02 	jmp	0x5f0	; 0x5f0 <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	e4 ed       	ldi	r30, 0xD4	; 212
      e0:	f9 e1       	ldi	r31, 0x19	; 25
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a6 37       	cpi	r26, 0x76	; 118
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	a6 e7       	ldi	r26, 0x76	; 118
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	ae 3d       	cpi	r26, 0xDE	; 222
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <main>
     102:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     10a:	0e 94 2c 03 	call	0x658	; 0x658 <system_init>

	touch_init();
     10e:	0e 94 2d 02 	call	0x45a	; 0x45a <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31

	mega_touch_timer();
     136:	0e 94 ab 02 	call	0x556	; 0x556 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     13a:	a8 9a       	sbi	0x15, 0	; 21
}
     13c:	ff 91       	pop	r31
     13e:	ef 91       	pop	r30
     140:	bf 91       	pop	r27
     142:	af 91       	pop	r26
     144:	9f 91       	pop	r25
     146:	8f 91       	pop	r24
     148:	7f 91       	pop	r23
     14a:	6f 91       	pop	r22
     14c:	5f 91       	pop	r21
     14e:	4f 91       	pop	r20
     150:	3f 91       	pop	r19
     152:	2f 91       	pop	r18
     154:	0f 90       	pop	r0
     156:	0f be       	out	0x3f, r0	; 63
     158:	0f 90       	pop	r0
     15a:	1f 90       	pop	r1
     15c:	18 95       	reti

0000015e <SPI_MasterInit>:
uint8_t touch_counter_4 = 0;

void SPI_MasterInit()
{
	// Set SS, MOSI, and SCK as outputs
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     15e:	84 b1       	in	r24, 0x04	; 4
     160:	80 6b       	ori	r24, 0xB0	; 176
     162:	84 b9       	out	0x04, r24	; 4
	// Enable SPI, Set as Master
	SPCR0 = (1 << SPE) | (1 << MSTR);
     164:	80 e5       	ldi	r24, 0x50	; 80
     166:	8c bd       	out	0x2c, r24	; 44
	// Set SS pin high (inactive)
	PORTB |= (1 << SPI_SS_PIN);
     168:	2c 9a       	sbi	0x05, 4	; 5
     16a:	08 95       	ret

0000016c <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(uint8_t data)
{
	// Set SS pin low (activate slave)
	PORTB &= ~(1 << SPI_SS_PIN);
     16c:	2c 98       	cbi	0x05, 4	; 5
	// Start transmission
	SPDR0 = data;
     16e:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission to complete
	while (!(SPSR0 & (1 << SPIF)))
     170:	0d b4       	in	r0, 0x2d	; 45
     172:	07 fe       	sbrs	r0, 7
     174:	fd cf       	rjmp	.-6      	; 0x170 <SPI_MasterTransmit+0x4>
	{
		// Add timeout or error handling if necessary
	}
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
     176:	2c 9a       	sbi	0x05, 4	; 5
     178:	08 95       	ret

0000017a <SPI_MasterTransmitString>:
	}
}


// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	ec 01       	movw	r28, r24
	for (int i = 0; str[i] != '\0'; i++) {
     180:	88 81       	ld	r24, Y
     182:	88 23       	and	r24, r24
     184:	61 f0       	breq	.+24     	; 0x19e <SPI_MasterTransmitString+0x24>
     186:	21 96       	adiw	r28, 0x01	; 1
		SPI_MasterTransmit(str[i]);
     188:	0e 94 b6 00 	call	0x16c	; 0x16c <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18c:	87 ea       	ldi	r24, 0xA7	; 167
     18e:	91 e6       	ldi	r25, 0x61	; 97
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	f1 f7       	brne	.-4      	; 0x190 <SPI_MasterTransmitString+0x16>
     194:	00 c0       	rjmp	.+0      	; 0x196 <SPI_MasterTransmitString+0x1c>
     196:	00 00       	nop
}


// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     198:	89 91       	ld	r24, Y+
     19a:	81 11       	cpse	r24, r1
     19c:	f5 cf       	rjmp	.-22     	; 0x188 <SPI_MasterTransmitString+0xe>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	08 95       	ret

000001a4 <touchpin1>:
	}
	return 0;
}
void touchpin1() {
	// Get the status of the first touch sensor
	previous_key_status_1 = key_status_1;
     1a4:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <key_status_1>
     1a8:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <get_sensor_state>
     1b4:	80 78       	andi	r24, 0x80	; 128
     1b6:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1ba:	88 23       	and	r24, r24
     1bc:	c1 f0       	breq	.+48     	; 0x1ee <touchpin1+0x4a>
     1be:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <previous_key_status_1>
     1c2:	81 11       	cpse	r24, r1
     1c4:	14 c0       	rjmp	.+40     	; 0x1ee <touchpin1+0x4a>
		touch_counter_1++;
     1c6:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <touch_counter_1>
     1ca:	8f 5f       	subi	r24, 0xFF	; 255
     1cc:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <touch_counter_1>
		if (touch_counter_1 == 1) {
     1d0:	81 30       	cpi	r24, 0x01	; 1
     1d2:	29 f4       	brne	.+10     	; 0x1de <touchpin1+0x3a>
			SPI_MasterTransmitString("L1");
     1d4:	84 e6       	ldi	r24, 0x64	; 100
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     1dc:	08 95       	ret
		}
		else if (touch_counter_1 == 2) {
     1de:	82 30       	cpi	r24, 0x02	; 2
     1e0:	31 f4       	brne	.+12     	; 0x1ee <touchpin1+0x4a>
			SPI_MasterTransmitString("L1");
     1e2:	84 e6       	ldi	r24, 0x64	; 100
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_1 = 0;
     1ea:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <touch_counter_1>
     1ee:	08 95       	ret

000001f0 <touchpin2>:
		}
	}
}
void touchpin2() {
	// Get the status of the first touch sensor
	previous_key_status_2 = key_status_2;
     1f0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <key_status_2>
     1f4:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <get_sensor_state>
     200:	80 78       	andi	r24, 0x80	; 128
     202:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <key_status_2>
	if (key_status_2 && !previous_key_status_2) {
     206:	88 23       	and	r24, r24
     208:	c1 f0       	breq	.+48     	; 0x23a <touchpin2+0x4a>
     20a:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <previous_key_status_2>
     20e:	81 11       	cpse	r24, r1
     210:	14 c0       	rjmp	.+40     	; 0x23a <touchpin2+0x4a>
		touch_counter_2++;
     212:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <touch_counter_2>
     216:	8f 5f       	subi	r24, 0xFF	; 255
     218:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <touch_counter_2>
		if (touch_counter_2 == 1) {
     21c:	81 30       	cpi	r24, 0x01	; 1
     21e:	29 f4       	brne	.+10     	; 0x22a <touchpin2+0x3a>
			SPI_MasterTransmitString("L2");
     220:	87 e6       	ldi	r24, 0x67	; 103
     222:	91 e0       	ldi	r25, 0x01	; 1
     224:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     228:	08 95       	ret
		}
		else if (touch_counter_2 == 2) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	31 f4       	brne	.+12     	; 0x23a <touchpin2+0x4a>
			SPI_MasterTransmitString("L2");
     22e:	87 e6       	ldi	r24, 0x67	; 103
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_2 = 0;
     236:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <touch_counter_2>
     23a:	08 95       	ret

0000023c <touchpin3>:
		}
	}
}
void touchpin3() {
	// Get the status of the first touch sensor
	previous_key_status_3 = key_status_3;
     23c:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <key_status_3>
     240:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <previous_key_status_3>
	key_status_3 = get_sensor_state(2) & 0x80;
     244:	82 e0       	ldi	r24, 0x02	; 2
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <get_sensor_state>
     24c:	80 78       	andi	r24, 0x80	; 128
     24e:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <key_status_3>
	if (key_status_3 && !previous_key_status_3) {
     252:	88 23       	and	r24, r24
     254:	c1 f0       	breq	.+48     	; 0x286 <touchpin3+0x4a>
     256:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <previous_key_status_3>
     25a:	81 11       	cpse	r24, r1
     25c:	14 c0       	rjmp	.+40     	; 0x286 <touchpin3+0x4a>
		touch_counter_3++;
     25e:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <touch_counter_3>
     262:	8f 5f       	subi	r24, 0xFF	; 255
     264:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <touch_counter_3>
		if (touch_counter_3 == 1) {
     268:	81 30       	cpi	r24, 0x01	; 1
     26a:	29 f4       	brne	.+10     	; 0x276 <touchpin3+0x3a>
			SPI_MasterTransmitString("L3");
     26c:	8a e6       	ldi	r24, 0x6A	; 106
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     274:	08 95       	ret
		}
		else if (touch_counter_3 == 2) {
     276:	82 30       	cpi	r24, 0x02	; 2
     278:	31 f4       	brne	.+12     	; 0x286 <touchpin3+0x4a>
			SPI_MasterTransmitString("L3");
     27a:	8a e6       	ldi	r24, 0x6A	; 106
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_3 = 0;
     282:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <touch_counter_3>
     286:	08 95       	ret

00000288 <touchpin4>:
		}
	}
}
void touchpin4() {
	// Get the status of the first touch sensor
	previous_key_status_4 = key_status_4;
     288:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <key_status_4>
     28c:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     290:	83 e0       	ldi	r24, 0x03	; 3
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <get_sensor_state>
     298:	80 78       	andi	r24, 0x80	; 128
     29a:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <key_status_4>
	if (key_status_4 && !previous_key_status_4) {
     29e:	88 23       	and	r24, r24
     2a0:	c1 f0       	breq	.+48     	; 0x2d2 <touchpin4+0x4a>
     2a2:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <previous_key_status_4>
     2a6:	81 11       	cpse	r24, r1
     2a8:	14 c0       	rjmp	.+40     	; 0x2d2 <touchpin4+0x4a>
		touch_counter_4++;
     2aa:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__data_end>
     2ae:	8f 5f       	subi	r24, 0xFF	; 255
     2b0:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <__data_end>
		if (touch_counter_4 == 1) {
     2b4:	81 30       	cpi	r24, 0x01	; 1
     2b6:	29 f4       	brne	.+10     	; 0x2c2 <touchpin4+0x3a>
			SPI_MasterTransmitString("F1");
     2b8:	8d e6       	ldi	r24, 0x6D	; 109
     2ba:	91 e0       	ldi	r25, 0x01	; 1
     2bc:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     2c0:	08 95       	ret
		}
		else if (touch_counter_4 == 2) {
     2c2:	82 30       	cpi	r24, 0x02	; 2
     2c4:	31 f4       	brne	.+12     	; 0x2d2 <touchpin4+0x4a>
			SPI_MasterTransmitString("F1");
     2c6:	8d e6       	ldi	r24, 0x6D	; 109
     2c8:	91 e0       	ldi	r25, 0x01	; 1
     2ca:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_4 = 0;
     2ce:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <__data_end>
     2d2:	08 95       	ret

000002d4 <loop>:
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
}
void loop()
{
	touch_process();
     2d4:	0e 94 69 02 	call	0x4d2	; 0x4d2 <touch_process>
	// Check if touch measurement is done
	if (measurement_done_touch == 1)
     2d8:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <measurement_done_touch>
     2dc:	81 30       	cpi	r24, 0x01	; 1
     2de:	51 f4       	brne	.+20     	; 0x2f4 <loop+0x20>
	{
		measurement_done_touch = 0;
     2e0:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <measurement_done_touch>
		touchpin1();
     2e4:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <touchpin1>
		touchpin2();
     2e8:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <touchpin2>
		touchpin3();
     2ec:	0e 94 1e 01 	call	0x23c	; 0x23c <touchpin3>
		touchpin4();
     2f0:	0e 94 44 01 	call	0x288	; 0x288 <touchpin4>
     2f4:	08 95       	ret

000002f6 <main>:
	}
}
int main(void)
{
	/* Initializes MCU, drivers, and middleware */
	atmel_start_init();
     2f6:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	/* Enable interrupts */
	cpu_irq_enable();
     2fa:	78 94       	sei
	// Initialize SPI as master
	SPI_MasterInit();
     2fc:	0e 94 af 00 	call	0x15e	; 0x15e <SPI_MasterInit>
	while (1)
	{
		loop();
     300:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <loop>
     304:	fd cf       	rjmp	.-6      	; 0x300 <main+0xa>

00000306 <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     306:	08 95       	ret

00000308 <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     308:	cf 93       	push	r28
     30a:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     30c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <USART_is_tx_ready>
     310:	88 23       	and	r24, r24
     312:	e1 f3       	breq	.-8      	; 0x30c <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     314:	8c 2f       	mov	r24, r28
     316:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <USART_write>

	while (USART_is_tx_busy())
     31a:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <USART_is_tx_busy>
     31e:	81 11       	cpse	r24, r1
     320:	fc cf       	rjmp	.-8      	; 0x31a <datastreamer_transmit+0x12>
		;
}
     322:	cf 91       	pop	r28
     324:	08 95       	ret

00000326 <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     326:	ef 92       	push	r14
     328:	ff 92       	push	r15
     32a:	0f 93       	push	r16
     32c:	1f 93       	push	r17
     32e:	cf 93       	push	r28
     330:	df 93       	push	r29
     332:	00 d0       	rcall	.+0      	; 0x334 <datastreamer_output+0xe>
     334:	cd b7       	in	r28, 0x3d	; 61
     336:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     338:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <sequence.2485>
     33c:	8f 70       	andi	r24, 0x0F	; 15
     33e:	81 f4       	brne	.+32     	; 0x360 <datastreamer_output+0x3a>
     340:	00 e0       	ldi	r16, 0x00	; 0
     342:	11 e0       	ldi	r17, 0x01	; 1
     344:	0f 2e       	mov	r0, r31
     346:	f3 e1       	ldi	r31, 0x13	; 19
     348:	ef 2e       	mov	r14, r31
     34a:	f1 e0       	ldi	r31, 0x01	; 1
     34c:	ff 2e       	mov	r15, r31
     34e:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     350:	f8 01       	movw	r30, r16
     352:	81 91       	ld	r24, Z+
     354:	8f 01       	movw	r16, r30
     356:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     35a:	e0 16       	cp	r14, r16
     35c:	f1 06       	cpc	r15, r17
     35e:	c1 f7       	brne	.-16     	; 0x350 <datastreamer_output+0x2a>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     360:	85 e5       	ldi	r24, 0x55	; 85
     362:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     366:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <sequence.2485>
     36a:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     36e:	1a 82       	std	Y+2, r1	; 0x02
     370:	19 82       	std	Y+1, r1	; 0x01
     372:	89 81       	ldd	r24, Y+1	; 0x01
     374:	9a 81       	ldd	r25, Y+2	; 0x02
     376:	04 97       	sbiw	r24, 0x04	; 4
     378:	08 f0       	brcs	.+2      	; 0x37c <datastreamer_output+0x56>
     37a:	53 c0       	rjmp	.+166    	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     37c:	89 81       	ldd	r24, Y+1	; 0x01
     37e:	9a 81       	ldd	r25, Y+2	; 0x02
     380:	0e 94 c2 02 	call	0x584	; 0x584 <get_sensor_node_signal>
     384:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     386:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     38a:	81 2f       	mov	r24, r17
     38c:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     390:	89 81       	ldd	r24, Y+1	; 0x01
     392:	9a 81       	ldd	r25, Y+2	; 0x02
     394:	0e 94 cf 02 	call	0x59e	; 0x59e <get_sensor_node_reference>
     398:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     39a:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     39e:	81 2f       	mov	r24, r17
     3a0:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	9a 81       	ldd	r25, Y+2	; 0x02
     3a8:	0e 94 c2 02 	call	0x584	; 0x584 <get_sensor_node_signal>
     3ac:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     3ae:	89 81       	ldd	r24, Y+1	; 0x01
     3b0:	9a 81       	ldd	r25, Y+2	; 0x02
     3b2:	0e 94 cf 02 	call	0x59e	; 0x59e <get_sensor_node_reference>
     3b6:	08 1b       	sub	r16, r24
     3b8:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     3ba:	80 2f       	mov	r24, r16
     3bc:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     3c0:	81 2f       	mov	r24, r17
     3c2:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     3c6:	89 81       	ldd	r24, Y+1	; 0x01
     3c8:	9a 81       	ldd	r25, Y+2	; 0x02
     3ca:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <get_sensor_cc_val>
     3ce:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     3d0:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     3d4:	81 2f       	mov	r24, r17
     3d6:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     3da:	89 81       	ldd	r24, Y+1	; 0x01
     3dc:	9a 81       	ldd	r25, Y+2	; 0x02
     3de:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     3e2:	88 23       	and	r24, r24
     3e4:	24 f4       	brge	.+8      	; 0x3ee <datastreamer_output+0xc8>
			datastreamer_transmit(0x01);
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
     3ec:	03 c0       	rjmp	.+6      	; 0x3f4 <datastreamer_output+0xce>
		} else {
			datastreamer_transmit(0x00);
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     3f4:	89 81       	ldd	r24, Y+1	; 0x01
     3f6:	9a 81       	ldd	r25, Y+2	; 0x02
     3f8:	fc 01       	movw	r30, r24
     3fa:	ee 0f       	add	r30, r30
     3fc:	ff 1f       	adc	r31, r31
     3fe:	8e 0f       	add	r24, r30
     400:	9f 1f       	adc	r25, r31
     402:	fc 01       	movw	r30, r24
     404:	e5 5e       	subi	r30, 0xE5	; 229
     406:	fe 4f       	sbci	r31, 0xFE	; 254
     408:	80 81       	ld	r24, Z
     40a:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     40e:	89 81       	ldd	r24, Y+1	; 0x01
     410:	9a 81       	ldd	r25, Y+2	; 0x02
     412:	01 96       	adiw	r24, 0x01	; 1
     414:	9a 83       	std	Y+2, r25	; 0x02
     416:	89 83       	std	Y+1, r24	; 0x01
     418:	89 81       	ldd	r24, Y+1	; 0x01
     41a:	9a 81       	ldd	r25, Y+2	; 0x02
     41c:	04 97       	sbiw	r24, 0x04	; 4
     41e:	08 f4       	brcc	.+2      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
     420:	ad cf       	rjmp	.-166    	; 0x37c <datastreamer_output+0x56>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     422:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <module_error_code>
     426:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     42a:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <sequence.2485>
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	98 0f       	add	r25, r24
     432:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <sequence.2485>
     436:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     43a:	8a ea       	ldi	r24, 0xAA	; 170
     43c:	0e 94 84 01 	call	0x308	; 0x308 <datastreamer_transmit>
}
     440:	0f 90       	pop	r0
     442:	0f 90       	pop	r0
     444:	df 91       	pop	r29
     446:	cf 91       	pop	r28
     448:	1f 91       	pop	r17
     44a:	0f 91       	pop	r16
     44c:	ff 90       	pop	r15
     44e:	ef 90       	pop	r14
     450:	08 95       	ret

00000452 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <touch_postprocess_request>
     458:	08 95       	ret

0000045a <touch_init>:
     45a:	0f 93       	push	r16
     45c:	1f 93       	push	r17
     45e:	cf 93       	push	r28
     460:	df 93       	push	r29
     462:	88 e0       	ldi	r24, 0x08	; 8
     464:	87 bd       	out	0x27, r24	; 39
     466:	e3 e6       	ldi	r30, 0x63	; 99
     468:	f0 e0       	ldi	r31, 0x00	; 0
     46a:	80 81       	ld	r24, Z
     46c:	87 7f       	andi	r24, 0xF7	; 247
     46e:	80 83       	st	Z, r24
     470:	13 98       	cbi	0x02, 3	; 2
     472:	15 98       	cbi	0x02, 5	; 2
     474:	12 98       	cbi	0x02, 2	; 2
     476:	16 98       	cbi	0x02, 6	; 2
     478:	81 e3       	ldi	r24, 0x31	; 49
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	0e 94 a1 0a 	call	0x1542	; 0x1542 <qtm_ptc_init_acquisition_module>
     480:	8a eb       	ldi	r24, 0xBA	; 186
     482:	91 e0       	ldi	r25, 0x01	; 1
     484:	0e 94 32 0b 	call	0x1664	; 0x1664 <qtm_ptc_qtlib_assign_signal_memory>
     488:	c0 e0       	ldi	r28, 0x00	; 0
     48a:	d0 e0       	ldi	r29, 0x00	; 0
     48c:	be 01       	movw	r22, r28
     48e:	81 e3       	ldi	r24, 0x31	; 49
     490:	91 e0       	ldi	r25, 0x01	; 1
     492:	0e 94 35 0c 	call	0x186a	; 0x186a <qtm_enable_sensor_node>
     496:	be 01       	movw	r22, r28
     498:	81 e3       	ldi	r24, 0x31	; 49
     49a:	91 e0       	ldi	r25, 0x01	; 1
     49c:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <qtm_calibrate_sensor_node>
     4a0:	21 96       	adiw	r28, 0x01	; 1
     4a2:	c4 30       	cpi	r28, 0x04	; 4
     4a4:	d1 05       	cpc	r29, r1
     4a6:	91 f7       	brne	.-28     	; 0x48c <touch_init+0x32>
     4a8:	06 ea       	ldi	r16, 0xA6	; 166
     4aa:	11 e0       	ldi	r17, 0x01	; 1
     4ac:	c0 e0       	ldi	r28, 0x00	; 0
     4ae:	a8 01       	movw	r20, r16
     4b0:	6c 2f       	mov	r22, r28
     4b2:	83 e1       	ldi	r24, 0x13	; 19
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	0e 94 6d 04 	call	0x8da	; 0x8da <qtm_init_sensor_key>
     4ba:	cf 5f       	subi	r28, 0xFF	; 255
     4bc:	0b 5f       	subi	r16, 0xFB	; 251
     4be:	1f 4f       	sbci	r17, 0xFF	; 255
     4c0:	c4 30       	cpi	r28, 0x04	; 4
     4c2:	a9 f7       	brne	.-22     	; 0x4ae <touch_init+0x54>
     4c4:	0e 94 83 01 	call	0x306	; 0x306 <datastreamer_init>
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	08 95       	ret

000004d2 <touch_process>:
     4d2:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <time_to_measure_touch_flag>
     4d6:	81 30       	cpi	r24, 0x01	; 1
     4d8:	51 f4       	brne	.+20     	; 0x4ee <touch_process+0x1c>
     4da:	69 e2       	ldi	r22, 0x29	; 41
     4dc:	72 e0       	ldi	r23, 0x02	; 2
     4de:	81 e3       	ldi	r24, 0x31	; 49
     4e0:	91 e0       	ldi	r25, 0x01	; 1
     4e2:	0e 94 3c 0b 	call	0x1678	; 0x1678 <qtm_ptc_start_measurement_seq>
     4e6:	81 11       	cpse	r24, r1
     4e8:	02 c0       	rjmp	.+4      	; 0x4ee <touch_process+0x1c>
     4ea:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <time_to_measure_touch_flag>
     4ee:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <touch_postprocess_request>
     4f2:	81 30       	cpi	r24, 0x01	; 1
     4f4:	39 f5       	brne	.+78     	; 0x544 <touch_process+0x72>
     4f6:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <touch_postprocess_request>
     4fa:	0e 94 3a 09 	call	0x1274	; 0x1274 <qtm_acquisition_process>
     4fe:	81 11       	cpse	r24, r1
     500:	0c c0       	rjmp	.+24     	; 0x51a <touch_process+0x48>
     502:	83 e1       	ldi	r24, 0x13	; 19
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	0e 94 8c 04 	call	0x918	; 0x918 <qtm_key_sensors_process>
     50a:	88 23       	and	r24, r24
     50c:	59 f0       	breq	.+22     	; 0x524 <touch_process+0x52>
     50e:	82 e0       	ldi	r24, 0x02	; 2
     510:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <module_error_code>
     514:	0e 94 93 01 	call	0x326	; 0x326 <datastreamer_output>
     518:	05 c0       	rjmp	.+10     	; 0x524 <touch_process+0x52>
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <module_error_code>
     520:	0e 94 93 01 	call	0x326	; 0x326 <datastreamer_output>
     524:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     528:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     52c:	80 81       	ld	r24, Z
     52e:	88 23       	and	r24, r24
     530:	24 f4       	brge	.+8      	; 0x53a <touch_process+0x68>
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <time_to_measure_touch_flag>
     538:	03 c0       	rjmp	.+6      	; 0x540 <touch_process+0x6e>
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <measurement_done_touch>
     540:	0e 94 93 01 	call	0x326	; 0x326 <datastreamer_output>
     544:	08 95       	ret

00000546 <touch_timer_handler>:
     546:	81 e0       	ldi	r24, 0x01	; 1
     548:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <time_to_measure_touch_flag>
     54c:	84 e1       	ldi	r24, 0x14	; 20
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	0e 94 62 04 	call	0x8c4	; 0x8c4 <qtm_update_qtlib_timer>
     554:	08 95       	ret

00000556 <mega_touch_timer>:
     556:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <touch_time_counter.2335>
     55a:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <touch_time_counter.2335+0x1>
     55e:	44 97       	sbiw	r24, 0x14	; 20
     560:	39 f4       	brne	.+14     	; 0x570 <mega_touch_timer+0x1a>
     562:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <touch_time_counter.2335+0x1>
     566:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <touch_time_counter.2335>
     56a:	0e 94 a3 02 	call	0x546	; 0x546 <touch_timer_handler>
     56e:	08 95       	ret
     570:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <touch_time_counter.2335>
     574:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <touch_time_counter.2335+0x1>
     578:	01 96       	adiw	r24, 0x01	; 1
     57a:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <touch_time_counter.2335+0x1>
     57e:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <touch_time_counter.2335>
     582:	08 95       	ret

00000584 <get_sensor_node_signal>:
     584:	9c 01       	movw	r18, r24
     586:	22 0f       	add	r18, r18
     588:	33 1f       	adc	r19, r19
     58a:	22 0f       	add	r18, r18
     58c:	33 1f       	adc	r19, r19
     58e:	82 0f       	add	r24, r18
     590:	93 1f       	adc	r25, r19
     592:	fc 01       	movw	r30, r24
     594:	ea 55       	subi	r30, 0x5A	; 90
     596:	fe 4f       	sbci	r31, 0xFE	; 254
     598:	81 81       	ldd	r24, Z+1	; 0x01
     59a:	92 81       	ldd	r25, Z+2	; 0x02
     59c:	08 95       	ret

0000059e <get_sensor_node_reference>:
     59e:	9c 01       	movw	r18, r24
     5a0:	22 0f       	add	r18, r18
     5a2:	33 1f       	adc	r19, r19
     5a4:	82 0f       	add	r24, r18
     5a6:	93 1f       	adc	r25, r19
     5a8:	fc 01       	movw	r30, r24
     5aa:	ee 0f       	add	r30, r30
     5ac:	ff 1f       	adc	r31, r31
     5ae:	ee 53       	subi	r30, 0x3E	; 62
     5b0:	fe 4f       	sbci	r31, 0xFE	; 254
     5b2:	84 81       	ldd	r24, Z+4	; 0x04
     5b4:	95 81       	ldd	r25, Z+5	; 0x05
     5b6:	08 95       	ret

000005b8 <get_sensor_cc_val>:
     5b8:	9c 01       	movw	r18, r24
     5ba:	22 0f       	add	r18, r18
     5bc:	33 1f       	adc	r19, r19
     5be:	22 0f       	add	r18, r18
     5c0:	33 1f       	adc	r19, r19
     5c2:	82 0f       	add	r24, r18
     5c4:	93 1f       	adc	r25, r19
     5c6:	fc 01       	movw	r30, r24
     5c8:	ea 55       	subi	r30, 0x5A	; 90
     5ca:	fe 4f       	sbci	r31, 0xFE	; 254
     5cc:	83 81       	ldd	r24, Z+3	; 0x03
     5ce:	94 81       	ldd	r25, Z+4	; 0x04
     5d0:	08 95       	ret

000005d2 <get_sensor_state>:
     5d2:	9c 01       	movw	r18, r24
     5d4:	22 0f       	add	r18, r18
     5d6:	33 1f       	adc	r19, r19
     5d8:	82 0f       	add	r24, r18
     5da:	93 1f       	adc	r25, r19
     5dc:	88 0f       	add	r24, r24
     5de:	99 1f       	adc	r25, r25
     5e0:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     5e4:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     5e8:	e8 0f       	add	r30, r24
     5ea:	f9 1f       	adc	r31, r25
     5ec:	80 81       	ld	r24, Z
     5ee:	08 95       	ret

000005f0 <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     5f0:	1f 92       	push	r1
     5f2:	0f 92       	push	r0
     5f4:	0f b6       	in	r0, 0x3f	; 63
     5f6:	0f 92       	push	r0
     5f8:	11 24       	eor	r1, r1
     5fa:	2f 93       	push	r18
     5fc:	3f 93       	push	r19
     5fe:	4f 93       	push	r20
     600:	5f 93       	push	r21
     602:	6f 93       	push	r22
     604:	7f 93       	push	r23
     606:	8f 93       	push	r24
     608:	9f 93       	push	r25
     60a:	af 93       	push	r26
     60c:	bf 93       	push	r27
     60e:	ef 93       	push	r30
     610:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     612:	0e 94 94 0c 	call	0x1928	; 0x1928 <qtm_m324pb_ptc_handler_eoc>
}
     616:	ff 91       	pop	r31
     618:	ef 91       	pop	r30
     61a:	bf 91       	pop	r27
     61c:	af 91       	pop	r26
     61e:	9f 91       	pop	r25
     620:	8f 91       	pop	r24
     622:	7f 91       	pop	r23
     624:	6f 91       	pop	r22
     626:	5f 91       	pop	r21
     628:	4f 91       	pop	r20
     62a:	3f 91       	pop	r19
     62c:	2f 91       	pop	r18
     62e:	0f 90       	pop	r0
     630:	0f be       	out	0x3f, r0	; 63
     632:	0f 90       	pop	r0
     634:	1f 90       	pop	r1
     636:	18 95       	reti

00000638 <SPI_0_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     638:	26 98       	cbi	0x04, 6	; 4
     63a:	2e 98       	cbi	0x05, 6	; 5
     63c:	25 9a       	sbi	0x04, 5	; 4
     63e:	2d 98       	cbi	0x05, 5	; 5
     640:	27 9a       	sbi	0x04, 7	; 4
     642:	2f 98       	cbi	0x05, 7	; 5
     644:	0e 94 62 03 	call	0x6c4	; 0x6c4 <SPI_0_init>
     648:	08 95       	ret

0000064a <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     64a:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     64c:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     64e:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     650:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     652:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <USART_init>
     656:	08 95       	ret

00000658 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     658:	83 e0       	ldi	r24, 0x03	; 3
     65a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     65e:	8f ef       	ldi	r24, 0xFF	; 255
     660:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     664:	9f e0       	ldi	r25, 0x0F	; 15
     666:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     66a:	91 b1       	in	r25, 0x01	; 1
     66c:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     66e:	92 b1       	in	r25, 0x02	; 2
     670:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     672:	94 b1       	in	r25, 0x04	; 4
     674:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     676:	95 b1       	in	r25, 0x05	; 5
     678:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     67a:	97 b1       	in	r25, 0x07	; 7
     67c:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     67e:	98 b1       	in	r25, 0x08	; 8
     680:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     682:	9a b1       	in	r25, 0x0a	; 10
     684:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     686:	9b b1       	in	r25, 0x0b	; 11
     688:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     68a:	8d b1       	in	r24, 0x0d	; 13
     68c:	80 78       	andi	r24, 0x80	; 128
     68e:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     690:	8e b1       	in	r24, 0x0e	; 14
     692:	8f 67       	ori	r24, 0x7F	; 127
     694:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     696:	40 e0       	ldi	r20, 0x00	; 0
     698:	60 e8       	ldi	r22, 0x80	; 128
     69a:	81 e6       	ldi	r24, 0x61	; 97
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     6a2:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     6a4:	15 be       	out	0x35, r1	; 53

	ENABLE_INTERRUPTS();
     6a6:	78 94       	sei
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     6a8:	0e 94 1c 03 	call	0x638	; 0x638 <SPI_0_initialization>
}

void Timer_initialization(void)
{

	Timer_init();
     6ac:	0e 94 c5 03 	call	0x78a	; 0x78a <Timer_init>

	SPI_0_initialization();

	Timer_initialization();

	USART_initialization();
     6b0:	0e 94 25 03 	call	0x64a	; 0x64a <USART_initialization>
     6b4:	08 95       	ret

000006b6 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     6b6:	2f b7       	in	r18, 0x3f	; 63
	cli
     6b8:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     6ba:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     6bc:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     6be:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     6c0:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     6c2:	08 95       	ret

000006c4 <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     6c4:	e4 e6       	ldi	r30, 0x64	; 100
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	80 81       	ld	r24, Z
     6ca:	8b 7f       	andi	r24, 0xFB	; 251
     6cc:	80 83       	st	Z, r24
     6ce:	80 ed       	ldi	r24, 0xD0	; 208
     6d0:	8c bd       	out	0x2c, r24	; 44
     6d2:	e9 e8       	ldi	r30, 0x89	; 137
     6d4:	f1 e0       	ldi	r31, 0x01	; 1
     6d6:	10 82       	st	Z, r1
     6d8:	16 82       	std	Z+6, r1	; 0x06
     6da:	15 82       	std	Z+5, r1	; 0x05
     6dc:	08 95       	ret

000006de <__vector_19>:
}

ISR(SPI0_STC_vect)
{
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	0f 92       	push	r0
     6e6:	11 24       	eor	r1, r1
     6e8:	2f 93       	push	r18
     6ea:	3f 93       	push	r19
     6ec:	4f 93       	push	r20
     6ee:	5f 93       	push	r21
     6f0:	6f 93       	push	r22
     6f2:	7f 93       	push	r23
     6f4:	8f 93       	push	r24
     6f6:	9f 93       	push	r25
     6f8:	af 93       	push	r26
     6fa:	bf 93       	push	r27
     6fc:	cf 93       	push	r28
     6fe:	df 93       	push	r29
     700:	ef 93       	push	r30
     702:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
     704:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
     706:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <SPI_0_desc+0x4>
     70a:	82 30       	cpi	r24, 0x02	; 2
     70c:	11 f1       	breq	.+68     	; 0x752 <__vector_19+0x74>
		*SPI_0_desc.data = rdata;
     70e:	c9 e8       	ldi	r28, 0x89	; 137
     710:	d1 e0       	ldi	r29, 0x01	; 1
     712:	a9 81       	ldd	r26, Y+1	; 0x01
     714:	ba 81       	ldd	r27, Y+2	; 0x02
     716:	fd 01       	movw	r30, r26
     718:	91 93       	st	Z+, r25
	}

	SPI_0_desc.data++;
     71a:	fa 83       	std	Y+2, r31	; 0x02
     71c:	e9 83       	std	Y+1, r30	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     71e:	81 30       	cpi	r24, 0x01	; 1
     720:	19 f0       	breq	.+6      	; 0x728 <__vector_19+0x4a>
		wdata = *SPI_0_desc.data;
     722:	11 96       	adiw	r26, 0x01	; 1
     724:	9c 91       	ld	r25, X
     726:	01 c0       	rjmp	.+2      	; 0x72a <__vector_19+0x4c>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
	uint8_t wdata = 0;
     728:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     72a:	e9 e8       	ldi	r30, 0x89	; 137
     72c:	f1 e0       	ldi	r31, 0x01	; 1
     72e:	83 81       	ldd	r24, Z+3	; 0x03
     730:	81 50       	subi	r24, 0x01	; 1
     732:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     734:	88 23       	and	r24, r24
     736:	11 f0       	breq	.+4      	; 0x73c <__vector_19+0x5e>
		// more data to send, send a byte
		SPDR0 = wdata;
     738:	9e bd       	out	0x2e, r25	; 46
     73a:	14 c0       	rjmp	.+40     	; 0x764 <__vector_19+0x86>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     73c:	e9 e8       	ldi	r30, 0x89	; 137
     73e:	f1 e0       	ldi	r31, 0x01	; 1
     740:	83 e0       	ldi	r24, 0x03	; 3
     742:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     744:	05 80       	ldd	r0, Z+5	; 0x05
     746:	f6 81       	ldd	r31, Z+6	; 0x06
     748:	e0 2d       	mov	r30, r0
     74a:	30 97       	sbiw	r30, 0x00	; 0
     74c:	59 f0       	breq	.+22     	; 0x764 <__vector_19+0x86>
			SPI_0_desc.cb();
     74e:	09 95       	icall
		}
	}
}
     750:	09 c0       	rjmp	.+18     	; 0x764 <__vector_19+0x86>

	if (SPI_0_desc.type != SPI_WRITE) {
		*SPI_0_desc.data = rdata;
	}

	SPI_0_desc.data++;
     752:	e9 e8       	ldi	r30, 0x89	; 137
     754:	f1 e0       	ldi	r31, 0x01	; 1
     756:	a1 81       	ldd	r26, Z+1	; 0x01
     758:	b2 81       	ldd	r27, Z+2	; 0x02
     75a:	cd 01       	movw	r24, r26
     75c:	01 96       	adiw	r24, 0x01	; 1
     75e:	92 83       	std	Z+2, r25	; 0x02
     760:	81 83       	std	Z+1, r24	; 0x01
     762:	df cf       	rjmp	.-66     	; 0x722 <__vector_19+0x44>
		SPI_0_desc.status = SPI_DONE;
		if (SPI_0_desc.cb != NULL) {
			SPI_0_desc.cb();
		}
	}
}
     764:	ff 91       	pop	r31
     766:	ef 91       	pop	r30
     768:	df 91       	pop	r29
     76a:	cf 91       	pop	r28
     76c:	bf 91       	pop	r27
     76e:	af 91       	pop	r26
     770:	9f 91       	pop	r25
     772:	8f 91       	pop	r24
     774:	7f 91       	pop	r23
     776:	6f 91       	pop	r22
     778:	5f 91       	pop	r21
     77a:	4f 91       	pop	r20
     77c:	3f 91       	pop	r19
     77e:	2f 91       	pop	r18
     780:	0f 90       	pop	r0
     782:	0f be       	out	0x3f, r0	; 63
     784:	0f 90       	pop	r0
     786:	1f 90       	pop	r1
     788:	18 95       	reti

0000078a <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     78a:	e4 e6       	ldi	r30, 0x64	; 100
     78c:	f0 e0       	ldi	r31, 0x00	; 0
     78e:	80 81       	ld	r24, Z
     790:	8f 7d       	andi	r24, 0xDF	; 223
     792:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     794:	82 e0       	ldi	r24, 0x02	; 2
     796:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     798:	95 e0       	ldi	r25, 0x05	; 5
     79a:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     79c:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	08 95       	ret

000007a4 <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     7a4:	e4 e6       	ldi	r30, 0x64	; 100
     7a6:	f0 e0       	ldi	r31, 0x00	; 0
     7a8:	80 81       	ld	r24, Z
     7aa:	8d 7f       	andi	r24, 0xFD	; 253
     7ac:	80 83       	st	Z, r24
     7ae:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     7b2:	8c e0       	ldi	r24, 0x0C	; 12
     7b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     7b8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     7bc:	88 e0       	ldi	r24, 0x08	; 8
     7be:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	08 95       	ret

000007c6 <USART_is_tx_ready>:
     7c6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     7ca:	85 fb       	bst	r24, 5
     7cc:	88 27       	eor	r24, r24
     7ce:	80 f9       	bld	r24, 0
     7d0:	08 95       	ret

000007d2 <USART_is_tx_busy>:
     7d2:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     7d6:	86 fb       	bst	r24, 6
     7d8:	88 27       	eor	r24, r24
     7da:	80 f9       	bld	r24, 0
     7dc:	91 e0       	ldi	r25, 0x01	; 1
     7de:	89 27       	eor	r24, r25
     7e0:	08 95       	ret

000007e2 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     7e2:	e0 ec       	ldi	r30, 0xC0	; 192
     7e4:	f0 e0       	ldi	r31, 0x00	; 0
     7e6:	90 81       	ld	r25, Z
     7e8:	95 ff       	sbrs	r25, 5
     7ea:	fd cf       	rjmp	.-6      	; 0x7e6 <USART_write+0x4>
		;
	UDR0 = data;
     7ec:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     7f0:	08 95       	ret

000007f2 <check_for_aks_block>:
     7f2:	cf 92       	push	r12
     7f4:	df 92       	push	r13
     7f6:	ff 92       	push	r15
     7f8:	0f 93       	push	r16
     7fa:	1f 93       	push	r17
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	ec 01       	movw	r28, r24
     802:	ae 81       	ldd	r26, Y+6	; 0x06
     804:	bf 81       	ldd	r27, Y+7	; 0x07
     806:	eb 01       	movw	r28, r22
     808:	cc 0f       	add	r28, r28
     80a:	dd 1f       	adc	r29, r29
     80c:	c6 0f       	add	r28, r22
     80e:	d7 1f       	adc	r29, r23
     810:	ca 0f       	add	r28, r26
     812:	db 1f       	adc	r29, r27
     814:	fa 80       	ldd	r15, Y+2	; 0x02
     816:	fc 01       	movw	r30, r24
     818:	44 81       	ldd	r20, Z+4	; 0x04
     81a:	55 81       	ldd	r21, Z+5	; 0x05
     81c:	e6 e0       	ldi	r30, 0x06	; 6
     81e:	e6 9f       	mul	r30, r22
     820:	90 01       	movw	r18, r0
     822:	e7 9f       	mul	r30, r23
     824:	30 0d       	add	r19, r0
     826:	11 24       	eor	r1, r1
     828:	8a 01       	movw	r16, r20
     82a:	02 0f       	add	r16, r18
     82c:	13 1f       	adc	r17, r19
     82e:	f8 01       	movw	r30, r16
     830:	22 81       	ldd	r18, Z+2	; 0x02
     832:	33 81       	ldd	r19, Z+3	; 0x03
     834:	f9 01       	movw	r30, r18
     836:	21 81       	ldd	r18, Z+1	; 0x01
     838:	32 81       	ldd	r19, Z+2	; 0x02
     83a:	f8 01       	movw	r30, r16
     83c:	04 81       	ldd	r16, Z+4	; 0x04
     83e:	15 81       	ldd	r17, Z+5	; 0x05
     840:	20 1b       	sub	r18, r16
     842:	31 0b       	sbc	r19, r17
     844:	e8 81       	ld	r30, Y
     846:	2e 1b       	sub	r18, r30
     848:	31 09       	sbc	r19, r1
     84a:	ec 01       	movw	r28, r24
     84c:	ea 81       	ldd	r30, Y+2	; 0x02
     84e:	fb 81       	ldd	r31, Y+3	; 0x03
     850:	00 81       	ld	r16, Z
     852:	11 81       	ldd	r17, Z+1	; 0x01
     854:	fa 01       	movw	r30, r20
     856:	40 e0       	ldi	r20, 0x00	; 0
     858:	50 e0       	ldi	r21, 0x00	; 0
     85a:	40 17       	cp	r20, r16
     85c:	51 07       	cpc	r21, r17
     85e:	39 f1       	breq	.+78     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
     860:	46 17       	cp	r20, r22
     862:	57 07       	cpc	r21, r23
     864:	f9 f0       	breq	.+62     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
     866:	12 96       	adiw	r26, 0x02	; 2
     868:	8c 91       	ld	r24, X
     86a:	12 97       	sbiw	r26, 0x02	; 2
     86c:	f8 12       	cpse	r15, r24
     86e:	1a c0       	rjmp	.+52     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
     870:	80 81       	ld	r24, Z
     872:	85 58       	subi	r24, 0x85	; 133
     874:	82 30       	cpi	r24, 0x02	; 2
     876:	e8 f0       	brcs	.+58     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
     878:	c4 80       	ldd	r12, Z+4	; 0x04
     87a:	d5 80       	ldd	r13, Z+5	; 0x05
     87c:	82 81       	ldd	r24, Z+2	; 0x02
     87e:	93 81       	ldd	r25, Z+3	; 0x03
     880:	ec 01       	movw	r28, r24
     882:	89 81       	ldd	r24, Y+1	; 0x01
     884:	9a 81       	ldd	r25, Y+2	; 0x02
     886:	c8 16       	cp	r12, r24
     888:	d9 06       	cpc	r13, r25
     88a:	60 f4       	brcc	.+24     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
     88c:	8c 19       	sub	r24, r12
     88e:	9d 09       	sbc	r25, r13
     890:	cc 91       	ld	r28, X
     892:	d0 e0       	ldi	r29, 0x00	; 0
     894:	c8 17       	cp	r28, r24
     896:	d9 07       	cpc	r29, r25
     898:	28 f4       	brcc	.+10     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
     89a:	8c 1b       	sub	r24, r28
     89c:	9d 0b       	sbc	r25, r29
     89e:	28 17       	cp	r18, r24
     8a0:	39 07       	cpc	r19, r25
     8a2:	38 f0       	brcs	.+14     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
     8a4:	4f 5f       	subi	r20, 0xFF	; 255
     8a6:	5f 4f       	sbci	r21, 0xFF	; 255
     8a8:	13 96       	adiw	r26, 0x03	; 3
     8aa:	36 96       	adiw	r30, 0x06	; 6
     8ac:	d6 cf       	rjmp	.-84     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	01 c0       	rjmp	.+2      	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
     8b2:	81 e0       	ldi	r24, 0x01	; 1
     8b4:	df 91       	pop	r29
     8b6:	cf 91       	pop	r28
     8b8:	1f 91       	pop	r17
     8ba:	0f 91       	pop	r16
     8bc:	ff 90       	pop	r15
     8be:	df 90       	pop	r13
     8c0:	cf 90       	pop	r12
     8c2:	08 95       	ret

000008c4 <qtm_update_qtlib_timer>:
     8c4:	20 91 90 01 	lds	r18, 0x0190	; 0x800190 <qtm_local_ms_timecount>
     8c8:	30 91 91 01 	lds	r19, 0x0191	; 0x800191 <qtm_local_ms_timecount+0x1>
     8cc:	82 0f       	add	r24, r18
     8ce:	93 1f       	adc	r25, r19
     8d0:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <qtm_local_ms_timecount+0x1>
     8d4:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <qtm_local_ms_timecount>
     8d8:	08 95       	ret

000008da <qtm_init_sensor_key>:
     8da:	00 97       	sbiw	r24, 0x00	; 0
     8dc:	d9 f0       	breq	.+54     	; 0x914 <__stack+0x15>
     8de:	41 15       	cp	r20, r1
     8e0:	51 05       	cpc	r21, r1
     8e2:	c1 f0       	breq	.+48     	; 0x914 <__stack+0x15>
     8e4:	26 e0       	ldi	r18, 0x06	; 6
     8e6:	62 9f       	mul	r22, r18
     8e8:	b0 01       	movw	r22, r0
     8ea:	11 24       	eor	r1, r1
     8ec:	dc 01       	movw	r26, r24
     8ee:	14 96       	adiw	r26, 0x04	; 4
     8f0:	ed 91       	ld	r30, X+
     8f2:	fc 91       	ld	r31, X
     8f4:	15 97       	sbiw	r26, 0x05	; 5
     8f6:	e6 0f       	add	r30, r22
     8f8:	f7 1f       	adc	r31, r23
     8fa:	21 e0       	ldi	r18, 0x01	; 1
     8fc:	20 83       	st	Z, r18
     8fe:	14 96       	adiw	r26, 0x04	; 4
     900:	8d 91       	ld	r24, X+
     902:	9c 91       	ld	r25, X
     904:	15 97       	sbiw	r26, 0x05	; 5
     906:	fc 01       	movw	r30, r24
     908:	e6 0f       	add	r30, r22
     90a:	f7 1f       	adc	r31, r23
     90c:	53 83       	std	Z+3, r21	; 0x03
     90e:	42 83       	std	Z+2, r20	; 0x02
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	08 95       	ret
     914:	8b e0       	ldi	r24, 0x0B	; 11
     916:	08 95       	ret

00000918 <qtm_key_sensors_process>:
     918:	2f 92       	push	r2
     91a:	3f 92       	push	r3
     91c:	4f 92       	push	r4
     91e:	5f 92       	push	r5
     920:	6f 92       	push	r6
     922:	7f 92       	push	r7
     924:	8f 92       	push	r8
     926:	9f 92       	push	r9
     928:	af 92       	push	r10
     92a:	bf 92       	push	r11
     92c:	cf 92       	push	r12
     92e:	df 92       	push	r13
     930:	ef 92       	push	r14
     932:	ff 92       	push	r15
     934:	0f 93       	push	r16
     936:	1f 93       	push	r17
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	00 97       	sbiw	r24, 0x00	; 0
     93e:	09 f4       	brne	.+2      	; 0x942 <qtm_key_sensors_process+0x2a>
     940:	7e c3       	rjmp	.+1788   	; 0x103e <qtm_key_sensors_process+0x726>
     942:	ec 01       	movw	r28, r24
     944:	a1 2c       	mov	r10, r1
     946:	b1 2c       	mov	r11, r1
     948:	81 2c       	mov	r8, r1
     94a:	91 2c       	mov	r9, r1
     94c:	21 2c       	mov	r2, r1
     94e:	d1 2c       	mov	r13, r1
     950:	55 24       	eor	r5, r5
     952:	53 94       	inc	r5
     954:	33 e0       	ldi	r19, 0x03	; 3
     956:	c3 2e       	mov	r12, r19
     958:	45 e8       	ldi	r20, 0x85	; 133
     95a:	64 2e       	mov	r6, r20
     95c:	56 e8       	ldi	r21, 0x86	; 134
     95e:	75 2e       	mov	r7, r21
     960:	62 e0       	ldi	r22, 0x02	; 2
     962:	36 2e       	mov	r3, r22
     964:	78 e0       	ldi	r23, 0x08	; 8
     966:	47 2e       	mov	r4, r23
     968:	ea 81       	ldd	r30, Y+2	; 0x02
     96a:	fb 81       	ldd	r31, Y+3	; 0x03
     96c:	80 81       	ld	r24, Z
     96e:	91 81       	ldd	r25, Z+1	; 0x01
     970:	88 16       	cp	r8, r24
     972:	99 06       	cpc	r9, r25
     974:	08 f0       	brcs	.+2      	; 0x978 <qtm_key_sensors_process+0x60>
     976:	a6 c1       	rjmp	.+844    	; 0xcc4 <qtm_key_sensors_process+0x3ac>
     978:	75 01       	movw	r14, r10
     97a:	ee 0c       	add	r14, r14
     97c:	ff 1c       	adc	r15, r15
     97e:	ec 81       	ldd	r30, Y+4	; 0x04
     980:	fd 81       	ldd	r31, Y+5	; 0x05
     982:	ee 0d       	add	r30, r14
     984:	ff 1d       	adc	r31, r15
     986:	a2 81       	ldd	r26, Z+2	; 0x02
     988:	b3 81       	ldd	r27, Z+3	; 0x03
     98a:	9c 91       	ld	r25, X
     98c:	9e 71       	andi	r25, 0x1E	; 30
     98e:	09 f0       	breq	.+2      	; 0x992 <qtm_key_sensors_process+0x7a>
     990:	50 82       	st	Z, r5
     992:	0c 81       	ldd	r16, Y+4	; 0x04
     994:	1d 81       	ldd	r17, Y+5	; 0x05
     996:	0e 0d       	add	r16, r14
     998:	1f 1d       	adc	r17, r15
     99a:	d8 01       	movw	r26, r16
     99c:	8c 91       	ld	r24, X
     99e:	84 30       	cpi	r24, 0x04	; 4
     9a0:	09 f4       	brne	.+2      	; 0x9a4 <qtm_key_sensors_process+0x8c>
     9a2:	9e c0       	rjmp	.+316    	; 0xae0 <qtm_key_sensors_process+0x1c8>
     9a4:	38 f4       	brcc	.+14     	; 0x9b4 <qtm_key_sensors_process+0x9c>
     9a6:	82 30       	cpi	r24, 0x02	; 2
     9a8:	d1 f0       	breq	.+52     	; 0x9de <qtm_key_sensors_process+0xc6>
     9aa:	08 f0       	brcs	.+2      	; 0x9ae <qtm_key_sensors_process+0x96>
     9ac:	45 c0       	rjmp	.+138    	; 0xa38 <qtm_key_sensors_process+0x120>
     9ae:	81 30       	cpi	r24, 0x01	; 1
     9b0:	59 f0       	breq	.+22     	; 0x9c8 <qtm_key_sensors_process+0xb0>
     9b2:	81 c1       	rjmp	.+770    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     9b4:	85 38       	cpi	r24, 0x85	; 133
     9b6:	09 f4       	brne	.+2      	; 0x9ba <qtm_key_sensors_process+0xa2>
     9b8:	bf c0       	rjmp	.+382    	; 0xb38 <qtm_key_sensors_process+0x220>
     9ba:	86 38       	cpi	r24, 0x86	; 134
     9bc:	09 f4       	brne	.+2      	; 0x9c0 <qtm_key_sensors_process+0xa8>
     9be:	f5 c0       	rjmp	.+490    	; 0xbaa <qtm_key_sensors_process+0x292>
     9c0:	87 30       	cpi	r24, 0x07	; 7
     9c2:	09 f0       	breq	.+2      	; 0x9c6 <qtm_key_sensors_process+0xae>
     9c4:	78 c1       	rjmp	.+752    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     9c6:	36 c1       	rjmp	.+620    	; 0xc34 <qtm_key_sensors_process+0x31c>
     9c8:	91 11       	cpse	r25, r1
     9ca:	67 c1       	rjmp	.+718    	; 0xc9a <qtm_key_sensors_process+0x382>
     9cc:	f8 01       	movw	r30, r16
     9ce:	30 82       	st	Z, r3
     9d0:	8c 81       	ldd	r24, Y+4	; 0x04
     9d2:	9d 81       	ldd	r25, Y+5	; 0x05
     9d4:	fc 01       	movw	r30, r24
     9d6:	ee 0d       	add	r30, r14
     9d8:	ff 1d       	adc	r31, r15
     9da:	41 82       	std	Z+1, r4	; 0x01
     9dc:	5e c1       	rjmp	.+700    	; 0xc9a <qtm_key_sensors_process+0x382>
     9de:	d8 01       	movw	r26, r16
     9e0:	11 96       	adiw	r26, 0x01	; 1
     9e2:	2c 91       	ld	r18, X
     9e4:	11 97       	sbiw	r26, 0x01	; 1
     9e6:	22 23       	and	r18, r18
     9e8:	29 f1       	breq	.+74     	; 0xa34 <qtm_key_sensors_process+0x11c>
     9ea:	12 96       	adiw	r26, 0x02	; 2
     9ec:	ed 91       	ld	r30, X+
     9ee:	fc 91       	ld	r31, X
     9f0:	13 97       	sbiw	r26, 0x03	; 3
     9f2:	25 30       	cpi	r18, 0x05	; 5
     9f4:	18 f0       	brcs	.+6      	; 0x9fc <qtm_key_sensors_process+0xe4>
     9f6:	81 81       	ldd	r24, Z+1	; 0x01
     9f8:	92 81       	ldd	r25, Z+2	; 0x02
     9fa:	0e c0       	rjmp	.+28     	; 0xa18 <qtm_key_sensors_process+0x100>
     9fc:	d8 01       	movw	r26, r16
     9fe:	14 96       	adiw	r26, 0x04	; 4
     a00:	8d 91       	ld	r24, X+
     a02:	9c 91       	ld	r25, X
     a04:	15 97       	sbiw	r26, 0x05	; 5
     a06:	41 81       	ldd	r20, Z+1	; 0x01
     a08:	52 81       	ldd	r21, Z+2	; 0x02
     a0a:	84 17       	cp	r24, r20
     a0c:	95 07       	cpc	r25, r21
     a0e:	69 f0       	breq	.+26     	; 0xa2a <qtm_key_sensors_process+0x112>
     a10:	48 17       	cp	r20, r24
     a12:	59 07       	cpc	r21, r25
     a14:	30 f4       	brcc	.+12     	; 0xa22 <qtm_key_sensors_process+0x10a>
     a16:	01 97       	sbiw	r24, 0x01	; 1
     a18:	15 96       	adiw	r26, 0x05	; 5
     a1a:	9c 93       	st	X, r25
     a1c:	8e 93       	st	-X, r24
     a1e:	14 97       	sbiw	r26, 0x04	; 4
     a20:	04 c0       	rjmp	.+8      	; 0xa2a <qtm_key_sensors_process+0x112>
     a22:	01 96       	adiw	r24, 0x01	; 1
     a24:	f8 01       	movw	r30, r16
     a26:	95 83       	std	Z+5, r25	; 0x05
     a28:	84 83       	std	Z+4, r24	; 0x04
     a2a:	21 50       	subi	r18, 0x01	; 1
     a2c:	d8 01       	movw	r26, r16
     a2e:	11 96       	adiw	r26, 0x01	; 1
     a30:	2c 93       	st	X, r18
     a32:	33 c1       	rjmp	.+614    	; 0xc9a <qtm_key_sensors_process+0x382>
     a34:	f8 01       	movw	r30, r16
     a36:	2d c1       	rjmp	.+602    	; 0xc92 <qtm_key_sensors_process+0x37a>
     a38:	d8 01       	movw	r26, r16
     a3a:	14 96       	adiw	r26, 0x04	; 4
     a3c:	2d 91       	ld	r18, X+
     a3e:	3c 91       	ld	r19, X
     a40:	15 97       	sbiw	r26, 0x05	; 5
     a42:	12 96       	adiw	r26, 0x02	; 2
     a44:	ed 91       	ld	r30, X+
     a46:	fc 91       	ld	r31, X
     a48:	13 97       	sbiw	r26, 0x03	; 3
     a4a:	41 81       	ldd	r20, Z+1	; 0x01
     a4c:	52 81       	ldd	r21, Z+2	; 0x02
     a4e:	24 17       	cp	r18, r20
     a50:	35 07       	cpc	r19, r21
     a52:	09 f4       	brne	.+2      	; 0xa56 <qtm_key_sensors_process+0x13e>
     a54:	30 c1       	rjmp	.+608    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     a56:	8e 81       	ldd	r24, Y+6	; 0x06
     a58:	9f 81       	ldd	r25, Y+7	; 0x07
     a5a:	42 17       	cp	r20, r18
     a5c:	53 07       	cpc	r21, r19
     a5e:	f8 f4       	brcc	.+62     	; 0xa9e <qtm_key_sensors_process+0x186>
     a60:	ea 81       	ldd	r30, Y+2	; 0x02
     a62:	fb 81       	ldd	r31, Y+3	; 0x03
     a64:	24 1b       	sub	r18, r20
     a66:	35 0b       	sbc	r19, r21
     a68:	dc 01       	movw	r26, r24
     a6a:	aa 0d       	add	r26, r10
     a6c:	bb 1d       	adc	r27, r11
     a6e:	8c 91       	ld	r24, X
     a70:	90 e0       	ldi	r25, 0x00	; 0
     a72:	05 80       	ldd	r0, Z+5	; 0x05
     a74:	02 c0       	rjmp	.+4      	; 0xa7a <qtm_key_sensors_process+0x162>
     a76:	95 95       	asr	r25
     a78:	87 95       	ror	r24
     a7a:	0a 94       	dec	r0
     a7c:	e2 f7       	brpl	.-8      	; 0xa76 <qtm_key_sensors_process+0x15e>
     a7e:	99 27       	eor	r25, r25
     a80:	28 17       	cp	r18, r24
     a82:	39 07       	cpc	r19, r25
     a84:	08 f4       	brcc	.+2      	; 0xa88 <qtm_key_sensors_process+0x170>
     a86:	17 c1       	rjmp	.+558    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     a88:	84 81       	ldd	r24, Z+4	; 0x04
     a8a:	88 23       	and	r24, r24
     a8c:	09 f4       	brne	.+2      	; 0xa90 <qtm_key_sensors_process+0x178>
     a8e:	13 c1       	rjmp	.+550    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     a90:	87 e0       	ldi	r24, 0x07	; 7
     a92:	f8 01       	movw	r30, r16
     a94:	80 83       	st	Z, r24
     a96:	ea 81       	ldd	r30, Y+2	; 0x02
     a98:	fb 81       	ldd	r31, Y+3	; 0x03
     a9a:	24 81       	ldd	r18, Z+4	; 0x04
     a9c:	1a c0       	rjmp	.+52     	; 0xad2 <qtm_key_sensors_process+0x1ba>
     a9e:	fc 01       	movw	r30, r24
     aa0:	ea 0d       	add	r30, r10
     aa2:	fb 1d       	adc	r31, r11
     aa4:	42 1b       	sub	r20, r18
     aa6:	53 0b       	sbc	r21, r19
     aa8:	80 81       	ld	r24, Z
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	48 17       	cp	r20, r24
     aae:	59 07       	cpc	r21, r25
     ab0:	08 f4       	brcc	.+2      	; 0xab4 <qtm_key_sensors_process+0x19c>
     ab2:	01 c1       	rjmp	.+514    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     ab4:	82 81       	ldd	r24, Z+2	; 0x02
     ab6:	88 23       	and	r24, r24
     ab8:	31 f0       	breq	.+12     	; 0xac6 <qtm_key_sensors_process+0x1ae>
     aba:	b4 01       	movw	r22, r8
     abc:	ce 01       	movw	r24, r28
     abe:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <check_for_aks_block>
     ac2:	81 11       	cpse	r24, r1
     ac4:	f8 c0       	rjmp	.+496    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     ac6:	e4 e0       	ldi	r30, 0x04	; 4
     ac8:	d8 01       	movw	r26, r16
     aca:	ec 93       	st	X, r30
     acc:	ea 81       	ldd	r30, Y+2	; 0x02
     ace:	fb 81       	ldd	r31, Y+3	; 0x03
     ad0:	22 81       	ldd	r18, Z+2	; 0x02
     ad2:	8c 81       	ldd	r24, Y+4	; 0x04
     ad4:	9d 81       	ldd	r25, Y+5	; 0x05
     ad6:	fc 01       	movw	r30, r24
     ad8:	ee 0d       	add	r30, r14
     ada:	ff 1d       	adc	r31, r15
     adc:	21 83       	std	Z+1, r18	; 0x01
     ade:	dd c0       	rjmp	.+442    	; 0xc9a <qtm_key_sensors_process+0x382>
     ae0:	d8 01       	movw	r26, r16
     ae2:	14 96       	adiw	r26, 0x04	; 4
     ae4:	2d 91       	ld	r18, X+
     ae6:	3c 91       	ld	r19, X
     ae8:	15 97       	sbiw	r26, 0x05	; 5
     aea:	12 96       	adiw	r26, 0x02	; 2
     aec:	ed 91       	ld	r30, X+
     aee:	fc 91       	ld	r31, X
     af0:	13 97       	sbiw	r26, 0x03	; 3
     af2:	81 81       	ldd	r24, Z+1	; 0x01
     af4:	92 81       	ldd	r25, Z+2	; 0x02
     af6:	82 17       	cp	r24, r18
     af8:	93 07       	cpc	r25, r19
     afa:	08 f4       	brcc	.+2      	; 0xafe <qtm_key_sensors_process+0x1e6>
     afc:	bb c0       	rjmp	.+374    	; 0xc74 <qtm_key_sensors_process+0x35c>
     afe:	ee 81       	ldd	r30, Y+6	; 0x06
     b00:	ff 81       	ldd	r31, Y+7	; 0x07
     b02:	ea 0d       	add	r30, r10
     b04:	fb 1d       	adc	r31, r11
     b06:	82 1b       	sub	r24, r18
     b08:	93 0b       	sbc	r25, r19
     b0a:	20 81       	ld	r18, Z
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	28 17       	cp	r18, r24
     b10:	39 07       	cpc	r19, r25
     b12:	08 f0       	brcs	.+2      	; 0xb16 <qtm_key_sensors_process+0x1fe>
     b14:	c5 c0       	rjmp	.+394    	; 0xca0 <qtm_key_sensors_process+0x388>
     b16:	82 81       	ldd	r24, Z+2	; 0x02
     b18:	88 23       	and	r24, r24
     b1a:	31 f0       	breq	.+12     	; 0xb28 <qtm_key_sensors_process+0x210>
     b1c:	b4 01       	movw	r22, r8
     b1e:	ce 01       	movw	r24, r28
     b20:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <check_for_aks_block>
     b24:	81 11       	cpse	r24, r1
     b26:	c7 c0       	rjmp	.+398    	; 0xcb6 <qtm_key_sensors_process+0x39e>
     b28:	f8 01       	movw	r30, r16
     b2a:	81 81       	ldd	r24, Z+1	; 0x01
     b2c:	88 23       	and	r24, r24
     b2e:	09 f4       	brne	.+2      	; 0xb32 <qtm_key_sensors_process+0x21a>
     b30:	6a c0       	rjmp	.+212    	; 0xc06 <qtm_key_sensors_process+0x2ee>
     b32:	81 50       	subi	r24, 0x01	; 1
     b34:	81 83       	std	Z+1, r24	; 0x01
     b36:	b1 c0       	rjmp	.+354    	; 0xc9a <qtm_key_sensors_process+0x382>
     b38:	e8 81       	ld	r30, Y
     b3a:	f9 81       	ldd	r31, Y+1	; 0x01
     b3c:	aa 81       	ldd	r26, Y+2	; 0x02
     b3e:	bb 81       	ldd	r27, Y+3	; 0x03
     b40:	18 96       	adiw	r26, 0x08	; 8
     b42:	8c 91       	ld	r24, X
     b44:	83 83       	std	Z+3, r24	; 0x03
     b46:	ec 81       	ldd	r30, Y+4	; 0x04
     b48:	fd 81       	ldd	r31, Y+5	; 0x05
     b4a:	ee 0d       	add	r30, r14
     b4c:	ff 1d       	adc	r31, r15
     b4e:	44 81       	ldd	r20, Z+4	; 0x04
     b50:	55 81       	ldd	r21, Z+5	; 0x05
     b52:	a2 81       	ldd	r26, Z+2	; 0x02
     b54:	b3 81       	ldd	r27, Z+3	; 0x03
     b56:	11 96       	adiw	r26, 0x01	; 1
     b58:	8d 91       	ld	r24, X+
     b5a:	9c 91       	ld	r25, X
     b5c:	12 97       	sbiw	r26, 0x02	; 2
     b5e:	84 17       	cp	r24, r20
     b60:	95 07       	cpc	r25, r21
     b62:	c0 f0       	brcs	.+48     	; 0xb94 <qtm_key_sensors_process+0x27c>
     b64:	ae 81       	ldd	r26, Y+6	; 0x06
     b66:	bf 81       	ldd	r27, Y+7	; 0x07
     b68:	aa 0d       	add	r26, r10
     b6a:	bb 1d       	adc	r27, r11
     b6c:	6c 91       	ld	r22, X
     b6e:	26 2f       	mov	r18, r22
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	11 96       	adiw	r26, 0x01	; 1
     b74:	7c 91       	ld	r23, X
     b76:	7f 5f       	subi	r23, 0xFF	; 255
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <qtm_key_sensors_process+0x266>
     b7a:	35 95       	asr	r19
     b7c:	27 95       	ror	r18
     b7e:	7a 95       	dec	r23
     b80:	e2 f7       	brpl	.-8      	; 0xb7a <qtm_key_sensors_process+0x262>
     b82:	84 1b       	sub	r24, r20
     b84:	95 0b       	sbc	r25, r21
     b86:	62 1b       	sub	r22, r18
     b88:	26 2f       	mov	r18, r22
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	28 17       	cp	r18, r24
     b8e:	39 07       	cpc	r19, r25
     b90:	08 f4       	brcc	.+2      	; 0xb94 <qtm_key_sensors_process+0x27c>
     b92:	8f c0       	rjmp	.+286    	; 0xcb2 <qtm_key_sensors_process+0x39a>
     b94:	70 82       	st	Z, r7
     b96:	ea 81       	ldd	r30, Y+2	; 0x02
     b98:	fb 81       	ldd	r31, Y+3	; 0x03
     b9a:	22 81       	ldd	r18, Z+2	; 0x02
     b9c:	8c 81       	ldd	r24, Y+4	; 0x04
     b9e:	9d 81       	ldd	r25, Y+5	; 0x05
     ba0:	fc 01       	movw	r30, r24
     ba2:	ee 0d       	add	r30, r14
     ba4:	ff 1d       	adc	r31, r15
     ba6:	21 83       	std	Z+1, r18	; 0x01
     ba8:	42 c0       	rjmp	.+132    	; 0xc2e <qtm_key_sensors_process+0x316>
     baa:	d8 01       	movw	r26, r16
     bac:	14 96       	adiw	r26, 0x04	; 4
     bae:	6d 91       	ld	r22, X+
     bb0:	7c 91       	ld	r23, X
     bb2:	15 97       	sbiw	r26, 0x05	; 5
     bb4:	12 96       	adiw	r26, 0x02	; 2
     bb6:	ed 91       	ld	r30, X+
     bb8:	fc 91       	ld	r31, X
     bba:	13 97       	sbiw	r26, 0x03	; 3
     bbc:	21 81       	ldd	r18, Z+1	; 0x01
     bbe:	32 81       	ldd	r19, Z+2	; 0x02
     bc0:	26 17       	cp	r18, r22
     bc2:	37 07       	cpc	r19, r23
     bc4:	58 f4       	brcc	.+22     	; 0xbdc <qtm_key_sensors_process+0x2c4>
     bc6:	11 96       	adiw	r26, 0x01	; 1
     bc8:	8c 91       	ld	r24, X
     bca:	11 97       	sbiw	r26, 0x01	; 1
     bcc:	81 11       	cpse	r24, r1
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <qtm_key_sensors_process+0x2bc>
     bd0:	cc 92       	st	X, r12
     bd2:	6f c0       	rjmp	.+222    	; 0xcb2 <qtm_key_sensors_process+0x39a>
     bd4:	81 50       	subi	r24, 0x01	; 1
     bd6:	f8 01       	movw	r30, r16
     bd8:	81 83       	std	Z+1, r24	; 0x01
     bda:	6b c0       	rjmp	.+214    	; 0xcb2 <qtm_key_sensors_process+0x39a>
     bdc:	ee 81       	ldd	r30, Y+6	; 0x06
     bde:	ff 81       	ldd	r31, Y+7	; 0x07
     be0:	ea 0d       	add	r30, r10
     be2:	fb 1d       	adc	r31, r11
     be4:	80 81       	ld	r24, Z
     be6:	48 2f       	mov	r20, r24
     be8:	50 e0       	ldi	r21, 0x00	; 0
     bea:	91 81       	ldd	r25, Z+1	; 0x01
     bec:	9f 5f       	subi	r25, 0xFF	; 255
     bee:	02 c0       	rjmp	.+4      	; 0xbf4 <qtm_key_sensors_process+0x2dc>
     bf0:	55 95       	asr	r21
     bf2:	47 95       	ror	r20
     bf4:	9a 95       	dec	r25
     bf6:	e2 f7       	brpl	.-8      	; 0xbf0 <qtm_key_sensors_process+0x2d8>
     bf8:	26 1b       	sub	r18, r22
     bfa:	37 0b       	sbc	r19, r23
     bfc:	84 1b       	sub	r24, r20
     bfe:	90 e0       	ldi	r25, 0x00	; 0
     c00:	82 17       	cp	r24, r18
     c02:	93 07       	cpc	r25, r19
     c04:	60 f4       	brcc	.+24     	; 0xc1e <qtm_key_sensors_process+0x306>
     c06:	d8 01       	movw	r26, r16
     c08:	6c 92       	st	X, r6
     c0a:	ea 81       	ldd	r30, Y+2	; 0x02
     c0c:	fb 81       	ldd	r31, Y+3	; 0x03
     c0e:	23 81       	ldd	r18, Z+3	; 0x03
     c10:	8c 81       	ldd	r24, Y+4	; 0x04
     c12:	9d 81       	ldd	r25, Y+5	; 0x05
     c14:	fc 01       	movw	r30, r24
     c16:	ee 0d       	add	r30, r14
     c18:	ff 1d       	adc	r31, r15
     c1a:	21 83       	std	Z+1, r18	; 0x01
     c1c:	4a c0       	rjmp	.+148    	; 0xcb2 <qtm_key_sensors_process+0x39a>
     c1e:	f8 01       	movw	r30, r16
     c20:	81 81       	ldd	r24, Z+1	; 0x01
     c22:	81 11       	cpse	r24, r1
     c24:	02 c0       	rjmp	.+4      	; 0xc2a <qtm_key_sensors_process+0x312>
     c26:	c0 82       	st	Z, r12
     c28:	44 c0       	rjmp	.+136    	; 0xcb2 <qtm_key_sensors_process+0x39a>
     c2a:	81 50       	subi	r24, 0x01	; 1
     c2c:	81 83       	std	Z+1, r24	; 0x01
     c2e:	22 24       	eor	r2, r2
     c30:	23 94       	inc	r2
     c32:	33 c0       	rjmp	.+102    	; 0xc9a <qtm_key_sensors_process+0x382>
     c34:	f8 01       	movw	r30, r16
     c36:	24 81       	ldd	r18, Z+4	; 0x04
     c38:	35 81       	ldd	r19, Z+5	; 0x05
     c3a:	02 80       	ldd	r0, Z+2	; 0x02
     c3c:	f3 81       	ldd	r31, Z+3	; 0x03
     c3e:	e0 2d       	mov	r30, r0
     c40:	81 81       	ldd	r24, Z+1	; 0x01
     c42:	92 81       	ldd	r25, Z+2	; 0x02
     c44:	82 17       	cp	r24, r18
     c46:	93 07       	cpc	r25, r19
     c48:	58 f5       	brcc	.+86     	; 0xca0 <qtm_key_sensors_process+0x388>
     c4a:	28 1b       	sub	r18, r24
     c4c:	39 0b       	sbc	r19, r25
     c4e:	ee 81       	ldd	r30, Y+6	; 0x06
     c50:	ff 81       	ldd	r31, Y+7	; 0x07
     c52:	ea 0d       	add	r30, r10
     c54:	fb 1d       	adc	r31, r11
     c56:	80 81       	ld	r24, Z
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	ea 81       	ldd	r30, Y+2	; 0x02
     c5c:	fb 81       	ldd	r31, Y+3	; 0x03
     c5e:	05 80       	ldd	r0, Z+5	; 0x05
     c60:	02 c0       	rjmp	.+4      	; 0xc66 <qtm_key_sensors_process+0x34e>
     c62:	95 95       	asr	r25
     c64:	87 95       	ror	r24
     c66:	0a 94       	dec	r0
     c68:	e2 f7       	brpl	.-8      	; 0xc62 <qtm_key_sensors_process+0x34a>
     c6a:	99 27       	eor	r25, r25
     c6c:	28 17       	cp	r18, r24
     c6e:	39 07       	cpc	r19, r25
     c70:	18 f4       	brcc	.+6      	; 0xc78 <qtm_key_sensors_process+0x360>
     c72:	d8 01       	movw	r26, r16
     c74:	cc 92       	st	X, r12
     c76:	16 c0       	rjmp	.+44     	; 0xca4 <qtm_key_sensors_process+0x38c>
     c78:	f8 01       	movw	r30, r16
     c7a:	81 81       	ldd	r24, Z+1	; 0x01
     c7c:	81 11       	cpse	r24, r1
     c7e:	0b c0       	rjmp	.+22     	; 0xc96 <qtm_key_sensors_process+0x37e>
     c80:	50 82       	st	Z, r5
     c82:	8c 81       	ldd	r24, Y+4	; 0x04
     c84:	9d 81       	ldd	r25, Y+5	; 0x05
     c86:	fc 01       	movw	r30, r24
     c88:	ee 0d       	add	r30, r14
     c8a:	ff 1d       	adc	r31, r15
     c8c:	02 80       	ldd	r0, Z+2	; 0x02
     c8e:	f3 81       	ldd	r31, Z+3	; 0x03
     c90:	e0 2d       	mov	r30, r0
     c92:	c0 82       	st	Z, r12
     c94:	10 c0       	rjmp	.+32     	; 0xcb6 <qtm_key_sensors_process+0x39e>
     c96:	81 50       	subi	r24, 0x01	; 1
     c98:	81 83       	std	Z+1, r24	; 0x01
     c9a:	dd 24       	eor	r13, r13
     c9c:	d3 94       	inc	r13
     c9e:	0b c0       	rjmp	.+22     	; 0xcb6 <qtm_key_sensors_process+0x39e>
     ca0:	f8 01       	movw	r30, r16
     ca2:	c0 82       	st	Z, r12
     ca4:	8c 81       	ldd	r24, Y+4	; 0x04
     ca6:	9d 81       	ldd	r25, Y+5	; 0x05
     ca8:	fc 01       	movw	r30, r24
     caa:	ee 0d       	add	r30, r14
     cac:	ff 1d       	adc	r31, r15
     cae:	11 82       	std	Z+1, r1	; 0x01
     cb0:	02 c0       	rjmp	.+4      	; 0xcb6 <qtm_key_sensors_process+0x39e>
     cb2:	22 24       	eor	r2, r2
     cb4:	23 94       	inc	r2
     cb6:	ff ef       	ldi	r31, 0xFF	; 255
     cb8:	8f 1a       	sub	r8, r31
     cba:	9f 0a       	sbc	r9, r31
     cbc:	83 e0       	ldi	r24, 0x03	; 3
     cbe:	a8 0e       	add	r10, r24
     cc0:	b1 1c       	adc	r11, r1
     cc2:	52 ce       	rjmp	.-860    	; 0x968 <qtm_key_sensors_process+0x50>
     cc4:	e8 81       	ld	r30, Y
     cc6:	f9 81       	ldd	r31, Y+1	; 0x01
     cc8:	80 81       	ld	r24, Z
     cca:	87 ff       	sbrs	r24, 7
     ccc:	23 c0       	rjmp	.+70     	; 0xd14 <qtm_key_sensors_process+0x3fc>
     cce:	40 e0       	ldi	r20, 0x00	; 0
     cd0:	50 e0       	ldi	r21, 0x00	; 0
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	ea 81       	ldd	r30, Y+2	; 0x02
     cd8:	fb 81       	ldd	r31, Y+3	; 0x03
     cda:	80 81       	ld	r24, Z
     cdc:	91 81       	ldd	r25, Z+1	; 0x01
     cde:	28 17       	cp	r18, r24
     ce0:	39 07       	cpc	r19, r25
     ce2:	98 f4       	brcc	.+38     	; 0xd0a <qtm_key_sensors_process+0x3f2>
     ce4:	ec 81       	ldd	r30, Y+4	; 0x04
     ce6:	fd 81       	ldd	r31, Y+5	; 0x05
     ce8:	e4 0f       	add	r30, r20
     cea:	f5 1f       	adc	r31, r21
     cec:	a2 81       	ldd	r26, Z+2	; 0x02
     cee:	b3 81       	ldd	r27, Z+3	; 0x03
     cf0:	8c 91       	ld	r24, X
     cf2:	80 fd       	sbrc	r24, 0
     cf4:	05 c0       	rjmp	.+10     	; 0xd00 <qtm_key_sensors_process+0x3e8>
     cf6:	90 81       	ld	r25, Z
     cf8:	97 7f       	andi	r25, 0xF7	; 247
     cfa:	11 f0       	breq	.+4      	; 0xd00 <qtm_key_sensors_process+0x3e8>
     cfc:	81 60       	ori	r24, 0x01	; 1
     cfe:	8c 93       	st	X, r24
     d00:	2f 5f       	subi	r18, 0xFF	; 255
     d02:	3f 4f       	sbci	r19, 0xFF	; 255
     d04:	4a 5f       	subi	r20, 0xFA	; 250
     d06:	5f 4f       	sbci	r21, 0xFF	; 255
     d08:	e6 cf       	rjmp	.-52     	; 0xcd6 <qtm_key_sensors_process+0x3be>
     d0a:	e8 81       	ld	r30, Y
     d0c:	f9 81       	ldd	r31, Y+1	; 0x01
     d0e:	80 81       	ld	r24, Z
     d10:	8f 77       	andi	r24, 0x7F	; 127
     d12:	80 83       	st	Z, r24
     d14:	d1 10       	cpse	r13, r1
     d16:	07 c0       	rjmp	.+14     	; 0xd26 <qtm_key_sensors_process+0x40e>
     d18:	e8 81       	ld	r30, Y
     d1a:	f9 81       	ldd	r31, Y+1	; 0x01
     d1c:	21 10       	cpse	r2, r1
     d1e:	6f c0       	rjmp	.+222    	; 0xdfe <qtm_key_sensors_process+0x4e6>
     d20:	80 81       	ld	r24, Z
     d22:	8e 7f       	andi	r24, 0xFE	; 254
     d24:	6e c0       	rjmp	.+220    	; 0xe02 <qtm_key_sensors_process+0x4ea>
     d26:	ea 81       	ldd	r30, Y+2	; 0x02
     d28:	fb 81       	ldd	r31, Y+3	; 0x03
     d2a:	81 85       	ldd	r24, Z+9	; 0x09
     d2c:	88 23       	and	r24, r24
     d2e:	a1 f3       	breq	.-24     	; 0xd18 <qtm_key_sensors_process+0x400>
     d30:	e8 81       	ld	r30, Y
     d32:	f9 81       	ldd	r31, Y+1	; 0x01
     d34:	80 81       	ld	r24, Z
     d36:	80 68       	ori	r24, 0x80	; 128
     d38:	80 83       	st	Z, r24
     d3a:	ea 81       	ldd	r30, Y+2	; 0x02
     d3c:	fb 81       	ldd	r31, Y+3	; 0x03
     d3e:	81 85       	ldd	r24, Z+9	; 0x09
     d40:	81 30       	cpi	r24, 0x01	; 1
     d42:	51 f7       	brne	.-44     	; 0xd18 <qtm_key_sensors_process+0x400>
     d44:	40 e0       	ldi	r20, 0x00	; 0
     d46:	50 e0       	ldi	r21, 0x00	; 0
     d48:	20 e0       	ldi	r18, 0x00	; 0
     d4a:	30 e0       	ldi	r19, 0x00	; 0
     d4c:	96 e0       	ldi	r25, 0x06	; 6
     d4e:	d9 2e       	mov	r13, r25
     d50:	ea 81       	ldd	r30, Y+2	; 0x02
     d52:	fb 81       	ldd	r31, Y+3	; 0x03
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	26 17       	cp	r18, r22
     d5a:	37 07       	cpc	r19, r23
     d5c:	e8 f6       	brcc	.-70     	; 0xd18 <qtm_key_sensors_process+0x400>
     d5e:	0c 81       	ldd	r16, Y+4	; 0x04
     d60:	1d 81       	ldd	r17, Y+5	; 0x05
     d62:	fa 01       	movw	r30, r20
     d64:	ee 0f       	add	r30, r30
     d66:	ff 1f       	adc	r31, r31
     d68:	e0 0f       	add	r30, r16
     d6a:	f1 1f       	adc	r31, r17
     d6c:	80 81       	ld	r24, Z
     d6e:	98 2f       	mov	r25, r24
     d70:	97 7f       	andi	r25, 0xF7	; 247
     d72:	a1 f1       	breq	.+104    	; 0xddc <qtm_key_sensors_process+0x4c4>
     d74:	85 38       	cpi	r24, 0x85	; 133
     d76:	11 f0       	breq	.+4      	; 0xd7c <qtm_key_sensors_process+0x464>
     d78:	83 30       	cpi	r24, 0x03	; 3
     d7a:	b1 f5       	brne	.+108    	; 0xde8 <qtm_key_sensors_process+0x4d0>
     d7c:	ee 80       	ldd	r14, Y+6	; 0x06
     d7e:	ff 80       	ldd	r15, Y+7	; 0x07
     d80:	d7 01       	movw	r26, r14
     d82:	a4 0f       	add	r26, r20
     d84:	b5 1f       	adc	r27, r21
     d86:	12 96       	adiw	r26, 0x02	; 2
     d88:	bc 90       	ld	r11, X
     d8a:	bb 20       	and	r11, r11
     d8c:	39 f1       	breq	.+78     	; 0xddc <qtm_key_sensors_process+0x4c4>
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	c1 2c       	mov	r12, r1
     d94:	86 17       	cp	r24, r22
     d96:	97 07       	cpc	r25, r23
     d98:	f8 f4       	brcc	.+62     	; 0xdd8 <qtm_key_sensors_process+0x4c0>
     d9a:	28 17       	cp	r18, r24
     d9c:	39 07       	cpc	r19, r25
     d9e:	d1 f0       	breq	.+52     	; 0xdd4 <qtm_key_sensors_process+0x4bc>
     da0:	d8 9e       	mul	r13, r24
     da2:	d0 01       	movw	r26, r0
     da4:	d9 9e       	mul	r13, r25
     da6:	b0 0d       	add	r27, r0
     da8:	11 24       	eor	r1, r1
     daa:	a0 0f       	add	r26, r16
     dac:	b1 1f       	adc	r27, r17
     dae:	ac 91       	ld	r26, X
     db0:	a4 30       	cpi	r26, 0x04	; 4
     db2:	11 f0       	breq	.+4      	; 0xdb8 <qtm_key_sensors_process+0x4a0>
     db4:	a6 38       	cpi	r26, 0x86	; 134
     db6:	71 f4       	brne	.+28     	; 0xdd4 <qtm_key_sensors_process+0x4bc>
     db8:	dc 01       	movw	r26, r24
     dba:	aa 0f       	add	r26, r26
     dbc:	bb 1f       	adc	r27, r27
     dbe:	a8 0f       	add	r26, r24
     dc0:	b9 1f       	adc	r27, r25
     dc2:	ae 0d       	add	r26, r14
     dc4:	bf 1d       	adc	r27, r15
     dc6:	12 96       	adiw	r26, 0x02	; 2
     dc8:	ac 91       	ld	r26, X
     dca:	ba 12       	cpse	r11, r26
     dcc:	03 c0       	rjmp	.+6      	; 0xdd4 <qtm_key_sensors_process+0x4bc>
     dce:	cb 01       	movw	r24, r22
     dd0:	cc 24       	eor	r12, r12
     dd2:	c3 94       	inc	r12
     dd4:	01 96       	adiw	r24, 0x01	; 1
     dd6:	de cf       	rjmp	.-68     	; 0xd94 <qtm_key_sensors_process+0x47c>
     dd8:	c1 10       	cpse	r12, r1
     dda:	06 c0       	rjmp	.+12     	; 0xde8 <qtm_key_sensors_process+0x4d0>
     ddc:	02 80       	ldd	r0, Z+2	; 0x02
     dde:	f3 81       	ldd	r31, Z+3	; 0x03
     de0:	e0 2d       	mov	r30, r0
     de2:	80 81       	ld	r24, Z
     de4:	8e 7f       	andi	r24, 0xFE	; 254
     de6:	05 c0       	rjmp	.+10     	; 0xdf2 <qtm_key_sensors_process+0x4da>
     de8:	02 80       	ldd	r0, Z+2	; 0x02
     dea:	f3 81       	ldd	r31, Z+3	; 0x03
     dec:	e0 2d       	mov	r30, r0
     dee:	80 81       	ld	r24, Z
     df0:	81 60       	ori	r24, 0x01	; 1
     df2:	80 83       	st	Z, r24
     df4:	2f 5f       	subi	r18, 0xFF	; 255
     df6:	3f 4f       	sbci	r19, 0xFF	; 255
     df8:	4d 5f       	subi	r20, 0xFD	; 253
     dfa:	5f 4f       	sbci	r21, 0xFF	; 255
     dfc:	a9 cf       	rjmp	.-174    	; 0xd50 <qtm_key_sensors_process+0x438>
     dfe:	80 81       	ld	r24, Z
     e00:	81 60       	ori	r24, 0x01	; 1
     e02:	80 83       	st	Z, r24
     e04:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <qtm_local_ms_timecount>
     e08:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <qtm_local_ms_timecount+0x1>
     e0c:	e8 81       	ld	r30, Y
     e0e:	f9 81       	ldd	r31, Y+1	; 0x01
     e10:	21 81       	ldd	r18, Z+1	; 0x01
     e12:	32 81       	ldd	r19, Z+2	; 0x02
     e14:	a9 01       	movw	r20, r18
     e16:	48 53       	subi	r20, 0x38	; 56
     e18:	5f 4f       	sbci	r21, 0xFF	; 255
     e1a:	48 17       	cp	r20, r24
     e1c:	59 07       	cpc	r21, r25
     e1e:	38 f4       	brcc	.+14     	; 0xe2e <qtm_key_sensors_process+0x516>
     e20:	82 1b       	sub	r24, r18
     e22:	93 0b       	sbc	r25, r19
     e24:	aa 24       	eor	r10, r10
     e26:	a3 94       	inc	r10
     e28:	a3 e0       	ldi	r26, 0x03	; 3
     e2a:	ba 2e       	mov	r11, r26
     e2c:	44 c0       	rjmp	.+136    	; 0xeb6 <qtm_key_sensors_process+0x59e>
     e2e:	82 17       	cp	r24, r18
     e30:	93 07       	cpc	r25, r19
     e32:	10 f0       	brcs	.+4      	; 0xe38 <qtm_key_sensors_process+0x520>
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	04 c1       	rjmp	.+520    	; 0x1040 <qtm_key_sensors_process+0x728>
     e38:	82 1b       	sub	r24, r18
     e3a:	93 0b       	sbc	r25, r19
     e3c:	01 97       	sbiw	r24, 0x01	; 1
     e3e:	89 3c       	cpi	r24, 0xC9	; 201
     e40:	91 05       	cpc	r25, r1
     e42:	c0 f3       	brcs	.-16     	; 0xe34 <qtm_key_sensors_process+0x51c>
     e44:	ef cf       	rjmp	.-34     	; 0xe24 <qtm_key_sensors_process+0x50c>
     e46:	88 5c       	subi	r24, 0xC8	; 200
     e48:	91 09       	sbc	r25, r1
     e4a:	e8 81       	ld	r30, Y
     e4c:	f9 81       	ldd	r31, Y+1	; 0x01
     e4e:	21 81       	ldd	r18, Z+1	; 0x01
     e50:	32 81       	ldd	r19, Z+2	; 0x02
     e52:	28 53       	subi	r18, 0x38	; 56
     e54:	3f 4f       	sbci	r19, 0xFF	; 255
     e56:	32 83       	std	Z+2, r19	; 0x02
     e58:	21 83       	std	Z+1, r18	; 0x01
     e5a:	23 81       	ldd	r18, Z+3	; 0x03
     e5c:	21 11       	cpse	r18, r1
     e5e:	96 c0       	rjmp	.+300    	; 0xf8c <qtm_key_sensors_process+0x674>
     e60:	24 81       	ldd	r18, Z+4	; 0x04
     e62:	22 23       	and	r18, r18
     e64:	11 f0       	breq	.+4      	; 0xe6a <qtm_key_sensors_process+0x552>
     e66:	21 50       	subi	r18, 0x01	; 1
     e68:	24 83       	std	Z+4, r18	; 0x04
     e6a:	e8 81       	ld	r30, Y
     e6c:	f9 81       	ldd	r31, Y+1	; 0x01
     e6e:	25 81       	ldd	r18, Z+5	; 0x05
     e70:	22 23       	and	r18, r18
     e72:	11 f0       	breq	.+4      	; 0xe78 <qtm_key_sensors_process+0x560>
     e74:	21 50       	subi	r18, 0x01	; 1
     e76:	25 83       	std	Z+5, r18	; 0x05
     e78:	8a 80       	ldd	r8, Y+2	; 0x02
     e7a:	9b 80       	ldd	r9, Y+3	; 0x03
     e7c:	d4 01       	movw	r26, r8
     e7e:	16 96       	adiw	r26, 0x06	; 6
     e80:	2c 91       	ld	r18, X
     e82:	16 97       	sbiw	r26, 0x06	; 6
     e84:	21 11       	cpse	r18, r1
     e86:	1b c0       	rjmp	.+54     	; 0xebe <qtm_key_sensors_process+0x5a6>
     e88:	8a 80       	ldd	r8, Y+2	; 0x02
     e8a:	9b 80       	ldd	r9, Y+3	; 0x03
     e8c:	f4 01       	movw	r30, r8
     e8e:	27 81       	ldd	r18, Z+7	; 0x07
     e90:	21 11       	cpse	r18, r1
     e92:	48 c0       	rjmp	.+144    	; 0xf24 <qtm_key_sensors_process+0x60c>
     e94:	ea 81       	ldd	r30, Y+2	; 0x02
     e96:	fb 81       	ldd	r31, Y+3	; 0x03
     e98:	23 81       	ldd	r18, Z+3	; 0x03
     e9a:	22 23       	and	r18, r18
     e9c:	61 f0       	breq	.+24     	; 0xeb6 <qtm_key_sensors_process+0x59e>
     e9e:	20 e0       	ldi	r18, 0x00	; 0
     ea0:	30 e0       	ldi	r19, 0x00	; 0
     ea2:	a0 e0       	ldi	r26, 0x00	; 0
     ea4:	b0 e0       	ldi	r27, 0x00	; 0
     ea6:	ea 81       	ldd	r30, Y+2	; 0x02
     ea8:	fb 81       	ldd	r31, Y+3	; 0x03
     eaa:	40 81       	ld	r20, Z
     eac:	51 81       	ldd	r21, Z+1	; 0x01
     eae:	a4 17       	cp	r26, r20
     eb0:	b5 07       	cpc	r27, r21
     eb2:	08 f4       	brcc	.+2      	; 0xeb6 <qtm_key_sensors_process+0x59e>
     eb4:	6e c0       	rjmp	.+220    	; 0xf92 <qtm_key_sensors_process+0x67a>
     eb6:	89 3c       	cpi	r24, 0xC9	; 201
     eb8:	91 05       	cpc	r25, r1
     eba:	28 f6       	brcc	.-118    	; 0xe46 <qtm_key_sensors_process+0x52e>
     ebc:	bb cf       	rjmp	.-138    	; 0xe34 <qtm_key_sensors_process+0x51c>
     ebe:	08 81       	ld	r16, Y
     ec0:	19 81       	ldd	r17, Y+1	; 0x01
     ec2:	f8 01       	movw	r30, r16
     ec4:	24 81       	ldd	r18, Z+4	; 0x04
     ec6:	21 11       	cpse	r18, r1
     ec8:	df cf       	rjmp	.-66     	; 0xe88 <qtm_key_sensors_process+0x570>
     eca:	ed 90       	ld	r14, X+
     ecc:	fc 90       	ld	r15, X
     ece:	60 e0       	ldi	r22, 0x00	; 0
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	40 e0       	ldi	r20, 0x00	; 0
     ed4:	50 e0       	ldi	r21, 0x00	; 0
     ed6:	4e 15       	cp	r20, r14
     ed8:	5f 05       	cpc	r21, r15
     eda:	f1 f0       	breq	.+60     	; 0xf18 <qtm_key_sensors_process+0x600>
     edc:	ec 81       	ldd	r30, Y+4	; 0x04
     ede:	fd 81       	ldd	r31, Y+5	; 0x05
     ee0:	e6 0f       	add	r30, r22
     ee2:	f7 1f       	adc	r31, r23
     ee4:	20 81       	ld	r18, Z
     ee6:	23 30       	cpi	r18, 0x03	; 3
     ee8:	11 f0       	breq	.+4      	; 0xeee <qtm_key_sensors_process+0x5d6>
     eea:	28 30       	cpi	r18, 0x08	; 8
     eec:	81 f4       	brne	.+32     	; 0xf0e <qtm_key_sensors_process+0x5f6>
     eee:	24 81       	ldd	r18, Z+4	; 0x04
     ef0:	35 81       	ldd	r19, Z+5	; 0x05
     ef2:	c2 80       	ldd	r12, Z+2	; 0x02
     ef4:	d3 80       	ldd	r13, Z+3	; 0x03
     ef6:	d6 01       	movw	r26, r12
     ef8:	11 96       	adiw	r26, 0x01	; 1
     efa:	cd 90       	ld	r12, X+
     efc:	dc 90       	ld	r13, X
     efe:	12 97       	sbiw	r26, 0x02	; 2
     f00:	2c 15       	cp	r18, r12
     f02:	3d 05       	cpc	r19, r13
     f04:	20 f4       	brcc	.+8      	; 0xf0e <qtm_key_sensors_process+0x5f6>
     f06:	2f 5f       	subi	r18, 0xFF	; 255
     f08:	3f 4f       	sbci	r19, 0xFF	; 255
     f0a:	35 83       	std	Z+5, r19	; 0x05
     f0c:	24 83       	std	Z+4, r18	; 0x04
     f0e:	4f 5f       	subi	r20, 0xFF	; 255
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	6a 5f       	subi	r22, 0xFA	; 250
     f14:	7f 4f       	sbci	r23, 0xFF	; 255
     f16:	df cf       	rjmp	.-66     	; 0xed6 <qtm_key_sensors_process+0x5be>
     f18:	f4 01       	movw	r30, r8
     f1a:	26 81       	ldd	r18, Z+6	; 0x06
     f1c:	d8 01       	movw	r26, r16
     f1e:	14 96       	adiw	r26, 0x04	; 4
     f20:	2c 93       	st	X, r18
     f22:	b2 cf       	rjmp	.-156    	; 0xe88 <qtm_key_sensors_process+0x570>
     f24:	08 81       	ld	r16, Y
     f26:	19 81       	ldd	r17, Y+1	; 0x01
     f28:	d8 01       	movw	r26, r16
     f2a:	15 96       	adiw	r26, 0x05	; 5
     f2c:	2c 91       	ld	r18, X
     f2e:	21 11       	cpse	r18, r1
     f30:	b1 cf       	rjmp	.-158    	; 0xe94 <qtm_key_sensors_process+0x57c>
     f32:	e0 80       	ld	r14, Z
     f34:	f1 80       	ldd	r15, Z+1	; 0x01
     f36:	60 e0       	ldi	r22, 0x00	; 0
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	40 e0       	ldi	r20, 0x00	; 0
     f3c:	50 e0       	ldi	r21, 0x00	; 0
     f3e:	4e 15       	cp	r20, r14
     f40:	5f 05       	cpc	r21, r15
     f42:	f1 f0       	breq	.+60     	; 0xf80 <qtm_key_sensors_process+0x668>
     f44:	ec 81       	ldd	r30, Y+4	; 0x04
     f46:	fd 81       	ldd	r31, Y+5	; 0x05
     f48:	e6 0f       	add	r30, r22
     f4a:	f7 1f       	adc	r31, r23
     f4c:	20 81       	ld	r18, Z
     f4e:	23 30       	cpi	r18, 0x03	; 3
     f50:	11 f0       	breq	.+4      	; 0xf56 <qtm_key_sensors_process+0x63e>
     f52:	28 30       	cpi	r18, 0x08	; 8
     f54:	81 f4       	brne	.+32     	; 0xf76 <qtm_key_sensors_process+0x65e>
     f56:	24 81       	ldd	r18, Z+4	; 0x04
     f58:	35 81       	ldd	r19, Z+5	; 0x05
     f5a:	c2 80       	ldd	r12, Z+2	; 0x02
     f5c:	d3 80       	ldd	r13, Z+3	; 0x03
     f5e:	d6 01       	movw	r26, r12
     f60:	11 96       	adiw	r26, 0x01	; 1
     f62:	cd 90       	ld	r12, X+
     f64:	dc 90       	ld	r13, X
     f66:	12 97       	sbiw	r26, 0x02	; 2
     f68:	c2 16       	cp	r12, r18
     f6a:	d3 06       	cpc	r13, r19
     f6c:	20 f4       	brcc	.+8      	; 0xf76 <qtm_key_sensors_process+0x65e>
     f6e:	21 50       	subi	r18, 0x01	; 1
     f70:	31 09       	sbc	r19, r1
     f72:	35 83       	std	Z+5, r19	; 0x05
     f74:	24 83       	std	Z+4, r18	; 0x04
     f76:	4f 5f       	subi	r20, 0xFF	; 255
     f78:	5f 4f       	sbci	r21, 0xFF	; 255
     f7a:	6a 5f       	subi	r22, 0xFA	; 250
     f7c:	7f 4f       	sbci	r23, 0xFF	; 255
     f7e:	df cf       	rjmp	.-66     	; 0xf3e <qtm_key_sensors_process+0x626>
     f80:	f4 01       	movw	r30, r8
     f82:	27 81       	ldd	r18, Z+7	; 0x07
     f84:	d8 01       	movw	r26, r16
     f86:	15 96       	adiw	r26, 0x05	; 5
     f88:	2c 93       	st	X, r18
     f8a:	84 cf       	rjmp	.-248    	; 0xe94 <qtm_key_sensors_process+0x57c>
     f8c:	21 50       	subi	r18, 0x01	; 1
     f8e:	23 83       	std	Z+3, r18	; 0x03
     f90:	81 cf       	rjmp	.-254    	; 0xe94 <qtm_key_sensors_process+0x57c>
     f92:	a9 01       	movw	r20, r18
     f94:	44 0f       	add	r20, r20
     f96:	55 1f       	adc	r21, r21
     f98:	ec 81       	ldd	r30, Y+4	; 0x04
     f9a:	fd 81       	ldd	r31, Y+5	; 0x05
     f9c:	e4 0f       	add	r30, r20
     f9e:	f5 1f       	adc	r31, r21
     fa0:	60 81       	ld	r22, Z
     fa2:	65 38       	cpi	r22, 0x85	; 133
     fa4:	09 f0       	breq	.+2      	; 0xfa8 <qtm_key_sensors_process+0x690>
     fa6:	47 c0       	rjmp	.+142    	; 0x1036 <qtm_key_sensors_process+0x71e>
     fa8:	61 81       	ldd	r22, Z+1	; 0x01
     faa:	66 23       	and	r22, r22
     fac:	19 f0       	breq	.+6      	; 0xfb4 <qtm_key_sensors_process+0x69c>
     fae:	61 50       	subi	r22, 0x01	; 1
     fb0:	61 83       	std	Z+1, r22	; 0x01
     fb2:	41 c0       	rjmp	.+130    	; 0x1036 <qtm_key_sensors_process+0x71e>
     fb4:	a0 82       	st	Z, r10
     fb6:	6c 81       	ldd	r22, Y+4	; 0x04
     fb8:	7d 81       	ldd	r23, Y+5	; 0x05
     fba:	fb 01       	movw	r30, r22
     fbc:	e4 0f       	add	r30, r20
     fbe:	f5 1f       	adc	r31, r21
     fc0:	02 80       	ldd	r0, Z+2	; 0x02
     fc2:	f3 81       	ldd	r31, Z+3	; 0x03
     fc4:	e0 2d       	mov	r30, r0
     fc6:	b0 82       	st	Z, r11
     fc8:	ee 81       	ldd	r30, Y+6	; 0x06
     fca:	ff 81       	ldd	r31, Y+7	; 0x07
     fcc:	e2 0f       	add	r30, r18
     fce:	f3 1f       	adc	r31, r19
     fd0:	d2 80       	ldd	r13, Z+2	; 0x02
     fd2:	dd 20       	and	r13, r13
     fd4:	81 f1       	breq	.+96     	; 0x1036 <qtm_key_sensors_process+0x71e>
     fd6:	40 e0       	ldi	r20, 0x00	; 0
     fd8:	50 e0       	ldi	r21, 0x00	; 0
     fda:	00 e0       	ldi	r16, 0x00	; 0
     fdc:	10 e0       	ldi	r17, 0x00	; 0
     fde:	ea 81       	ldd	r30, Y+2	; 0x02
     fe0:	fb 81       	ldd	r31, Y+3	; 0x03
     fe2:	60 81       	ld	r22, Z
     fe4:	71 81       	ldd	r23, Z+1	; 0x01
     fe6:	06 17       	cp	r16, r22
     fe8:	17 07       	cpc	r17, r23
     fea:	28 f5       	brcc	.+74     	; 0x1036 <qtm_key_sensors_process+0x71e>
     fec:	ee 81       	ldd	r30, Y+6	; 0x06
     fee:	ff 81       	ldd	r31, Y+7	; 0x07
     ff0:	e4 0f       	add	r30, r20
     ff2:	f5 1f       	adc	r31, r21
     ff4:	62 81       	ldd	r22, Z+2	; 0x02
     ff6:	d6 12       	cpse	r13, r22
     ff8:	19 c0       	rjmp	.+50     	; 0x102c <qtm_key_sensors_process+0x714>
     ffa:	ba 01       	movw	r22, r20
     ffc:	66 0f       	add	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	ec 81       	ldd	r30, Y+4	; 0x04
    1002:	fd 81       	ldd	r31, Y+5	; 0x05
    1004:	4f 01       	movw	r8, r30
    1006:	86 0e       	add	r8, r22
    1008:	97 1e       	adc	r9, r23
    100a:	f4 01       	movw	r30, r8
    100c:	e2 80       	ldd	r14, Z+2	; 0x02
    100e:	f3 80       	ldd	r15, Z+3	; 0x03
    1010:	f7 01       	movw	r30, r14
    1012:	f0 80       	ld	r15, Z
    1014:	f0 fe       	sbrs	r15, 0
    1016:	0a c0       	rjmp	.+20     	; 0x102c <qtm_key_sensors_process+0x714>
    1018:	f4 01       	movw	r30, r8
    101a:	a0 82       	st	Z, r10
    101c:	ec 81       	ldd	r30, Y+4	; 0x04
    101e:	fd 81       	ldd	r31, Y+5	; 0x05
    1020:	e6 0f       	add	r30, r22
    1022:	f7 1f       	adc	r31, r23
    1024:	02 80       	ldd	r0, Z+2	; 0x02
    1026:	f3 81       	ldd	r31, Z+3	; 0x03
    1028:	e0 2d       	mov	r30, r0
    102a:	b0 82       	st	Z, r11
    102c:	0f 5f       	subi	r16, 0xFF	; 255
    102e:	1f 4f       	sbci	r17, 0xFF	; 255
    1030:	4d 5f       	subi	r20, 0xFD	; 253
    1032:	5f 4f       	sbci	r21, 0xFF	; 255
    1034:	d4 cf       	rjmp	.-88     	; 0xfde <qtm_key_sensors_process+0x6c6>
    1036:	11 96       	adiw	r26, 0x01	; 1
    1038:	2d 5f       	subi	r18, 0xFD	; 253
    103a:	3f 4f       	sbci	r19, 0xFF	; 255
    103c:	34 cf       	rjmp	.-408    	; 0xea6 <qtm_key_sensors_process+0x58e>
    103e:	8b e0       	ldi	r24, 0x0B	; 11
    1040:	df 91       	pop	r29
    1042:	cf 91       	pop	r28
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	ff 90       	pop	r15
    104a:	ef 90       	pop	r14
    104c:	df 90       	pop	r13
    104e:	cf 90       	pop	r12
    1050:	bf 90       	pop	r11
    1052:	af 90       	pop	r10
    1054:	9f 90       	pop	r9
    1056:	8f 90       	pop	r8
    1058:	7f 90       	pop	r7
    105a:	6f 90       	pop	r6
    105c:	5f 90       	pop	r5
    105e:	4f 90       	pop	r4
    1060:	3f 90       	pop	r3
    1062:	2f 90       	pop	r2
    1064:	08 95       	ret

00001066 <select_next_channel_to_measure>:
    1066:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <current_measure_channel>
    106a:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <current_measure_channel+0x1>
    106e:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    1072:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1076:	ed 91       	ld	r30, X+
    1078:	fc 91       	ld	r31, X
    107a:	11 97       	sbiw	r26, 0x01	; 1
    107c:	40 81       	ld	r20, Z
    107e:	51 81       	ldd	r21, Z+1	; 0x01
    1080:	25 e0       	ldi	r18, 0x05	; 5
    1082:	28 9f       	mul	r18, r24
    1084:	b0 01       	movw	r22, r0
    1086:	29 9f       	mul	r18, r25
    1088:	70 0d       	add	r23, r0
    108a:	11 24       	eor	r1, r1
    108c:	20 e0       	ldi	r18, 0x00	; 0
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	84 17       	cp	r24, r20
    1092:	95 07       	cpc	r25, r21
    1094:	a8 f4       	brcc	.+42     	; 0x10c0 <select_next_channel_to_measure+0x5a>
    1096:	14 96       	adiw	r26, 0x04	; 4
    1098:	ed 91       	ld	r30, X+
    109a:	fc 91       	ld	r31, X
    109c:	15 97       	sbiw	r26, 0x05	; 5
    109e:	e2 0f       	add	r30, r18
    10a0:	f3 1f       	adc	r31, r19
    10a2:	e6 0f       	add	r30, r22
    10a4:	f7 1f       	adc	r31, r23
    10a6:	e0 81       	ld	r30, Z
    10a8:	2b 5f       	subi	r18, 0xFB	; 251
    10aa:	3f 4f       	sbci	r19, 0xFF	; 255
    10ac:	e0 fd       	sbrc	r30, 0
    10ae:	02 c0       	rjmp	.+4      	; 0x10b4 <select_next_channel_to_measure+0x4e>
    10b0:	01 96       	adiw	r24, 0x01	; 1
    10b2:	ee cf       	rjmp	.-36     	; 0x1090 <select_next_channel_to_measure+0x2a>
    10b4:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <current_measure_channel+0x1>
    10b8:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <current_measure_channel>
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	08 95       	ret
    10c0:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <current_measure_channel+0x1>
    10c4:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <current_measure_channel>
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	08 95       	ret

000010cc <qtm_measure_node>:
    10cc:	4a e0       	ldi	r20, 0x0A	; 10
    10ce:	48 9f       	mul	r20, r24
    10d0:	90 01       	movw	r18, r0
    10d2:	49 9f       	mul	r20, r25
    10d4:	30 0d       	add	r19, r0
    10d6:	11 24       	eor	r1, r1
    10d8:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    10dc:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    10e0:	02 80       	ldd	r0, Z+2	; 0x02
    10e2:	f3 81       	ldd	r31, Z+3	; 0x03
    10e4:	e0 2d       	mov	r30, r0
    10e6:	e2 0f       	add	r30, r18
    10e8:	f3 1f       	adc	r31, r19
    10ea:	42 81       	ldd	r20, Z+2	; 0x02
    10ec:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    10f0:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    10f4:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    10f8:	02 80       	ldd	r0, Z+2	; 0x02
    10fa:	f3 81       	ldd	r31, Z+3	; 0x03
    10fc:	e0 2d       	mov	r30, r0
    10fe:	e2 0f       	add	r30, r18
    1100:	f3 1f       	adc	r31, r19
    1102:	43 81       	ldd	r20, Z+3	; 0x03
    1104:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    1108:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    110c:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1110:	02 80       	ldd	r0, Z+2	; 0x02
    1112:	f3 81       	ldd	r31, Z+3	; 0x03
    1114:	e0 2d       	mov	r30, r0
    1116:	e2 0f       	add	r30, r18
    1118:	f3 1f       	adc	r31, r19
    111a:	44 81       	ldd	r20, Z+4	; 0x04
    111c:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    1120:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    1124:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1128:	02 80       	ldd	r0, Z+2	; 0x02
    112a:	f3 81       	ldd	r31, Z+3	; 0x03
    112c:	e0 2d       	mov	r30, r0
    112e:	e2 0f       	add	r30, r18
    1130:	f3 1f       	adc	r31, r19
    1132:	42 81       	ldd	r20, Z+2	; 0x02
    1134:	53 81       	ldd	r21, Z+3	; 0x03
    1136:	64 81       	ldd	r22, Z+4	; 0x04
    1138:	75 81       	ldd	r23, Z+5	; 0x05
    113a:	47 2f       	mov	r20, r23
    113c:	55 27       	eor	r21, r21
    113e:	66 27       	eor	r22, r22
    1140:	77 27       	eor	r23, r23
    1142:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    1146:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    114a:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    114e:	02 80       	ldd	r0, Z+2	; 0x02
    1150:	f3 81       	ldd	r31, Z+3	; 0x03
    1152:	e0 2d       	mov	r30, r0
    1154:	e2 0f       	add	r30, r18
    1156:	f3 1f       	adc	r31, r19
    1158:	40 81       	ld	r20, Z
    115a:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    115e:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    1162:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1166:	02 80       	ldd	r0, Z+2	; 0x02
    1168:	f3 81       	ldd	r31, Z+3	; 0x03
    116a:	e0 2d       	mov	r30, r0
    116c:	e2 0f       	add	r30, r18
    116e:	f3 1f       	adc	r31, r19
    1170:	41 81       	ldd	r20, Z+1	; 0x01
    1172:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    1176:	65 e0       	ldi	r22, 0x05	; 5
    1178:	68 9f       	mul	r22, r24
    117a:	a0 01       	movw	r20, r0
    117c:	69 9f       	mul	r22, r25
    117e:	50 0d       	add	r21, r0
    1180:	11 24       	eor	r1, r1
    1182:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    1186:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    118a:	04 80       	ldd	r0, Z+4	; 0x04
    118c:	f5 81       	ldd	r31, Z+5	; 0x05
    118e:	e0 2d       	mov	r30, r0
    1190:	e4 0f       	add	r30, r20
    1192:	f5 1f       	adc	r31, r21
    1194:	83 81       	ldd	r24, Z+3	; 0x03
    1196:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    119a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    119e:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    11a2:	04 80       	ldd	r0, Z+4	; 0x04
    11a4:	f5 81       	ldd	r31, Z+5	; 0x05
    11a6:	e0 2d       	mov	r30, r0
    11a8:	e4 0f       	add	r30, r20
    11aa:	f5 1f       	adc	r31, r21
    11ac:	83 81       	ldd	r24, Z+3	; 0x03
    11ae:	94 81       	ldd	r25, Z+4	; 0x04
    11b0:	88 27       	eor	r24, r24
    11b2:	9f 73       	andi	r25, 0x3F	; 63
    11b4:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    11b8:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    11bc:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    11c0:	14 96       	adiw	r26, 0x04	; 4
    11c2:	ed 91       	ld	r30, X+
    11c4:	fc 91       	ld	r31, X
    11c6:	15 97       	sbiw	r26, 0x05	; 5
    11c8:	e4 0f       	add	r30, r20
    11ca:	f5 1f       	adc	r31, r21
    11cc:	80 81       	ld	r24, Z
    11ce:	81 fd       	sbrc	r24, 1
    11d0:	60 83       	st	Z, r22
    11d2:	14 96       	adiw	r26, 0x04	; 4
    11d4:	8d 91       	ld	r24, X+
    11d6:	9c 91       	ld	r25, X
    11d8:	15 97       	sbiw	r26, 0x05	; 5
    11da:	fc 01       	movw	r30, r24
    11dc:	e4 0f       	add	r30, r20
    11de:	f5 1f       	adc	r31, r21
    11e0:	80 81       	ld	r24, Z
    11e2:	8c 71       	andi	r24, 0x1C	; 28
    11e4:	71 f4       	brne	.+28     	; 0x1202 <qtm_measure_node+0x136>
    11e6:	12 96       	adiw	r26, 0x02	; 2
    11e8:	ed 91       	ld	r30, X+
    11ea:	fc 91       	ld	r31, X
    11ec:	13 97       	sbiw	r26, 0x03	; 3
    11ee:	e2 0f       	add	r30, r18
    11f0:	f3 1f       	adc	r31, r19
    11f2:	e0 85       	ldd	r30, Z+8	; 0x08
    11f4:	e2 95       	swap	r30
    11f6:	ef 70       	andi	r30, 0x0F	; 15
    11f8:	f0 e0       	ldi	r31, 0x00	; 0
    11fa:	e0 59       	subi	r30, 0x90	; 144
    11fc:	fe 4f       	sbci	r31, 0xFE	; 254
    11fe:	80 81       	ld	r24, Z
    1200:	01 c0       	rjmp	.+2      	; 0x1204 <qtm_measure_node+0x138>
    1202:	8f e3       	ldi	r24, 0x3F	; 63
    1204:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    1208:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    120c:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1210:	02 80       	ldd	r0, Z+2	; 0x02
    1212:	f3 81       	ldd	r31, Z+3	; 0x03
    1214:	e0 2d       	mov	r30, r0
    1216:	e2 0f       	add	r30, r18
    1218:	f3 1f       	adc	r31, r19
    121a:	86 81       	ldd	r24, Z+6	; 0x06
    121c:	8b 3f       	cpi	r24, 0xFB	; 251
    121e:	10 f4       	brcc	.+4      	; 0x1224 <qtm_measure_node+0x158>
    1220:	8c 5f       	subi	r24, 0xFC	; 252
    1222:	01 c0       	rjmp	.+2      	; 0x1226 <qtm_measure_node+0x15a>
    1224:	8f ef       	ldi	r24, 0xFF	; 255
    1226:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    122a:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    122e:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1232:	02 80       	ldd	r0, Z+2	; 0x02
    1234:	f3 81       	ldd	r31, Z+3	; 0x03
    1236:	e0 2d       	mov	r30, r0
    1238:	e2 0f       	add	r30, r18
    123a:	f3 1f       	adc	r31, r19
    123c:	87 81       	ldd	r24, Z+7	; 0x07
    123e:	80 7f       	andi	r24, 0xF0	; 240
    1240:	91 85       	ldd	r25, Z+9	; 0x09
    1242:	89 2b       	or	r24, r25
    1244:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1248:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    124c:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    1250:	82 81       	ldd	r24, Z+2	; 0x02
    1252:	93 81       	ldd	r25, Z+3	; 0x03
    1254:	fc 01       	movw	r30, r24
    1256:	e2 0f       	add	r30, r18
    1258:	f3 1f       	adc	r31, r19
    125a:	87 81       	ldd	r24, Z+7	; 0x07
    125c:	8f 70       	andi	r24, 0x0F	; 15
    125e:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    1262:	82 e1       	ldi	r24, 0x12	; 18
    1264:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1268:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    126c:	81 60       	ori	r24, 0x01	; 1
    126e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1272:	08 95       	ret

00001274 <qtm_acquisition_process>:
    1274:	4f 92       	push	r4
    1276:	5f 92       	push	r5
    1278:	6f 92       	push	r6
    127a:	7f 92       	push	r7
    127c:	8f 92       	push	r8
    127e:	9f 92       	push	r9
    1280:	af 92       	push	r10
    1282:	bf 92       	push	r11
    1284:	cf 92       	push	r12
    1286:	df 92       	push	r13
    1288:	ef 92       	push	r14
    128a:	ff 92       	push	r15
    128c:	0f 93       	push	r16
    128e:	1f 93       	push	r17
    1290:	cf 93       	push	r28
    1292:	df 93       	push	r29
    1294:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <touch_seq_lib_state>
    1298:	88 23       	and	r24, r24
    129a:	09 f4       	brne	.+2      	; 0x129e <qtm_acquisition_process+0x2a>
    129c:	31 c1       	rjmp	.+610    	; 0x1500 <qtm_acquisition_process+0x28c>
    129e:	a0 91 da 01 	lds	r26, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    12a2:	b0 91 db 01 	lds	r27, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    12a6:	e0 90 dc 01 	lds	r14, 0x01DC	; 0x8001dc <qtm_raw_data_measurements_ptr>
    12aa:	f0 90 dd 01 	lds	r15, 0x01DD	; 0x8001dd <qtm_raw_data_measurements_ptr+0x1>
    12ae:	41 2c       	mov	r4, r1
    12b0:	51 2c       	mov	r5, r1
    12b2:	60 e0       	ldi	r22, 0x00	; 0
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	00 e0       	ldi	r16, 0x00	; 0
    12b8:	10 e0       	ldi	r17, 0x00	; 0
    12ba:	80 e0       	ldi	r24, 0x00	; 0
    12bc:	66 24       	eor	r6, r6
    12be:	63 94       	inc	r6
    12c0:	91 e8       	ldi	r25, 0x81	; 129
    12c2:	79 2e       	mov	r7, r25
    12c4:	aa 24       	eor	r10, r10
    12c6:	aa 94       	dec	r10
    12c8:	bb 24       	eor	r11, r11
    12ca:	b3 94       	inc	r11
    12cc:	cd 90       	ld	r12, X+
    12ce:	dc 90       	ld	r13, X
    12d0:	11 97       	sbiw	r26, 0x01	; 1
    12d2:	f6 01       	movw	r30, r12
    12d4:	20 81       	ld	r18, Z
    12d6:	31 81       	ldd	r19, Z+1	; 0x01
    12d8:	02 17       	cp	r16, r18
    12da:	13 07       	cpc	r17, r19
    12dc:	08 f0       	brcs	.+2      	; 0x12e0 <qtm_acquisition_process+0x6c>
    12de:	0c c1       	rjmp	.+536    	; 0x14f8 <qtm_acquisition_process+0x284>
    12e0:	e7 01       	movw	r28, r14
    12e2:	29 91       	ld	r18, Y+
    12e4:	39 91       	ld	r19, Y+
    12e6:	7e 01       	movw	r14, r28
    12e8:	14 96       	adiw	r26, 0x04	; 4
    12ea:	ed 91       	ld	r30, X+
    12ec:	fc 91       	ld	r31, X
    12ee:	15 97       	sbiw	r26, 0x05	; 5
    12f0:	e6 0f       	add	r30, r22
    12f2:	f7 1f       	adc	r31, r23
    12f4:	40 81       	ld	r20, Z
    12f6:	4c 71       	andi	r20, 0x1C	; 28
    12f8:	50 e0       	ldi	r21, 0x00	; 0
    12fa:	56 95       	lsr	r21
    12fc:	47 95       	ror	r20
    12fe:	56 95       	lsr	r21
    1300:	47 95       	ror	r20
    1302:	41 15       	cp	r20, r1
    1304:	51 05       	cpc	r21, r1
    1306:	21 f0       	breq	.+8      	; 0x1310 <qtm_acquisition_process+0x9c>
    1308:	41 30       	cpi	r20, 0x01	; 1
    130a:	51 05       	cpc	r21, r1
    130c:	c1 f0       	breq	.+48     	; 0x133e <qtm_acquisition_process+0xca>
    130e:	eb c0       	rjmp	.+470    	; 0x14e6 <qtm_acquisition_process+0x272>
    1310:	12 96       	adiw	r26, 0x02	; 2
    1312:	4d 91       	ld	r20, X+
    1314:	5c 91       	ld	r21, X
    1316:	13 97       	sbiw	r26, 0x03	; 3
    1318:	44 0d       	add	r20, r4
    131a:	55 1d       	adc	r21, r5
    131c:	ea 01       	movw	r28, r20
    131e:	98 85       	ldd	r25, Y+8	; 0x08
    1320:	9f 70       	andi	r25, 0x0F	; 15
    1322:	49 85       	ldd	r20, Y+9	; 0x09
    1324:	94 17       	cp	r25, r20
    1326:	10 f4       	brcc	.+4      	; 0x132c <qtm_acquisition_process+0xb8>
    1328:	49 1b       	sub	r20, r25
    132a:	01 c0       	rjmp	.+2      	; 0x132e <qtm_acquisition_process+0xba>
    132c:	40 e0       	ldi	r20, 0x00	; 0
    132e:	02 c0       	rjmp	.+4      	; 0x1334 <qtm_acquisition_process+0xc0>
    1330:	36 95       	lsr	r19
    1332:	27 95       	ror	r18
    1334:	4a 95       	dec	r20
    1336:	e2 f7       	brpl	.-8      	; 0x1330 <qtm_acquisition_process+0xbc>
    1338:	32 83       	std	Z+2, r19	; 0x02
    133a:	21 83       	std	Z+1, r18	; 0x01
    133c:	d5 c0       	rjmp	.+426    	; 0x14e8 <qtm_acquisition_process+0x274>
    133e:	12 96       	adiw	r26, 0x02	; 2
    1340:	4d 91       	ld	r20, X+
    1342:	5c 91       	ld	r21, X
    1344:	13 97       	sbiw	r26, 0x03	; 3
    1346:	44 0d       	add	r20, r4
    1348:	55 1d       	adc	r21, r5
    134a:	ea 01       	movw	r28, r20
    134c:	09 84       	ldd	r0, Y+9	; 0x09
    134e:	02 c0       	rjmp	.+4      	; 0x1354 <qtm_acquisition_process+0xe0>
    1350:	36 95       	lsr	r19
    1352:	27 95       	ror	r18
    1354:	0a 94       	dec	r0
    1356:	e2 f7       	brpl	.-8      	; 0x1350 <qtm_acquisition_process+0xdc>
    1358:	32 83       	std	Z+2, r19	; 0x02
    135a:	21 83       	std	Z+1, r18	; 0x01
    135c:	43 81       	ldd	r20, Z+3	; 0x03
    135e:	54 81       	ldd	r21, Z+4	; 0x04
    1360:	21 15       	cp	r18, r1
    1362:	d2 e0       	ldi	r29, 0x02	; 2
    1364:	3d 07       	cpc	r19, r29
    1366:	20 f0       	brcs	.+8      	; 0x1370 <qtm_acquisition_process+0xfc>
    1368:	2f 5f       	subi	r18, 0xFF	; 255
    136a:	31 40       	sbci	r19, 0x01	; 1
    136c:	91 e0       	ldi	r25, 0x01	; 1
    136e:	05 c0       	rjmp	.+10     	; 0x137a <qtm_acquisition_process+0x106>
    1370:	e5 01       	movw	r28, r10
    1372:	c2 1b       	sub	r28, r18
    1374:	d3 0b       	sbc	r29, r19
    1376:	9e 01       	movw	r18, r28
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	e6 01       	movw	r28, r12
    137c:	da 80       	ldd	r13, Y+2	; 0x02
    137e:	d0 e4       	ldi	r29, 0x40	; 64
    1380:	dd 12       	cpse	r13, r29
    1382:	05 c0       	rjmp	.+10     	; 0x138e <qtm_acquisition_process+0x11a>
    1384:	36 95       	lsr	r19
    1386:	27 95       	ror	r18
    1388:	99 23       	and	r25, r25
    138a:	19 f0       	breq	.+6      	; 0x1392 <qtm_acquisition_process+0x11e>
    138c:	09 c0       	rjmp	.+18     	; 0x13a0 <qtm_acquisition_process+0x12c>
    138e:	99 23       	and	r25, r25
    1390:	39 f0       	breq	.+14     	; 0x13a0 <qtm_acquisition_process+0x12c>
    1392:	4f 3f       	cpi	r20, 0xFF	; 255
    1394:	9f e3       	ldi	r25, 0x3F	; 63
    1396:	59 07       	cpc	r21, r25
    1398:	31 f4       	brne	.+12     	; 0x13a6 <qtm_acquisition_process+0x132>
    139a:	70 82       	st	Z, r7
    139c:	8e e0       	ldi	r24, 0x0E	; 14
    139e:	07 c0       	rjmp	.+14     	; 0x13ae <qtm_acquisition_process+0x13a>
    13a0:	88 24       	eor	r8, r8
    13a2:	83 94       	inc	r8
    13a4:	01 c0       	rjmp	.+2      	; 0x13a8 <qtm_acquisition_process+0x134>
    13a6:	81 2c       	mov	r8, r1
    13a8:	2a 30       	cpi	r18, 0x0A	; 10
    13aa:	31 05       	cpc	r19, r1
    13ac:	98 f4       	brcc	.+38     	; 0x13d4 <qtm_acquisition_process+0x160>
    13ae:	14 96       	adiw	r26, 0x04	; 4
    13b0:	ed 91       	ld	r30, X+
    13b2:	fc 91       	ld	r31, X
    13b4:	15 97       	sbiw	r26, 0x05	; 5
    13b6:	e6 0f       	add	r30, r22
    13b8:	f7 1f       	adc	r31, r23
    13ba:	20 81       	ld	r18, Z
    13bc:	27 ff       	sbrs	r18, 7
    13be:	60 82       	st	Z, r6
    13c0:	14 96       	adiw	r26, 0x04	; 4
    13c2:	ed 91       	ld	r30, X+
    13c4:	fc 91       	ld	r31, X
    13c6:	15 97       	sbiw	r26, 0x05	; 5
    13c8:	e6 0f       	add	r30, r22
    13ca:	f7 1f       	adc	r31, r23
    13cc:	5f 73       	andi	r21, 0x3F	; 63
    13ce:	54 83       	std	Z+4, r21	; 0x04
    13d0:	43 83       	std	Z+3, r20	; 0x03
    13d2:	8a c0       	rjmp	.+276    	; 0x14e8 <qtm_acquisition_process+0x274>
    13d4:	6a 01       	movw	r12, r20
    13d6:	cc 24       	eor	r12, r12
    13d8:	c0 e3       	ldi	r28, 0x30	; 48
    13da:	dc 22       	and	r13, r28
    13dc:	9d 2c       	mov	r9, r13
    13de:	92 94       	swap	r9
    13e0:	df e0       	ldi	r29, 0x0F	; 15
    13e2:	9d 22       	and	r9, r29
    13e4:	6a 01       	movw	r12, r20
    13e6:	cc 24       	eor	r12, r12
    13e8:	df e0       	ldi	r29, 0x0F	; 15
    13ea:	dd 22       	and	r13, r29
    13ec:	9d 2d       	mov	r25, r13
    13ee:	6a 01       	movw	r12, r20
    13f0:	c0 ef       	ldi	r28, 0xF0	; 240
    13f2:	cc 22       	and	r12, r28
    13f4:	dd 24       	eor	r13, r13
    13f6:	54 e0       	ldi	r21, 0x04	; 4
    13f8:	d6 94       	lsr	r13
    13fa:	c7 94       	ror	r12
    13fc:	5a 95       	dec	r21
    13fe:	e1 f7       	brne	.-8      	; 0x13f8 <qtm_acquisition_process+0x184>
    1400:	5c 2d       	mov	r21, r12
    1402:	4f 70       	andi	r20, 0x0F	; 15
    1404:	81 10       	cpse	r8, r1
    1406:	32 c0       	rjmp	.+100    	; 0x146c <qtm_acquisition_process+0x1f8>
    1408:	20 3d       	cpi	r18, 0xD0	; 208
    140a:	31 05       	cpc	r19, r1
    140c:	60 f0       	brcs	.+24     	; 0x1426 <qtm_acquisition_process+0x1b2>
    140e:	d3 e0       	ldi	r29, 0x03	; 3
    1410:	9d 16       	cp	r9, r29
    1412:	49 f0       	breq	.+18     	; 0x1426 <qtm_acquisition_process+0x1b2>
    1414:	93 94       	inc	r9
    1416:	2f 5c       	subi	r18, 0xCF	; 207
    1418:	31 09       	sbc	r19, r1
    141a:	f6 cf       	rjmp	.-20     	; 0x1408 <qtm_acquisition_process+0x194>
    141c:	9f 30       	cpi	r25, 0x0F	; 15
    141e:	41 f0       	breq	.+16     	; 0x1430 <qtm_acquisition_process+0x1bc>
    1420:	9f 5f       	subi	r25, 0xFF	; 255
    1422:	25 51       	subi	r18, 0x15	; 21
    1424:	31 09       	sbc	r19, r1
    1426:	26 31       	cpi	r18, 0x16	; 22
    1428:	31 05       	cpc	r19, r1
    142a:	c0 f7       	brcc	.-16     	; 0x141c <qtm_acquisition_process+0x1a8>
    142c:	9f 30       	cpi	r25, 0x0F	; 15
    142e:	69 f4       	brne	.+26     	; 0x144a <qtm_acquisition_process+0x1d6>
    1430:	93 e0       	ldi	r25, 0x03	; 3
    1432:	99 12       	cpse	r9, r25
    1434:	02 c0       	rjmp	.+4      	; 0x143a <qtm_acquisition_process+0x1c6>
    1436:	9f e0       	ldi	r25, 0x0F	; 15
    1438:	08 c0       	rjmp	.+16     	; 0x144a <qtm_acquisition_process+0x1d6>
    143a:	93 94       	inc	r9
    143c:	95 e0       	ldi	r25, 0x05	; 5
    143e:	05 c0       	rjmp	.+10     	; 0x144a <qtm_acquisition_process+0x1d6>
    1440:	5f 30       	cpi	r21, 0x0F	; 15
    1442:	49 f0       	breq	.+18     	; 0x1456 <qtm_acquisition_process+0x1e2>
    1444:	5f 5f       	subi	r21, 0xFF	; 255
    1446:	22 50       	subi	r18, 0x02	; 2
    1448:	31 09       	sbc	r19, r1
    144a:	23 30       	cpi	r18, 0x03	; 3
    144c:	31 05       	cpc	r19, r1
    144e:	c0 f7       	brcc	.-16     	; 0x1440 <qtm_acquisition_process+0x1cc>
    1450:	5f 30       	cpi	r21, 0x0F	; 15
    1452:	09 f0       	breq	.+2      	; 0x1456 <qtm_acquisition_process+0x1e2>
    1454:	5b c0       	rjmp	.+182    	; 0x150c <qtm_acquisition_process+0x298>
    1456:	9f 30       	cpi	r25, 0x0F	; 15
    1458:	09 f4       	brne	.+2      	; 0x145c <qtm_acquisition_process+0x1e8>
    145a:	54 c0       	rjmp	.+168    	; 0x1504 <qtm_acquisition_process+0x290>
    145c:	9f 5f       	subi	r25, 0xFF	; 255
    145e:	55 e0       	ldi	r21, 0x05	; 5
    1460:	55 c0       	rjmp	.+170    	; 0x150c <qtm_acquisition_process+0x298>
    1462:	99 20       	and	r9, r9
    1464:	61 f0       	breq	.+24     	; 0x147e <qtm_acquisition_process+0x20a>
    1466:	9a 94       	dec	r9
    1468:	2f 5c       	subi	r18, 0xCF	; 207
    146a:	31 09       	sbc	r19, r1
    146c:	20 3d       	cpi	r18, 0xD0	; 208
    146e:	31 05       	cpc	r19, r1
    1470:	c0 f7       	brcc	.-16     	; 0x1462 <qtm_acquisition_process+0x1ee>
    1472:	05 c0       	rjmp	.+10     	; 0x147e <qtm_acquisition_process+0x20a>
    1474:	99 23       	and	r25, r25
    1476:	41 f0       	breq	.+16     	; 0x1488 <qtm_acquisition_process+0x214>
    1478:	91 50       	subi	r25, 0x01	; 1
    147a:	25 51       	subi	r18, 0x15	; 21
    147c:	31 09       	sbc	r19, r1
    147e:	26 31       	cpi	r18, 0x16	; 22
    1480:	31 05       	cpc	r19, r1
    1482:	c0 f7       	brcc	.-16     	; 0x1474 <qtm_acquisition_process+0x200>
    1484:	91 11       	cpse	r25, r1
    1486:	0c c0       	rjmp	.+24     	; 0x14a0 <qtm_acquisition_process+0x22c>
    1488:	91 10       	cpse	r9, r1
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <qtm_acquisition_process+0x21c>
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	08 c0       	rjmp	.+16     	; 0x14a0 <qtm_acquisition_process+0x22c>
    1490:	9a 94       	dec	r9
    1492:	9a e0       	ldi	r25, 0x0A	; 10
    1494:	05 c0       	rjmp	.+10     	; 0x14a0 <qtm_acquisition_process+0x22c>
    1496:	55 23       	and	r21, r21
    1498:	41 f0       	breq	.+16     	; 0x14aa <qtm_acquisition_process+0x236>
    149a:	51 50       	subi	r21, 0x01	; 1
    149c:	22 50       	subi	r18, 0x02	; 2
    149e:	31 09       	sbc	r19, r1
    14a0:	23 30       	cpi	r18, 0x03	; 3
    14a2:	31 05       	cpc	r19, r1
    14a4:	c0 f7       	brcc	.-16     	; 0x1496 <qtm_acquisition_process+0x222>
    14a6:	51 11       	cpse	r21, r1
    14a8:	0d c0       	rjmp	.+26     	; 0x14c4 <qtm_acquisition_process+0x250>
    14aa:	99 23       	and	r25, r25
    14ac:	b9 f1       	breq	.+110    	; 0x151c <qtm_acquisition_process+0x2a8>
    14ae:	91 50       	subi	r25, 0x01	; 1
    14b0:	5a e0       	ldi	r21, 0x0A	; 10
    14b2:	23 30       	cpi	r18, 0x03	; 3
    14b4:	31 05       	cpc	r19, r1
    14b6:	d0 f6       	brcc	.-76     	; 0x146c <qtm_acquisition_process+0x1f8>
    14b8:	05 c0       	rjmp	.+10     	; 0x14c4 <qtm_acquisition_process+0x250>
    14ba:	23 30       	cpi	r18, 0x03	; 3
    14bc:	31 05       	cpc	r19, r1
    14be:	58 f1       	brcs	.+86     	; 0x1516 <qtm_acquisition_process+0x2a2>
    14c0:	4f e0       	ldi	r20, 0x0F	; 15
    14c2:	5f e0       	ldi	r21, 0x0F	; 15
    14c4:	29 2d       	mov	r18, r9
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	32 2f       	mov	r19, r18
    14ca:	22 27       	eor	r18, r18
    14cc:	32 95       	swap	r19
    14ce:	30 7f       	andi	r19, 0xF0	; 240
    14d0:	39 2b       	or	r19, r25
    14d2:	24 2b       	or	r18, r20
    14d4:	c0 e1       	ldi	r28, 0x10	; 16
    14d6:	5c 9f       	mul	r21, r28
    14d8:	60 01       	movw	r12, r0
    14da:	11 24       	eor	r1, r1
    14dc:	c2 2a       	or	r12, r18
    14de:	d3 2a       	or	r13, r19
    14e0:	d4 82       	std	Z+4, r13	; 0x04
    14e2:	c3 82       	std	Z+3, r12	; 0x03
    14e4:	01 c0       	rjmp	.+2      	; 0x14e8 <qtm_acquisition_process+0x274>
    14e6:	ff cf       	rjmp	.-2      	; 0x14e6 <qtm_acquisition_process+0x272>
    14e8:	0f 5f       	subi	r16, 0xFF	; 255
    14ea:	1f 4f       	sbci	r17, 0xFF	; 255
    14ec:	6b 5f       	subi	r22, 0xFB	; 251
    14ee:	7f 4f       	sbci	r23, 0xFF	; 255
    14f0:	da e0       	ldi	r29, 0x0A	; 10
    14f2:	4d 0e       	add	r4, r29
    14f4:	51 1c       	adc	r5, r1
    14f6:	ea ce       	rjmp	.-556    	; 0x12cc <qtm_acquisition_process+0x58>
    14f8:	92 e0       	ldi	r25, 0x02	; 2
    14fa:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <touch_seq_lib_state>
    14fe:	10 c0       	rjmp	.+32     	; 0x1520 <qtm_acquisition_process+0x2ac>
    1500:	83 e0       	ldi	r24, 0x03	; 3
    1502:	0e c0       	rjmp	.+28     	; 0x1520 <qtm_acquisition_process+0x2ac>
    1504:	53 e0       	ldi	r21, 0x03	; 3
    1506:	95 16       	cp	r9, r21
    1508:	c1 f2       	breq	.-80     	; 0x14ba <qtm_acquisition_process+0x246>
    150a:	5f e0       	ldi	r21, 0x0F	; 15
    150c:	23 30       	cpi	r18, 0x03	; 3
    150e:	31 05       	cpc	r19, r1
    1510:	08 f0       	brcs	.+2      	; 0x1514 <qtm_acquisition_process+0x2a0>
    1512:	7a cf       	rjmp	.-268    	; 0x1408 <qtm_acquisition_process+0x194>
    1514:	d7 cf       	rjmp	.-82     	; 0x14c4 <qtm_acquisition_process+0x250>
    1516:	5f e0       	ldi	r21, 0x0F	; 15
    1518:	4f e0       	ldi	r20, 0x0F	; 15
    151a:	d4 cf       	rjmp	.-88     	; 0x14c4 <qtm_acquisition_process+0x250>
    151c:	50 e0       	ldi	r21, 0x00	; 0
    151e:	d2 cf       	rjmp	.-92     	; 0x14c4 <qtm_acquisition_process+0x250>
    1520:	df 91       	pop	r29
    1522:	cf 91       	pop	r28
    1524:	1f 91       	pop	r17
    1526:	0f 91       	pop	r16
    1528:	ff 90       	pop	r15
    152a:	ef 90       	pop	r14
    152c:	df 90       	pop	r13
    152e:	cf 90       	pop	r12
    1530:	bf 90       	pop	r11
    1532:	af 90       	pop	r10
    1534:	9f 90       	pop	r9
    1536:	8f 90       	pop	r8
    1538:	7f 90       	pop	r7
    153a:	6f 90       	pop	r6
    153c:	5f 90       	pop	r5
    153e:	4f 90       	pop	r4
    1540:	08 95       	ret

00001542 <qtm_ptc_init_acquisition_module>:
    1542:	8f 92       	push	r8
    1544:	9f 92       	push	r9
    1546:	af 92       	push	r10
    1548:	bf 92       	push	r11
    154a:	cf 92       	push	r12
    154c:	df 92       	push	r13
    154e:	ef 92       	push	r14
    1550:	ff 92       	push	r15
    1552:	cf 93       	push	r28
    1554:	df 93       	push	r29
    1556:	00 97       	sbiw	r24, 0x00	; 0
    1558:	09 f4       	brne	.+2      	; 0x155c <qtm_ptc_init_acquisition_module+0x1a>
    155a:	76 c0       	rjmp	.+236    	; 0x1648 <qtm_ptc_init_acquisition_module+0x106>
    155c:	dc 01       	movw	r26, r24
    155e:	ed 91       	ld	r30, X+
    1560:	fc 91       	ld	r31, X
    1562:	c0 80       	ld	r12, Z
    1564:	d1 80       	ldd	r13, Z+1	; 0x01
    1566:	e1 2c       	mov	r14, r1
    1568:	f1 2c       	mov	r15, r1
    156a:	a0 e0       	ldi	r26, 0x00	; 0
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	40 e0       	ldi	r20, 0x00	; 0
    1570:	50 e0       	ldi	r21, 0x00	; 0
    1572:	ba 01       	movw	r22, r20
    1574:	20 e0       	ldi	r18, 0x00	; 0
    1576:	30 e0       	ldi	r19, 0x00	; 0
    1578:	ac 15       	cp	r26, r12
    157a:	bd 05       	cpc	r27, r13
    157c:	b1 f0       	breq	.+44     	; 0x15aa <qtm_ptc_init_acquisition_module+0x68>
    157e:	ec 01       	movw	r28, r24
    1580:	ea 81       	ldd	r30, Y+2	; 0x02
    1582:	fb 81       	ldd	r31, Y+3	; 0x03
    1584:	ee 0d       	add	r30, r14
    1586:	ff 1d       	adc	r31, r15
    1588:	a0 80       	ld	r10, Z
    158a:	b1 80       	ldd	r11, Z+1	; 0x01
    158c:	2a 29       	or	r18, r10
    158e:	3b 29       	or	r19, r11
    1590:	82 80       	ldd	r8, Z+2	; 0x02
    1592:	93 80       	ldd	r9, Z+3	; 0x03
    1594:	a4 80       	ldd	r10, Z+4	; 0x04
    1596:	b5 80       	ldd	r11, Z+5	; 0x05
    1598:	48 29       	or	r20, r8
    159a:	59 29       	or	r21, r9
    159c:	6a 29       	or	r22, r10
    159e:	7b 29       	or	r23, r11
    15a0:	11 96       	adiw	r26, 0x01	; 1
    15a2:	da e0       	ldi	r29, 0x0A	; 10
    15a4:	ed 0e       	add	r14, r29
    15a6:	f1 1c       	adc	r15, r1
    15a8:	e7 cf       	rjmp	.-50     	; 0x1578 <qtm_ptc_init_acquisition_module+0x36>
    15aa:	41 15       	cp	r20, r1
    15ac:	51 05       	cpc	r21, r1
    15ae:	61 05       	cpc	r22, r1
    15b0:	71 05       	cpc	r23, r1
    15b2:	09 f4       	brne	.+2      	; 0x15b6 <qtm_ptc_init_acquisition_module+0x74>
    15b4:	4b c0       	rjmp	.+150    	; 0x164c <qtm_ptc_init_acquisition_module+0x10a>
    15b6:	e0 91 98 01 	lds	r30, 0x0198	; 0x800198 <touch_seq_lib_state>
    15ba:	4a 01       	movw	r8, r20
    15bc:	5b 01       	movw	r10, r22
    15be:	88 24       	eor	r8, r8
    15c0:	aa 24       	eor	r10, r10
    15c2:	bb 24       	eor	r11, r11
    15c4:	6a 01       	movw	r12, r20
    15c6:	7b 01       	movw	r14, r22
    15c8:	cc 24       	eor	r12, r12
    15ca:	dd 24       	eor	r13, r13
    15cc:	ff 24       	eor	r15, r15
    15ce:	87 2f       	mov	r24, r23
    15d0:	99 27       	eor	r25, r25
    15d2:	aa 27       	eor	r26, r26
    15d4:	bb 27       	eor	r27, r27
    15d6:	e1 11       	cpse	r30, r1
    15d8:	17 c0       	rjmp	.+46     	; 0x1608 <qtm_ptc_init_acquisition_module+0xc6>
    15da:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    15de:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    15e2:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    15e6:	89 2c       	mov	r8, r9
    15e8:	9a 2c       	mov	r9, r10
    15ea:	ab 2c       	mov	r10, r11
    15ec:	bb 24       	eor	r11, r11
    15ee:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    15f2:	67 01       	movw	r12, r14
    15f4:	ee 24       	eor	r14, r14
    15f6:	ff 24       	eor	r15, r15
    15f8:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    15fc:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <touch_seq_lib_state>
    1606:	1e c0       	rjmp	.+60     	; 0x1644 <qtm_ptc_init_acquisition_module+0x102>
    1608:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    160c:	2e 2b       	or	r18, r30
    160e:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1612:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1616:	23 2b       	or	r18, r19
    1618:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    161c:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1620:	42 2b       	or	r20, r18
    1622:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1626:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    162a:	29 29       	or	r18, r9
    162c:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1630:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1634:	2e 29       	or	r18, r14
    1636:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    163a:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    163e:	82 2b       	or	r24, r18
    1640:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1644:	80 e0       	ldi	r24, 0x00	; 0
    1646:	03 c0       	rjmp	.+6      	; 0x164e <qtm_ptc_init_acquisition_module+0x10c>
    1648:	8b e0       	ldi	r24, 0x0B	; 11
    164a:	01 c0       	rjmp	.+2      	; 0x164e <qtm_ptc_init_acquisition_module+0x10c>
    164c:	82 e0       	ldi	r24, 0x02	; 2
    164e:	df 91       	pop	r29
    1650:	cf 91       	pop	r28
    1652:	ff 90       	pop	r15
    1654:	ef 90       	pop	r14
    1656:	df 90       	pop	r13
    1658:	cf 90       	pop	r12
    165a:	bf 90       	pop	r11
    165c:	af 90       	pop	r10
    165e:	9f 90       	pop	r9
    1660:	8f 90       	pop	r8
    1662:	08 95       	ret

00001664 <qtm_ptc_qtlib_assign_signal_memory>:
    1664:	00 97       	sbiw	r24, 0x00	; 0
    1666:	31 f0       	breq	.+12     	; 0x1674 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1668:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <qtm_raw_data_measurements_ptr+0x1>
    166c:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <qtm_raw_data_measurements_ptr>
    1670:	80 e0       	ldi	r24, 0x00	; 0
    1672:	08 95       	ret
    1674:	8b e0       	ldi	r24, 0x0B	; 11
    1676:	08 95       	ret

00001678 <qtm_ptc_start_measurement_seq>:
    1678:	cf 93       	push	r28
    167a:	df 93       	push	r29
    167c:	00 d0       	rcall	.+0      	; 0x167e <qtm_ptc_start_measurement_seq+0x6>
    167e:	00 d0       	rcall	.+0      	; 0x1680 <qtm_ptc_start_measurement_seq+0x8>
    1680:	cd b7       	in	r28, 0x3d	; 61
    1682:	de b7       	in	r29, 0x3e	; 62
    1684:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <max_conversion_cycles>
    1688:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <max_conversion_cycles+0x1>
    168c:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <max_conversion_cycles+0x2>
    1690:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <max_conversion_cycles+0x3>
    1694:	61 15       	cp	r22, r1
    1696:	71 05       	cpc	r23, r1
    1698:	09 f4       	brne	.+2      	; 0x169c <qtm_ptc_start_measurement_seq+0x24>
    169a:	db c0       	rjmp	.+438    	; 0x1852 <qtm_ptc_start_measurement_seq+0x1da>
    169c:	00 97       	sbiw	r24, 0x00	; 0
    169e:	09 f4       	brne	.+2      	; 0x16a2 <qtm_ptc_start_measurement_seq+0x2a>
    16a0:	d8 c0       	rjmp	.+432    	; 0x1852 <qtm_ptc_start_measurement_seq+0x1da>
    16a2:	20 91 98 01 	lds	r18, 0x0198	; 0x800198 <touch_seq_lib_state>
    16a6:	22 23       	and	r18, r18
    16a8:	09 f4       	brne	.+2      	; 0x16ac <qtm_ptc_start_measurement_seq+0x34>
    16aa:	d5 c0       	rjmp	.+426    	; 0x1856 <qtm_ptc_start_measurement_seq+0x1de>
    16ac:	24 30       	cpi	r18, 0x04	; 4
    16ae:	09 f0       	breq	.+2      	; 0x16b2 <qtm_ptc_start_measurement_seq+0x3a>
    16b0:	93 c0       	rjmp	.+294    	; 0x17d8 <qtm_ptc_start_measurement_seq+0x160>
    16b2:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <ptc_eoc_ok_flag>
    16b6:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    16ba:	80 ff       	sbrs	r24, 0
    16bc:	8b c0       	rjmp	.+278    	; 0x17d4 <qtm_ptc_start_measurement_seq+0x15c>
    16be:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    16c2:	30 e0       	ldi	r19, 0x00	; 0
    16c4:	a6 e0       	ldi	r26, 0x06	; 6
    16c6:	b0 e0       	ldi	r27, 0x00	; 0
    16c8:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <__umulhisi3>
    16cc:	60 93 9c 01 	sts	0x019C, r22	; 0x80019c <max_conversion_cycles>
    16d0:	70 93 9d 01 	sts	0x019D, r23	; 0x80019d <max_conversion_cycles+0x1>
    16d4:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <max_conversion_cycles+0x2>
    16d8:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <max_conversion_cycles+0x3>
    16dc:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    16e0:	2f 70       	andi	r18, 0x0F	; 15
    16e2:	dc 01       	movw	r26, r24
    16e4:	cb 01       	movw	r24, r22
    16e6:	82 0f       	add	r24, r18
    16e8:	91 1d       	adc	r25, r1
    16ea:	a1 1d       	adc	r26, r1
    16ec:	b1 1d       	adc	r27, r1
    16ee:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <max_conversion_cycles>
    16f2:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <max_conversion_cycles+0x1>
    16f6:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <max_conversion_cycles+0x2>
    16fa:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <max_conversion_cycles+0x3>
    16fe:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1702:	27 70       	andi	r18, 0x07	; 7
    1704:	04 c0       	rjmp	.+8      	; 0x170e <qtm_ptc_start_measurement_seq+0x96>
    1706:	88 0f       	add	r24, r24
    1708:	99 1f       	adc	r25, r25
    170a:	aa 1f       	adc	r26, r26
    170c:	bb 1f       	adc	r27, r27
    170e:	2a 95       	dec	r18
    1710:	d2 f7       	brpl	.-12     	; 0x1706 <qtm_ptc_start_measurement_seq+0x8e>
    1712:	0e 96       	adiw	r24, 0x0e	; 14
    1714:	a1 1d       	adc	r26, r1
    1716:	b1 1d       	adc	r27, r1
    1718:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <max_conversion_cycles>
    171c:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <max_conversion_cycles+0x1>
    1720:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <max_conversion_cycles+0x2>
    1724:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <max_conversion_cycles+0x3>
    1728:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    172c:	23 70       	andi	r18, 0x03	; 3
    172e:	04 c0       	rjmp	.+8      	; 0x1738 <qtm_ptc_start_measurement_seq+0xc0>
    1730:	88 0f       	add	r24, r24
    1732:	99 1f       	adc	r25, r25
    1734:	aa 1f       	adc	r26, r26
    1736:	bb 1f       	adc	r27, r27
    1738:	2a 95       	dec	r18
    173a:	d2 f7       	brpl	.-12     	; 0x1730 <qtm_ptc_start_measurement_seq+0xb8>
    173c:	22 e0       	ldi	r18, 0x02	; 2
    173e:	b6 95       	lsr	r27
    1740:	a7 95       	ror	r26
    1742:	97 95       	ror	r25
    1744:	87 95       	ror	r24
    1746:	2a 95       	dec	r18
    1748:	d1 f7       	brne	.-12     	; 0x173e <qtm_ptc_start_measurement_seq+0xc6>
    174a:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <max_conversion_cycles>
    174e:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <max_conversion_cycles+0x1>
    1752:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <max_conversion_cycles+0x2>
    1756:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <max_conversion_cycles+0x3>
    175a:	19 82       	std	Y+1, r1	; 0x01
    175c:	1a 82       	std	Y+2, r1	; 0x02
    175e:	1b 82       	std	Y+3, r1	; 0x03
    1760:	1c 82       	std	Y+4, r1	; 0x04
    1762:	21 e0       	ldi	r18, 0x01	; 1
    1764:	49 81       	ldd	r20, Y+1	; 0x01
    1766:	5a 81       	ldd	r21, Y+2	; 0x02
    1768:	6b 81       	ldd	r22, Y+3	; 0x03
    176a:	7c 81       	ldd	r23, Y+4	; 0x04
    176c:	48 17       	cp	r20, r24
    176e:	59 07       	cpc	r21, r25
    1770:	6a 07       	cpc	r22, r26
    1772:	7b 07       	cpc	r23, r27
    1774:	b0 f4       	brcc	.+44     	; 0x17a2 <qtm_ptc_start_measurement_seq+0x12a>
    1776:	30 91 9b 01 	lds	r19, 0x019B	; 0x80019b <ptc_eoc_ok_flag>
    177a:	33 23       	and	r19, r19
    177c:	29 f0       	breq	.+10     	; 0x1788 <qtm_ptc_start_measurement_seq+0x110>
    177e:	89 83       	std	Y+1, r24	; 0x01
    1780:	9a 83       	std	Y+2, r25	; 0x02
    1782:	ab 83       	std	Y+3, r26	; 0x03
    1784:	bc 83       	std	Y+4, r27	; 0x04
    1786:	20 e0       	ldi	r18, 0x00	; 0
    1788:	49 81       	ldd	r20, Y+1	; 0x01
    178a:	5a 81       	ldd	r21, Y+2	; 0x02
    178c:	6b 81       	ldd	r22, Y+3	; 0x03
    178e:	7c 81       	ldd	r23, Y+4	; 0x04
    1790:	4f 5f       	subi	r20, 0xFF	; 255
    1792:	5f 4f       	sbci	r21, 0xFF	; 255
    1794:	6f 4f       	sbci	r22, 0xFF	; 255
    1796:	7f 4f       	sbci	r23, 0xFF	; 255
    1798:	49 83       	std	Y+1, r20	; 0x01
    179a:	5a 83       	std	Y+2, r21	; 0x02
    179c:	6b 83       	std	Y+3, r22	; 0x03
    179e:	7c 83       	std	Y+4, r23	; 0x04
    17a0:	e1 cf       	rjmp	.-62     	; 0x1764 <qtm_ptc_start_measurement_seq+0xec>
    17a2:	22 23       	and	r18, r18
    17a4:	b9 f0       	breq	.+46     	; 0x17d4 <qtm_ptc_start_measurement_seq+0x15c>
    17a6:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    17aa:	80 ff       	sbrs	r24, 0
    17ac:	13 c0       	rjmp	.+38     	; 0x17d4 <qtm_ptc_start_measurement_seq+0x15c>
    17ae:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    17b2:	00 00       	nop
    17b4:	82 e1       	ldi	r24, 0x12	; 18
    17b6:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    17ba:	00 00       	nop
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    17c2:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <ptc_lockups>
    17c6:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <ptc_lockups+0x1>
    17ca:	01 96       	adiw	r24, 0x01	; 1
    17cc:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <ptc_lockups+0x1>
    17d0:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <ptc_lockups>
    17d4:	81 e0       	ldi	r24, 0x01	; 1
    17d6:	42 c0       	rjmp	.+132    	; 0x185c <qtm_ptc_start_measurement_seq+0x1e4>
    17d8:	90 93 db 01 	sts	0x01DB, r25	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    17dc:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    17e0:	70 93 93 01 	sts	0x0193, r23	; 0x800193 <ptc_seq_measure_complete_pointer+0x1>
    17e4:	60 93 92 01 	sts	0x0192, r22	; 0x800192 <ptc_seq_measure_complete_pointer>
    17e8:	dc 01       	movw	r26, r24
    17ea:	ed 91       	ld	r30, X+
    17ec:	fc 91       	ld	r31, X
    17ee:	82 81       	ldd	r24, Z+2	; 0x02
    17f0:	80 34       	cpi	r24, 0x40	; 64
    17f2:	11 f4       	brne	.+4      	; 0x17f8 <qtm_ptc_start_measurement_seq+0x180>
    17f4:	88 e0       	ldi	r24, 0x08	; 8
    17f6:	03 c0       	rjmp	.+6      	; 0x17fe <qtm_ptc_start_measurement_seq+0x186>
    17f8:	80 38       	cpi	r24, 0x80	; 128
    17fa:	79 f5       	brne	.+94     	; 0x185a <qtm_ptc_start_measurement_seq+0x1e2>
    17fc:	8a e0       	ldi	r24, 0x0A	; 10
    17fe:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    1802:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <qtm_acquisition_control_working_set_ptr>
    1806:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <qtm_acquisition_control_working_set_ptr+0x1>
    180a:	01 90       	ld	r0, Z+
    180c:	f0 81       	ld	r31, Z
    180e:	e0 2d       	mov	r30, r0
    1810:	84 81       	ldd	r24, Z+4	; 0x04
    1812:	80 31       	cpi	r24, 0x10	; 16
    1814:	08 f0       	brcs	.+2      	; 0x1818 <qtm_ptc_start_measurement_seq+0x1a0>
    1816:	80 e1       	ldi	r24, 0x10	; 16
    1818:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    181c:	81 e0       	ldi	r24, 0x01	; 1
    181e:	84 bf       	out	0x34, r24	; 52
    1820:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    1824:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <current_measure_channel+0x1>
    1828:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <current_measure_channel>
    182c:	0e 94 33 08 	call	0x1066	; 0x1066 <select_next_channel_to_measure>
    1830:	81 11       	cpse	r24, r1
    1832:	0b c0       	rjmp	.+22     	; 0x184a <qtm_ptc_start_measurement_seq+0x1d2>
    1834:	84 e0       	ldi	r24, 0x04	; 4
    1836:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <touch_seq_lib_state>
    183a:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <current_measure_channel>
    183e:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <current_measure_channel+0x1>
    1842:	0e 94 66 08 	call	0x10cc	; 0x10cc <qtm_measure_node>
    1846:	80 e0       	ldi	r24, 0x00	; 0
    1848:	09 c0       	rjmp	.+18     	; 0x185c <qtm_ptc_start_measurement_seq+0x1e4>
    184a:	82 e0       	ldi	r24, 0x02	; 2
    184c:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <touch_seq_lib_state>
    1850:	05 c0       	rjmp	.+10     	; 0x185c <qtm_ptc_start_measurement_seq+0x1e4>
    1852:	8b e0       	ldi	r24, 0x0B	; 11
    1854:	03 c0       	rjmp	.+6      	; 0x185c <qtm_ptc_start_measurement_seq+0x1e4>
    1856:	83 e0       	ldi	r24, 0x03	; 3
    1858:	01 c0       	rjmp	.+2      	; 0x185c <qtm_ptc_start_measurement_seq+0x1e4>
    185a:	82 e0       	ldi	r24, 0x02	; 2
    185c:	0f 90       	pop	r0
    185e:	0f 90       	pop	r0
    1860:	0f 90       	pop	r0
    1862:	0f 90       	pop	r0
    1864:	df 91       	pop	r29
    1866:	cf 91       	pop	r28
    1868:	08 95       	ret

0000186a <qtm_enable_sensor_node>:
    186a:	00 97       	sbiw	r24, 0x00	; 0
    186c:	c9 f0       	breq	.+50     	; 0x18a0 <qtm_enable_sensor_node+0x36>
    186e:	dc 01       	movw	r26, r24
    1870:	ed 91       	ld	r30, X+
    1872:	fc 91       	ld	r31, X
    1874:	11 97       	sbiw	r26, 0x01	; 1
    1876:	20 81       	ld	r18, Z
    1878:	31 81       	ldd	r19, Z+1	; 0x01
    187a:	26 17       	cp	r18, r22
    187c:	37 07       	cpc	r19, r23
    187e:	90 f0       	brcs	.+36     	; 0x18a4 <qtm_enable_sensor_node+0x3a>
    1880:	45 e0       	ldi	r20, 0x05	; 5
    1882:	46 9f       	mul	r20, r22
    1884:	90 01       	movw	r18, r0
    1886:	47 9f       	mul	r20, r23
    1888:	30 0d       	add	r19, r0
    188a:	11 24       	eor	r1, r1
    188c:	14 96       	adiw	r26, 0x04	; 4
    188e:	ed 91       	ld	r30, X+
    1890:	fc 91       	ld	r31, X
    1892:	15 97       	sbiw	r26, 0x05	; 5
    1894:	e2 0f       	add	r30, r18
    1896:	f3 1f       	adc	r31, r19
    1898:	81 e0       	ldi	r24, 0x01	; 1
    189a:	80 83       	st	Z, r24
    189c:	80 e0       	ldi	r24, 0x00	; 0
    189e:	08 95       	ret
    18a0:	8b e0       	ldi	r24, 0x0B	; 11
    18a2:	08 95       	ret
    18a4:	82 e0       	ldi	r24, 0x02	; 2
    18a6:	08 95       	ret

000018a8 <qtm_calibrate_sensor_node>:
    18a8:	00 97       	sbiw	r24, 0x00	; 0
    18aa:	d1 f1       	breq	.+116    	; 0x1920 <qtm_calibrate_sensor_node+0x78>
    18ac:	dc 01       	movw	r26, r24
    18ae:	ed 91       	ld	r30, X+
    18b0:	fc 91       	ld	r31, X
    18b2:	11 97       	sbiw	r26, 0x01	; 1
    18b4:	20 81       	ld	r18, Z
    18b6:	31 81       	ldd	r19, Z+1	; 0x01
    18b8:	26 17       	cp	r18, r22
    18ba:	37 07       	cpc	r19, r23
    18bc:	98 f1       	brcs	.+102    	; 0x1924 <qtm_calibrate_sensor_node+0x7c>
    18be:	22 81       	ldd	r18, Z+2	; 0x02
    18c0:	14 96       	adiw	r26, 0x04	; 4
    18c2:	ed 91       	ld	r30, X+
    18c4:	fc 91       	ld	r31, X
    18c6:	15 97       	sbiw	r26, 0x05	; 5
    18c8:	20 34       	cpi	r18, 0x40	; 64
    18ca:	59 f4       	brne	.+22     	; 0x18e2 <qtm_calibrate_sensor_node+0x3a>
    18cc:	85 e0       	ldi	r24, 0x05	; 5
    18ce:	86 9f       	mul	r24, r22
    18d0:	d0 01       	movw	r26, r0
    18d2:	87 9f       	mul	r24, r23
    18d4:	b0 0d       	add	r27, r0
    18d6:	11 24       	eor	r1, r1
    18d8:	ae 0f       	add	r26, r30
    18da:	bf 1f       	adc	r27, r31
    18dc:	84 e3       	ldi	r24, 0x34	; 52
    18de:	92 e0       	ldi	r25, 0x02	; 2
    18e0:	0c c0       	rjmp	.+24     	; 0x18fa <qtm_calibrate_sensor_node+0x52>
    18e2:	20 38       	cpi	r18, 0x80	; 128
    18e4:	81 f4       	brne	.+32     	; 0x1906 <qtm_calibrate_sensor_node+0x5e>
    18e6:	85 e0       	ldi	r24, 0x05	; 5
    18e8:	86 9f       	mul	r24, r22
    18ea:	d0 01       	movw	r26, r0
    18ec:	87 9f       	mul	r24, r23
    18ee:	b0 0d       	add	r27, r0
    18f0:	11 24       	eor	r1, r1
    18f2:	ae 0f       	add	r26, r30
    18f4:	bf 1f       	adc	r27, r31
    18f6:	87 e6       	ldi	r24, 0x67	; 103
    18f8:	95 e0       	ldi	r25, 0x05	; 5
    18fa:	14 96       	adiw	r26, 0x04	; 4
    18fc:	9c 93       	st	X, r25
    18fe:	8e 93       	st	-X, r24
    1900:	13 97       	sbiw	r26, 0x03	; 3
    1902:	80 e0       	ldi	r24, 0x00	; 0
    1904:	01 c0       	rjmp	.+2      	; 0x1908 <qtm_calibrate_sensor_node+0x60>
    1906:	82 e0       	ldi	r24, 0x02	; 2
    1908:	95 e0       	ldi	r25, 0x05	; 5
    190a:	96 9f       	mul	r25, r22
    190c:	90 01       	movw	r18, r0
    190e:	97 9f       	mul	r25, r23
    1910:	30 0d       	add	r19, r0
    1912:	11 24       	eor	r1, r1
    1914:	e2 0f       	add	r30, r18
    1916:	f3 1f       	adc	r31, r19
    1918:	90 81       	ld	r25, Z
    191a:	92 60       	ori	r25, 0x02	; 2
    191c:	90 83       	st	Z, r25
    191e:	08 95       	ret
    1920:	8b e0       	ldi	r24, 0x0B	; 11
    1922:	08 95       	ret
    1924:	82 e0       	ldi	r24, 0x02	; 2
    1926:	08 95       	ret

00001928 <qtm_m324pb_ptc_handler_eoc>:
    1928:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    192c:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    1930:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    1934:	e0 91 99 01 	lds	r30, 0x0199	; 0x800199 <current_measure_channel>
    1938:	f0 91 9a 01 	lds	r31, 0x019A	; 0x80019a <current_measure_channel+0x1>
    193c:	ee 0f       	add	r30, r30
    193e:	ff 1f       	adc	r31, r31
    1940:	40 91 dc 01 	lds	r20, 0x01DC	; 0x8001dc <qtm_raw_data_measurements_ptr>
    1944:	50 91 dd 01 	lds	r21, 0x01DD	; 0x8001dd <qtm_raw_data_measurements_ptr+0x1>
    1948:	e4 0f       	add	r30, r20
    194a:	f5 1f       	adc	r31, r21
    194c:	90 e0       	ldi	r25, 0x00	; 0
    194e:	92 2b       	or	r25, r18
    1950:	91 83       	std	Z+1, r25	; 0x01
    1952:	80 83       	st	Z, r24
    1954:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <good_eocs>
    1958:	90 91 97 01 	lds	r25, 0x0197	; 0x800197 <good_eocs+0x1>
    195c:	01 96       	adiw	r24, 0x01	; 1
    195e:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <good_eocs+0x1>
    1962:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <good_eocs>
    1966:	89 2b       	or	r24, r25
    1968:	21 f4       	brne	.+8      	; 0x1972 <qtm_m324pb_ptc_handler_eoc+0x4a>
    196a:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <ptc_lockups+0x1>
    196e:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <ptc_lockups>
    1972:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <current_measure_channel>
    1976:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <current_measure_channel+0x1>
    197a:	01 96       	adiw	r24, 0x01	; 1
    197c:	90 93 9a 01 	sts	0x019A, r25	; 0x80019a <current_measure_channel+0x1>
    1980:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <current_measure_channel>
    1984:	0e 94 33 08 	call	0x1066	; 0x1066 <select_next_channel_to_measure>
    1988:	81 11       	cpse	r24, r1
    198a:	0a c0       	rjmp	.+20     	; 0x19a0 <qtm_m324pb_ptc_handler_eoc+0x78>
    198c:	84 e0       	ldi	r24, 0x04	; 4
    198e:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <touch_seq_lib_state>
    1992:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <current_measure_channel>
    1996:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <current_measure_channel+0x1>
    199a:	0e 94 66 08 	call	0x10cc	; 0x10cc <qtm_measure_node>
    199e:	05 c0       	rjmp	.+10     	; 0x19aa <qtm_m324pb_ptc_handler_eoc+0x82>
    19a0:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <ptc_seq_measure_complete_pointer>
    19a4:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <ptc_seq_measure_complete_pointer+0x1>
    19a8:	09 95       	icall
    19aa:	81 e0       	ldi	r24, 0x01	; 1
    19ac:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <ptc_eoc_ok_flag>
    19b0:	08 95       	ret

000019b2 <__umulhisi3>:
    19b2:	a2 9f       	mul	r26, r18
    19b4:	b0 01       	movw	r22, r0
    19b6:	b3 9f       	mul	r27, r19
    19b8:	c0 01       	movw	r24, r0
    19ba:	a3 9f       	mul	r26, r19
    19bc:	70 0d       	add	r23, r0
    19be:	81 1d       	adc	r24, r1
    19c0:	11 24       	eor	r1, r1
    19c2:	91 1d       	adc	r25, r1
    19c4:	b2 9f       	mul	r27, r18
    19c6:	70 0d       	add	r23, r0
    19c8:	81 1d       	adc	r24, r1
    19ca:	11 24       	eor	r1, r1
    19cc:	91 1d       	adc	r25, r1
    19ce:	08 95       	ret

000019d0 <_exit>:
    19d0:	f8 94       	cli

000019d2 <__stop_program>:
    19d2:	ff cf       	rjmp	.-2      	; 0x19d2 <__stop_program>
