
doubletouch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800100  00001930  000019c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001930  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  00800156  00800156  00001a1a  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001a1a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002c0  00000000  00000000  00001ac0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002ec9  00000000  00000000  00001d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013d0  00000000  00000000  00004c49  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013bd  00000000  00000000  00006019  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000578  00000000  00000000  000073d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001825  00000000  00000000  00007950  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b29  00000000  00000000  00009175  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  00009c9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 a6 02 	jmp	0x54c	; 0x54c <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	e0 e3       	ldi	r30, 0x30	; 48
      e0:	f9 e1       	ldi	r31, 0x19	; 25
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a6 35       	cpi	r26, 0x56	; 86
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	a6 e5       	ldi	r26, 0x56	; 86
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	ae 39       	cpi	r26, 0x9E	; 158
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 2b 01 	call	0x256	; 0x256 <main>
     102:	0c 94 96 0c 	jmp	0x192c	; 0x192c <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     10a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <system_init>

	touch_init();
     10e:	0e 94 dd 01 	call	0x3ba	; 0x3ba <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31

	mega_touch_timer();
     136:	0e 94 59 02 	call	0x4b2	; 0x4b2 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     13a:	a8 9a       	sbi	0x15, 0	; 21
}
     13c:	ff 91       	pop	r31
     13e:	ef 91       	pop	r30
     140:	bf 91       	pop	r27
     142:	af 91       	pop	r26
     144:	9f 91       	pop	r25
     146:	8f 91       	pop	r24
     148:	7f 91       	pop	r23
     14a:	6f 91       	pop	r22
     14c:	5f 91       	pop	r21
     14e:	4f 91       	pop	r20
     150:	3f 91       	pop	r19
     152:	2f 91       	pop	r18
     154:	0f 90       	pop	r0
     156:	0f be       	out	0x3f, r0	; 63
     158:	0f 90       	pop	r0
     15a:	1f 90       	pop	r1
     15c:	18 95       	reti

0000015e <SPI_MasterInit>:
uint8_t touch_counter_2 = 0;

void SPI_MasterInit()
{
	// Set SS, MOSI, and SCK as outputs
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     15e:	84 b1       	in	r24, 0x04	; 4
     160:	80 6b       	ori	r24, 0xB0	; 176
     162:	84 b9       	out	0x04, r24	; 4
	// Enable SPI, Set as Master
	SPCR0 = (1 << SPE) | (1 << MSTR);
     164:	80 e5       	ldi	r24, 0x50	; 80
     166:	8c bd       	out	0x2c, r24	; 44
	// Set SS pin high (inactive)
	PORTB |= (1 << SPI_SS_PIN);
     168:	2c 9a       	sbi	0x05, 4	; 5
     16a:	08 95       	ret

0000016c <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(uint8_t data)
{
	// Set SS pin low (activate slave)
	PORTB &= ~(1 << SPI_SS_PIN);
     16c:	2c 98       	cbi	0x05, 4	; 5
	// Start transmission
	SPDR0 = data;
     16e:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission to complete
	while (!(SPSR0 & (1 << SPIF)))
     170:	0d b4       	in	r0, 0x2d	; 45
     172:	07 fe       	sbrs	r0, 7
     174:	fd cf       	rjmp	.-6      	; 0x170 <SPI_MasterTransmit+0x4>
	{
		// Add timeout or error handling if necessary
	}
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
     176:	2c 9a       	sbi	0x05, 4	; 5
     178:	08 95       	ret

0000017a <SPI_MasterTransmitString>:




// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	ec 01       	movw	r28, r24
	for (int i = 0; str[i] != '\0'; i++) {
     180:	88 81       	ld	r24, Y
     182:	88 23       	and	r24, r24
     184:	61 f0       	breq	.+24     	; 0x19e <SPI_MasterTransmitString+0x24>
     186:	21 96       	adiw	r28, 0x01	; 1
		SPI_MasterTransmit(str[i]);
     188:	0e 94 b6 00 	call	0x16c	; 0x16c <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18c:	87 ea       	ldi	r24, 0xA7	; 167
     18e:	91 e6       	ldi	r25, 0x61	; 97
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	f1 f7       	brne	.-4      	; 0x190 <SPI_MasterTransmitString+0x16>
     194:	00 c0       	rjmp	.+0      	; 0x196 <SPI_MasterTransmitString+0x1c>
     196:	00 00       	nop



// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     198:	89 91       	ld	r24, Y+
     19a:	81 11       	cpse	r24, r1
     19c:	f5 cf       	rjmp	.-22     	; 0x188 <SPI_MasterTransmitString+0xe>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	08 95       	ret

000001a4 <touchpin1>:
	}
	return 0;
}
void touchpin1() {
	// Get the status of the first touch sensor
	previous_key_status_1 = key_status_1;
     1a4:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <key_status_1>
     1a8:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 97 02 	call	0x52e	; 0x52e <get_sensor_state>
     1b4:	80 78       	andi	r24, 0x80	; 128
     1b6:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1ba:	88 23       	and	r24, r24
     1bc:	c1 f0       	breq	.+48     	; 0x1ee <touchpin1+0x4a>
     1be:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <previous_key_status_1>
     1c2:	81 11       	cpse	r24, r1
     1c4:	14 c0       	rjmp	.+40     	; 0x1ee <touchpin1+0x4a>
		touch_counter_1++;
     1c6:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <touch_counter_1>
     1ca:	8f 5f       	subi	r24, 0xFF	; 255
     1cc:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <touch_counter_1>
		if (touch_counter_1 == 1) {
     1d0:	81 30       	cpi	r24, 0x01	; 1
     1d2:	29 f4       	brne	.+10     	; 0x1de <touchpin1+0x3a>
			SPI_MasterTransmitString("L1");
     1d4:	8a e4       	ldi	r24, 0x4A	; 74
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     1dc:	08 95       	ret
		}
		else if (touch_counter_1 == 2) {
     1de:	82 30       	cpi	r24, 0x02	; 2
     1e0:	31 f4       	brne	.+12     	; 0x1ee <touchpin1+0x4a>
			SPI_MasterTransmitString("L1");
     1e2:	8a e4       	ldi	r24, 0x4A	; 74
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_1 = 0;
     1ea:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <touch_counter_1>
     1ee:	08 95       	ret

000001f0 <touchpin2>:
		}
	}
}
void touchpin2() {
	// Get the status of the first touch sensor
	previous_key_status_2 = key_status_2;
     1f0:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <key_status_2>
     1f4:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 97 02 	call	0x52e	; 0x52e <get_sensor_state>
     200:	80 78       	andi	r24, 0x80	; 128
     202:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <key_status_2>
	if (key_status_2 && !previous_key_status_2) {
     206:	88 23       	and	r24, r24
     208:	c1 f0       	breq	.+48     	; 0x23a <touchpin2+0x4a>
     20a:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <previous_key_status_2>
     20e:	81 11       	cpse	r24, r1
     210:	14 c0       	rjmp	.+40     	; 0x23a <touchpin2+0x4a>
		touch_counter_2++;
     212:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <__data_end>
     216:	8f 5f       	subi	r24, 0xFF	; 255
     218:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <__data_end>
		if (touch_counter_2 == 1) {
     21c:	81 30       	cpi	r24, 0x01	; 1
     21e:	29 f4       	brne	.+10     	; 0x22a <touchpin2+0x3a>
			SPI_MasterTransmitString("L2");
     220:	8d e4       	ldi	r24, 0x4D	; 77
     222:	91 e0       	ldi	r25, 0x01	; 1
     224:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     228:	08 95       	ret
		}
		else if (touch_counter_2 == 2) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	31 f4       	brne	.+12     	; 0x23a <touchpin2+0x4a>
			SPI_MasterTransmitString("L2");
     22e:	8d e4       	ldi	r24, 0x4D	; 77
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_2 = 0;
     236:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <__data_end>
     23a:	08 95       	ret

0000023c <loop>:
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
}
void loop()
{
	touch_process();
     23c:	0e 94 17 02 	call	0x42e	; 0x42e <touch_process>
	// Check if touch measurement is done
	if (measurement_done_touch == 1)
     240:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <measurement_done_touch>
     244:	81 30       	cpi	r24, 0x01	; 1
     246:	31 f4       	brne	.+12     	; 0x254 <loop+0x18>
	{
		measurement_done_touch = 0;
     248:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <measurement_done_touch>
		touchpin1();
     24c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <touchpin1>
		touchpin2();
     250:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <touchpin2>
     254:	08 95       	ret

00000256 <main>:
	}
}
int main(void)
{
	/* Initializes MCU, drivers, and middleware */
	atmel_start_init();
     256:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	/* Enable interrupts */
	cpu_irq_enable();
     25a:	78 94       	sei
	// Initialize SPI as master
	SPI_MasterInit();
     25c:	0e 94 af 00 	call	0x15e	; 0x15e <SPI_MasterInit>
	while (1)
	{
		loop();
     260:	0e 94 1e 01 	call	0x23c	; 0x23c <loop>
     264:	fd cf       	rjmp	.-6      	; 0x260 <main+0xa>

00000266 <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     266:	08 95       	ret

00000268 <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     268:	cf 93       	push	r28
     26a:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     26c:	0e 94 91 03 	call	0x722	; 0x722 <USART_is_tx_ready>
     270:	88 23       	and	r24, r24
     272:	e1 f3       	breq	.-8      	; 0x26c <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     274:	8c 2f       	mov	r24, r28
     276:	0e 94 9f 03 	call	0x73e	; 0x73e <USART_write>

	while (USART_is_tx_busy())
     27a:	0e 94 97 03 	call	0x72e	; 0x72e <USART_is_tx_busy>
     27e:	81 11       	cpse	r24, r1
     280:	fc cf       	rjmp	.-8      	; 0x27a <datastreamer_transmit+0x12>
		;
}
     282:	cf 91       	pop	r28
     284:	08 95       	ret

00000286 <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     286:	ef 92       	push	r14
     288:	ff 92       	push	r15
     28a:	0f 93       	push	r16
     28c:	1f 93       	push	r17
     28e:	cf 93       	push	r28
     290:	df 93       	push	r29
     292:	00 d0       	rcall	.+0      	; 0x294 <datastreamer_output+0xe>
     294:	cd b7       	in	r28, 0x3d	; 61
     296:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     298:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sequence.2459>
     29c:	8f 70       	andi	r24, 0x0F	; 15
     29e:	81 f4       	brne	.+32     	; 0x2c0 <datastreamer_output+0x3a>
     2a0:	00 e0       	ldi	r16, 0x00	; 0
     2a2:	11 e0       	ldi	r17, 0x01	; 1
     2a4:	0f 2e       	mov	r0, r31
     2a6:	f3 e1       	ldi	r31, 0x13	; 19
     2a8:	ef 2e       	mov	r14, r31
     2aa:	f1 e0       	ldi	r31, 0x01	; 1
     2ac:	ff 2e       	mov	r15, r31
     2ae:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     2b0:	f8 01       	movw	r30, r16
     2b2:	81 91       	ld	r24, Z+
     2b4:	8f 01       	movw	r16, r30
     2b6:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     2ba:	e0 16       	cp	r14, r16
     2bc:	f1 06       	cpc	r15, r17
     2be:	c1 f7       	brne	.-16     	; 0x2b0 <datastreamer_output+0x2a>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     2c0:	85 e5       	ldi	r24, 0x55	; 85
     2c2:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     2c6:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sequence.2459>
     2ca:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     2ce:	1a 82       	std	Y+2, r1	; 0x02
     2d0:	19 82       	std	Y+1, r1	; 0x01
     2d2:	89 81       	ldd	r24, Y+1	; 0x01
     2d4:	9a 81       	ldd	r25, Y+2	; 0x02
     2d6:	02 97       	sbiw	r24, 0x02	; 2
     2d8:	08 f0       	brcs	.+2      	; 0x2dc <datastreamer_output+0x56>
     2da:	53 c0       	rjmp	.+166    	; 0x382 <datastreamer_output+0xfc>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     2dc:	89 81       	ldd	r24, Y+1	; 0x01
     2de:	9a 81       	ldd	r25, Y+2	; 0x02
     2e0:	0e 94 70 02 	call	0x4e0	; 0x4e0 <get_sensor_node_signal>
     2e4:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     2e6:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     2ea:	81 2f       	mov	r24, r17
     2ec:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     2f0:	89 81       	ldd	r24, Y+1	; 0x01
     2f2:	9a 81       	ldd	r25, Y+2	; 0x02
     2f4:	0e 94 7d 02 	call	0x4fa	; 0x4fa <get_sensor_node_reference>
     2f8:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     2fa:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     2fe:	81 2f       	mov	r24, r17
     300:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     304:	89 81       	ldd	r24, Y+1	; 0x01
     306:	9a 81       	ldd	r25, Y+2	; 0x02
     308:	0e 94 70 02 	call	0x4e0	; 0x4e0 <get_sensor_node_signal>
     30c:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     30e:	89 81       	ldd	r24, Y+1	; 0x01
     310:	9a 81       	ldd	r25, Y+2	; 0x02
     312:	0e 94 7d 02 	call	0x4fa	; 0x4fa <get_sensor_node_reference>
     316:	08 1b       	sub	r16, r24
     318:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     31a:	80 2f       	mov	r24, r16
     31c:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     320:	81 2f       	mov	r24, r17
     322:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     326:	89 81       	ldd	r24, Y+1	; 0x01
     328:	9a 81       	ldd	r25, Y+2	; 0x02
     32a:	0e 94 8a 02 	call	0x514	; 0x514 <get_sensor_cc_val>
     32e:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     330:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     334:	81 2f       	mov	r24, r17
     336:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     33a:	89 81       	ldd	r24, Y+1	; 0x01
     33c:	9a 81       	ldd	r25, Y+2	; 0x02
     33e:	0e 94 97 02 	call	0x52e	; 0x52e <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     342:	88 23       	and	r24, r24
     344:	24 f4       	brge	.+8      	; 0x34e <datastreamer_output+0xc8>
			datastreamer_transmit(0x01);
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
     34c:	03 c0       	rjmp	.+6      	; 0x354 <datastreamer_output+0xce>
		} else {
			datastreamer_transmit(0x00);
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	9a 81       	ldd	r25, Y+2	; 0x02
     358:	fc 01       	movw	r30, r24
     35a:	ee 0f       	add	r30, r30
     35c:	ff 1f       	adc	r31, r31
     35e:	8e 0f       	add	r24, r30
     360:	9f 1f       	adc	r25, r31
     362:	fc 01       	movw	r30, r24
     364:	e5 5e       	subi	r30, 0xE5	; 229
     366:	fe 4f       	sbci	r31, 0xFE	; 254
     368:	80 81       	ld	r24, Z
     36a:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     36e:	89 81       	ldd	r24, Y+1	; 0x01
     370:	9a 81       	ldd	r25, Y+2	; 0x02
     372:	01 96       	adiw	r24, 0x01	; 1
     374:	9a 83       	std	Y+2, r25	; 0x02
     376:	89 83       	std	Y+1, r24	; 0x01
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
     37c:	02 97       	sbiw	r24, 0x02	; 2
     37e:	08 f4       	brcc	.+2      	; 0x382 <datastreamer_output+0xfc>
     380:	ad cf       	rjmp	.-166    	; 0x2dc <datastreamer_output+0x56>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     382:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <module_error_code>
     386:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     38a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <sequence.2459>
     38e:	91 e0       	ldi	r25, 0x01	; 1
     390:	98 0f       	add	r25, r24
     392:	90 93 5c 01 	sts	0x015C, r25	; 0x80015c <sequence.2459>
     396:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     39a:	8a ea       	ldi	r24, 0xAA	; 170
     39c:	0e 94 34 01 	call	0x268	; 0x268 <datastreamer_transmit>
}
     3a0:	0f 90       	pop	r0
     3a2:	0f 90       	pop	r0
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	1f 91       	pop	r17
     3aa:	0f 91       	pop	r16
     3ac:	ff 90       	pop	r15
     3ae:	ef 90       	pop	r14
     3b0:	08 95       	ret

000003b2 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     3b2:	81 e0       	ldi	r24, 0x01	; 1
     3b4:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <touch_postprocess_request>
     3b8:	08 95       	ret

000003ba <touch_init>:
     3ba:	88 e0       	ldi	r24, 0x08	; 8
     3bc:	87 bd       	out	0x27, r24	; 39
     3be:	e3 e6       	ldi	r30, 0x63	; 99
     3c0:	f0 e0       	ldi	r31, 0x00	; 0
     3c2:	80 81       	ld	r24, Z
     3c4:	87 7f       	andi	r24, 0xF7	; 247
     3c6:	80 83       	st	Z, r24
     3c8:	12 98       	cbi	0x02, 2	; 2
     3ca:	13 98       	cbi	0x02, 3	; 2
     3cc:	8b e2       	ldi	r24, 0x2B	; 43
     3ce:	91 e0       	ldi	r25, 0x01	; 1
     3d0:	0e 94 4f 0a 	call	0x149e	; 0x149e <qtm_ptc_init_acquisition_module>
     3d4:	8a e8       	ldi	r24, 0x8A	; 138
     3d6:	91 e0       	ldi	r25, 0x01	; 1
     3d8:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <qtm_ptc_qtlib_assign_signal_memory>
     3dc:	60 e0       	ldi	r22, 0x00	; 0
     3de:	70 e0       	ldi	r23, 0x00	; 0
     3e0:	8b e2       	ldi	r24, 0x2B	; 43
     3e2:	91 e0       	ldi	r25, 0x01	; 1
     3e4:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <qtm_enable_sensor_node>
     3e8:	60 e0       	ldi	r22, 0x00	; 0
     3ea:	70 e0       	ldi	r23, 0x00	; 0
     3ec:	8b e2       	ldi	r24, 0x2B	; 43
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	0e 94 02 0c 	call	0x1804	; 0x1804 <qtm_calibrate_sensor_node>
     3f4:	61 e0       	ldi	r22, 0x01	; 1
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	8b e2       	ldi	r24, 0x2B	; 43
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 e3 0b 	call	0x17c6	; 0x17c6 <qtm_enable_sensor_node>
     400:	61 e0       	ldi	r22, 0x01	; 1
     402:	70 e0       	ldi	r23, 0x00	; 0
     404:	8b e2       	ldi	r24, 0x2B	; 43
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	0e 94 02 0c 	call	0x1804	; 0x1804 <qtm_calibrate_sensor_node>
     40c:	40 e8       	ldi	r20, 0x80	; 128
     40e:	51 e0       	ldi	r21, 0x01	; 1
     410:	60 e0       	ldi	r22, 0x00	; 0
     412:	83 e1       	ldi	r24, 0x13	; 19
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	0e 94 1b 04 	call	0x836	; 0x836 <qtm_init_sensor_key>
     41a:	45 e8       	ldi	r20, 0x85	; 133
     41c:	51 e0       	ldi	r21, 0x01	; 1
     41e:	61 e0       	ldi	r22, 0x01	; 1
     420:	83 e1       	ldi	r24, 0x13	; 19
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	0e 94 1b 04 	call	0x836	; 0x836 <qtm_init_sensor_key>
     428:	0e 94 33 01 	call	0x266	; 0x266 <datastreamer_init>
     42c:	08 95       	ret

0000042e <touch_process>:
     42e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <time_to_measure_touch_flag>
     432:	81 30       	cpi	r24, 0x01	; 1
     434:	51 f4       	brne	.+20     	; 0x44a <touch_process+0x1c>
     436:	69 ed       	ldi	r22, 0xD9	; 217
     438:	71 e0       	ldi	r23, 0x01	; 1
     43a:	8b e2       	ldi	r24, 0x2B	; 43
     43c:	91 e0       	ldi	r25, 0x01	; 1
     43e:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <qtm_ptc_start_measurement_seq>
     442:	81 11       	cpse	r24, r1
     444:	02 c0       	rjmp	.+4      	; 0x44a <touch_process+0x1c>
     446:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <time_to_measure_touch_flag>
     44a:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <touch_postprocess_request>
     44e:	81 30       	cpi	r24, 0x01	; 1
     450:	39 f5       	brne	.+78     	; 0x4a0 <touch_process+0x72>
     452:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <touch_postprocess_request>
     456:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <qtm_acquisition_process>
     45a:	81 11       	cpse	r24, r1
     45c:	0c c0       	rjmp	.+24     	; 0x476 <touch_process+0x48>
     45e:	83 e1       	ldi	r24, 0x13	; 19
     460:	91 e0       	ldi	r25, 0x01	; 1
     462:	0e 94 3a 04 	call	0x874	; 0x874 <qtm_key_sensors_process>
     466:	88 23       	and	r24, r24
     468:	59 f0       	breq	.+22     	; 0x480 <touch_process+0x52>
     46a:	82 e0       	ldi	r24, 0x02	; 2
     46c:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <module_error_code>
     470:	0e 94 43 01 	call	0x286	; 0x286 <datastreamer_output>
     474:	05 c0       	rjmp	.+10     	; 0x480 <touch_process+0x52>
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <module_error_code>
     47c:	0e 94 43 01 	call	0x286	; 0x286 <datastreamer_output>
     480:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     484:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     488:	80 81       	ld	r24, Z
     48a:	88 23       	and	r24, r24
     48c:	24 f4       	brge	.+8      	; 0x496 <touch_process+0x68>
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <time_to_measure_touch_flag>
     494:	03 c0       	rjmp	.+6      	; 0x49c <touch_process+0x6e>
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <measurement_done_touch>
     49c:	0e 94 43 01 	call	0x286	; 0x286 <datastreamer_output>
     4a0:	08 95       	ret

000004a2 <touch_timer_handler>:
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <time_to_measure_touch_flag>
     4a8:	84 e1       	ldi	r24, 0x14	; 20
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 10 04 	call	0x820	; 0x820 <qtm_update_qtlib_timer>
     4b0:	08 95       	ret

000004b2 <mega_touch_timer>:
     4b2:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <touch_time_counter.2335>
     4b6:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <touch_time_counter.2335+0x1>
     4ba:	44 97       	sbiw	r24, 0x14	; 20
     4bc:	39 f4       	brne	.+14     	; 0x4cc <mega_touch_timer+0x1a>
     4be:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <touch_time_counter.2335+0x1>
     4c2:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <touch_time_counter.2335>
     4c6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <touch_timer_handler>
     4ca:	08 95       	ret
     4cc:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <touch_time_counter.2335>
     4d0:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <touch_time_counter.2335+0x1>
     4d4:	01 96       	adiw	r24, 0x01	; 1
     4d6:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <touch_time_counter.2335+0x1>
     4da:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <touch_time_counter.2335>
     4de:	08 95       	ret

000004e0 <get_sensor_node_signal>:
     4e0:	9c 01       	movw	r18, r24
     4e2:	22 0f       	add	r18, r18
     4e4:	33 1f       	adc	r19, r19
     4e6:	22 0f       	add	r18, r18
     4e8:	33 1f       	adc	r19, r19
     4ea:	82 0f       	add	r24, r18
     4ec:	93 1f       	adc	r25, r19
     4ee:	fc 01       	movw	r30, r24
     4f0:	e0 58       	subi	r30, 0x80	; 128
     4f2:	fe 4f       	sbci	r31, 0xFE	; 254
     4f4:	81 81       	ldd	r24, Z+1	; 0x01
     4f6:	92 81       	ldd	r25, Z+2	; 0x02
     4f8:	08 95       	ret

000004fa <get_sensor_node_reference>:
     4fa:	9c 01       	movw	r18, r24
     4fc:	22 0f       	add	r18, r18
     4fe:	33 1f       	adc	r19, r19
     500:	82 0f       	add	r24, r18
     502:	93 1f       	adc	r25, r19
     504:	fc 01       	movw	r30, r24
     506:	ee 0f       	add	r30, r30
     508:	ff 1f       	adc	r31, r31
     50a:	e2 57       	subi	r30, 0x72	; 114
     50c:	fe 4f       	sbci	r31, 0xFE	; 254
     50e:	84 81       	ldd	r24, Z+4	; 0x04
     510:	95 81       	ldd	r25, Z+5	; 0x05
     512:	08 95       	ret

00000514 <get_sensor_cc_val>:
     514:	9c 01       	movw	r18, r24
     516:	22 0f       	add	r18, r18
     518:	33 1f       	adc	r19, r19
     51a:	22 0f       	add	r18, r18
     51c:	33 1f       	adc	r19, r19
     51e:	82 0f       	add	r24, r18
     520:	93 1f       	adc	r25, r19
     522:	fc 01       	movw	r30, r24
     524:	e0 58       	subi	r30, 0x80	; 128
     526:	fe 4f       	sbci	r31, 0xFE	; 254
     528:	83 81       	ldd	r24, Z+3	; 0x03
     52a:	94 81       	ldd	r25, Z+4	; 0x04
     52c:	08 95       	ret

0000052e <get_sensor_state>:
     52e:	9c 01       	movw	r18, r24
     530:	22 0f       	add	r18, r18
     532:	33 1f       	adc	r19, r19
     534:	82 0f       	add	r24, r18
     536:	93 1f       	adc	r25, r19
     538:	88 0f       	add	r24, r24
     53a:	99 1f       	adc	r25, r25
     53c:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     540:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     544:	e8 0f       	add	r30, r24
     546:	f9 1f       	adc	r31, r25
     548:	80 81       	ld	r24, Z
     54a:	08 95       	ret

0000054c <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     54c:	1f 92       	push	r1
     54e:	0f 92       	push	r0
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	0f 92       	push	r0
     554:	11 24       	eor	r1, r1
     556:	2f 93       	push	r18
     558:	3f 93       	push	r19
     55a:	4f 93       	push	r20
     55c:	5f 93       	push	r21
     55e:	6f 93       	push	r22
     560:	7f 93       	push	r23
     562:	8f 93       	push	r24
     564:	9f 93       	push	r25
     566:	af 93       	push	r26
     568:	bf 93       	push	r27
     56a:	ef 93       	push	r30
     56c:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     56e:	0e 94 42 0c 	call	0x1884	; 0x1884 <qtm_m324pb_ptc_handler_eoc>
}
     572:	ff 91       	pop	r31
     574:	ef 91       	pop	r30
     576:	bf 91       	pop	r27
     578:	af 91       	pop	r26
     57a:	9f 91       	pop	r25
     57c:	8f 91       	pop	r24
     57e:	7f 91       	pop	r23
     580:	6f 91       	pop	r22
     582:	5f 91       	pop	r21
     584:	4f 91       	pop	r20
     586:	3f 91       	pop	r19
     588:	2f 91       	pop	r18
     58a:	0f 90       	pop	r0
     58c:	0f be       	out	0x3f, r0	; 63
     58e:	0f 90       	pop	r0
     590:	1f 90       	pop	r1
     592:	18 95       	reti

00000594 <SPI_0_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     594:	26 98       	cbi	0x04, 6	; 4
     596:	2e 98       	cbi	0x05, 6	; 5
     598:	25 9a       	sbi	0x04, 5	; 4
     59a:	2d 98       	cbi	0x05, 5	; 5
     59c:	27 9a       	sbi	0x04, 7	; 4
     59e:	2f 98       	cbi	0x05, 7	; 5
     5a0:	0e 94 10 03 	call	0x620	; 0x620 <SPI_0_init>
     5a4:	08 95       	ret

000005a6 <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     5a6:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     5a8:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     5aa:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     5ac:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     5ae:	0e 94 80 03 	call	0x700	; 0x700 <USART_init>
     5b2:	08 95       	ret

000005b4 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     5b4:	83 e0       	ldi	r24, 0x03	; 3
     5b6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     5ba:	8f ef       	ldi	r24, 0xFF	; 255
     5bc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     5c0:	9f e0       	ldi	r25, 0x0F	; 15
     5c2:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     5c6:	91 b1       	in	r25, 0x01	; 1
     5c8:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     5ca:	92 b1       	in	r25, 0x02	; 2
     5cc:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     5ce:	94 b1       	in	r25, 0x04	; 4
     5d0:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     5d2:	95 b1       	in	r25, 0x05	; 5
     5d4:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     5d6:	97 b1       	in	r25, 0x07	; 7
     5d8:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     5da:	98 b1       	in	r25, 0x08	; 8
     5dc:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     5de:	9a b1       	in	r25, 0x0a	; 10
     5e0:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     5e2:	9b b1       	in	r25, 0x0b	; 11
     5e4:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     5e6:	8d b1       	in	r24, 0x0d	; 13
     5e8:	80 78       	andi	r24, 0x80	; 128
     5ea:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     5ec:	8e b1       	in	r24, 0x0e	; 14
     5ee:	8f 67       	ori	r24, 0x7F	; 127
     5f0:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     5f2:	40 e0       	ldi	r20, 0x00	; 0
     5f4:	60 e8       	ldi	r22, 0x80	; 128
     5f6:	81 e6       	ldi	r24, 0x61	; 97
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 09 03 	call	0x612	; 0x612 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     5fe:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     600:	15 be       	out	0x35, r1	; 53

	ENABLE_INTERRUPTS();
     602:	78 94       	sei
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     604:	0e 94 ca 02 	call	0x594	; 0x594 <SPI_0_initialization>
}

void Timer_initialization(void)
{

	Timer_init();
     608:	0e 94 73 03 	call	0x6e6	; 0x6e6 <Timer_init>

	SPI_0_initialization();

	Timer_initialization();

	USART_initialization();
     60c:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <USART_initialization>
     610:	08 95       	ret

00000612 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     612:	2f b7       	in	r18, 0x3f	; 63
	cli
     614:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     616:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     618:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     61a:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     61c:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     61e:	08 95       	ret

00000620 <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     620:	e4 e6       	ldi	r30, 0x64	; 100
     622:	f0 e0       	ldi	r31, 0x00	; 0
     624:	80 81       	ld	r24, Z
     626:	8b 7f       	andi	r24, 0xFB	; 251
     628:	80 83       	st	Z, r24
     62a:	80 ed       	ldi	r24, 0xD0	; 208
     62c:	8c bd       	out	0x2c, r24	; 44
     62e:	e3 e6       	ldi	r30, 0x63	; 99
     630:	f1 e0       	ldi	r31, 0x01	; 1
     632:	10 82       	st	Z, r1
     634:	16 82       	std	Z+6, r1	; 0x06
     636:	15 82       	std	Z+5, r1	; 0x05
     638:	08 95       	ret

0000063a <__vector_19>:
}

ISR(SPI0_STC_vect)
{
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
     644:	2f 93       	push	r18
     646:	3f 93       	push	r19
     648:	4f 93       	push	r20
     64a:	5f 93       	push	r21
     64c:	6f 93       	push	r22
     64e:	7f 93       	push	r23
     650:	8f 93       	push	r24
     652:	9f 93       	push	r25
     654:	af 93       	push	r26
     656:	bf 93       	push	r27
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	ef 93       	push	r30
     65e:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
     660:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
     662:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <SPI_0_desc+0x4>
     666:	82 30       	cpi	r24, 0x02	; 2
     668:	11 f1       	breq	.+68     	; 0x6ae <__vector_19+0x74>
		*SPI_0_desc.data = rdata;
     66a:	c3 e6       	ldi	r28, 0x63	; 99
     66c:	d1 e0       	ldi	r29, 0x01	; 1
     66e:	a9 81       	ldd	r26, Y+1	; 0x01
     670:	ba 81       	ldd	r27, Y+2	; 0x02
     672:	fd 01       	movw	r30, r26
     674:	91 93       	st	Z+, r25
	}

	SPI_0_desc.data++;
     676:	fa 83       	std	Y+2, r31	; 0x02
     678:	e9 83       	std	Y+1, r30	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     67a:	81 30       	cpi	r24, 0x01	; 1
     67c:	19 f0       	breq	.+6      	; 0x684 <__vector_19+0x4a>
		wdata = *SPI_0_desc.data;
     67e:	11 96       	adiw	r26, 0x01	; 1
     680:	9c 91       	ld	r25, X
     682:	01 c0       	rjmp	.+2      	; 0x686 <__vector_19+0x4c>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
	uint8_t wdata = 0;
     684:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     686:	e3 e6       	ldi	r30, 0x63	; 99
     688:	f1 e0       	ldi	r31, 0x01	; 1
     68a:	83 81       	ldd	r24, Z+3	; 0x03
     68c:	81 50       	subi	r24, 0x01	; 1
     68e:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     690:	88 23       	and	r24, r24
     692:	11 f0       	breq	.+4      	; 0x698 <__vector_19+0x5e>
		// more data to send, send a byte
		SPDR0 = wdata;
     694:	9e bd       	out	0x2e, r25	; 46
     696:	14 c0       	rjmp	.+40     	; 0x6c0 <__vector_19+0x86>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     698:	e3 e6       	ldi	r30, 0x63	; 99
     69a:	f1 e0       	ldi	r31, 0x01	; 1
     69c:	83 e0       	ldi	r24, 0x03	; 3
     69e:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     6a0:	05 80       	ldd	r0, Z+5	; 0x05
     6a2:	f6 81       	ldd	r31, Z+6	; 0x06
     6a4:	e0 2d       	mov	r30, r0
     6a6:	30 97       	sbiw	r30, 0x00	; 0
     6a8:	59 f0       	breq	.+22     	; 0x6c0 <__vector_19+0x86>
			SPI_0_desc.cb();
     6aa:	09 95       	icall
		}
	}
}
     6ac:	09 c0       	rjmp	.+18     	; 0x6c0 <__vector_19+0x86>

	if (SPI_0_desc.type != SPI_WRITE) {
		*SPI_0_desc.data = rdata;
	}

	SPI_0_desc.data++;
     6ae:	e3 e6       	ldi	r30, 0x63	; 99
     6b0:	f1 e0       	ldi	r31, 0x01	; 1
     6b2:	a1 81       	ldd	r26, Z+1	; 0x01
     6b4:	b2 81       	ldd	r27, Z+2	; 0x02
     6b6:	cd 01       	movw	r24, r26
     6b8:	01 96       	adiw	r24, 0x01	; 1
     6ba:	92 83       	std	Z+2, r25	; 0x02
     6bc:	81 83       	std	Z+1, r24	; 0x01
     6be:	df cf       	rjmp	.-66     	; 0x67e <__vector_19+0x44>
		SPI_0_desc.status = SPI_DONE;
		if (SPI_0_desc.cb != NULL) {
			SPI_0_desc.cb();
		}
	}
}
     6c0:	ff 91       	pop	r31
     6c2:	ef 91       	pop	r30
     6c4:	df 91       	pop	r29
     6c6:	cf 91       	pop	r28
     6c8:	bf 91       	pop	r27
     6ca:	af 91       	pop	r26
     6cc:	9f 91       	pop	r25
     6ce:	8f 91       	pop	r24
     6d0:	7f 91       	pop	r23
     6d2:	6f 91       	pop	r22
     6d4:	5f 91       	pop	r21
     6d6:	4f 91       	pop	r20
     6d8:	3f 91       	pop	r19
     6da:	2f 91       	pop	r18
     6dc:	0f 90       	pop	r0
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	0f 90       	pop	r0
     6e2:	1f 90       	pop	r1
     6e4:	18 95       	reti

000006e6 <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     6e6:	e4 e6       	ldi	r30, 0x64	; 100
     6e8:	f0 e0       	ldi	r31, 0x00	; 0
     6ea:	80 81       	ld	r24, Z
     6ec:	8f 7d       	andi	r24, 0xDF	; 223
     6ee:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     6f0:	82 e0       	ldi	r24, 0x02	; 2
     6f2:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     6f4:	95 e0       	ldi	r25, 0x05	; 5
     6f6:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     6f8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     6fc:	80 e0       	ldi	r24, 0x00	; 0
     6fe:	08 95       	ret

00000700 <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     700:	e4 e6       	ldi	r30, 0x64	; 100
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	80 81       	ld	r24, Z
     706:	8d 7f       	andi	r24, 0xFD	; 253
     708:	80 83       	st	Z, r24
     70a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     70e:	8c e0       	ldi	r24, 0x0C	; 12
     710:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     714:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     718:	88 e0       	ldi	r24, 0x08	; 8
     71a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	08 95       	ret

00000722 <USART_is_tx_ready>:
     722:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     726:	85 fb       	bst	r24, 5
     728:	88 27       	eor	r24, r24
     72a:	80 f9       	bld	r24, 0
     72c:	08 95       	ret

0000072e <USART_is_tx_busy>:
     72e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     732:	86 fb       	bst	r24, 6
     734:	88 27       	eor	r24, r24
     736:	80 f9       	bld	r24, 0
     738:	91 e0       	ldi	r25, 0x01	; 1
     73a:	89 27       	eor	r24, r25
     73c:	08 95       	ret

0000073e <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     73e:	e0 ec       	ldi	r30, 0xC0	; 192
     740:	f0 e0       	ldi	r31, 0x00	; 0
     742:	90 81       	ld	r25, Z
     744:	95 ff       	sbrs	r25, 5
     746:	fd cf       	rjmp	.-6      	; 0x742 <USART_write+0x4>
		;
	UDR0 = data;
     748:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     74c:	08 95       	ret

0000074e <check_for_aks_block>:
     74e:	cf 92       	push	r12
     750:	df 92       	push	r13
     752:	ff 92       	push	r15
     754:	0f 93       	push	r16
     756:	1f 93       	push	r17
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	ec 01       	movw	r28, r24
     75e:	ae 81       	ldd	r26, Y+6	; 0x06
     760:	bf 81       	ldd	r27, Y+7	; 0x07
     762:	eb 01       	movw	r28, r22
     764:	cc 0f       	add	r28, r28
     766:	dd 1f       	adc	r29, r29
     768:	c6 0f       	add	r28, r22
     76a:	d7 1f       	adc	r29, r23
     76c:	ca 0f       	add	r28, r26
     76e:	db 1f       	adc	r29, r27
     770:	fa 80       	ldd	r15, Y+2	; 0x02
     772:	fc 01       	movw	r30, r24
     774:	44 81       	ldd	r20, Z+4	; 0x04
     776:	55 81       	ldd	r21, Z+5	; 0x05
     778:	e6 e0       	ldi	r30, 0x06	; 6
     77a:	e6 9f       	mul	r30, r22
     77c:	90 01       	movw	r18, r0
     77e:	e7 9f       	mul	r30, r23
     780:	30 0d       	add	r19, r0
     782:	11 24       	eor	r1, r1
     784:	8a 01       	movw	r16, r20
     786:	02 0f       	add	r16, r18
     788:	13 1f       	adc	r17, r19
     78a:	f8 01       	movw	r30, r16
     78c:	22 81       	ldd	r18, Z+2	; 0x02
     78e:	33 81       	ldd	r19, Z+3	; 0x03
     790:	f9 01       	movw	r30, r18
     792:	21 81       	ldd	r18, Z+1	; 0x01
     794:	32 81       	ldd	r19, Z+2	; 0x02
     796:	f8 01       	movw	r30, r16
     798:	04 81       	ldd	r16, Z+4	; 0x04
     79a:	15 81       	ldd	r17, Z+5	; 0x05
     79c:	20 1b       	sub	r18, r16
     79e:	31 0b       	sbc	r19, r17
     7a0:	e8 81       	ld	r30, Y
     7a2:	2e 1b       	sub	r18, r30
     7a4:	31 09       	sbc	r19, r1
     7a6:	ec 01       	movw	r28, r24
     7a8:	ea 81       	ldd	r30, Y+2	; 0x02
     7aa:	fb 81       	ldd	r31, Y+3	; 0x03
     7ac:	00 81       	ld	r16, Z
     7ae:	11 81       	ldd	r17, Z+1	; 0x01
     7b0:	fa 01       	movw	r30, r20
     7b2:	40 e0       	ldi	r20, 0x00	; 0
     7b4:	50 e0       	ldi	r21, 0x00	; 0
     7b6:	40 17       	cp	r20, r16
     7b8:	51 07       	cpc	r21, r17
     7ba:	39 f1       	breq	.+78     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     7bc:	46 17       	cp	r20, r22
     7be:	57 07       	cpc	r21, r23
     7c0:	f9 f0       	breq	.+62     	; 0x800 <__DATA_REGION_LENGTH__>
     7c2:	12 96       	adiw	r26, 0x02	; 2
     7c4:	8c 91       	ld	r24, X
     7c6:	12 97       	sbiw	r26, 0x02	; 2
     7c8:	f8 12       	cpse	r15, r24
     7ca:	1a c0       	rjmp	.+52     	; 0x800 <__DATA_REGION_LENGTH__>
     7cc:	80 81       	ld	r24, Z
     7ce:	85 58       	subi	r24, 0x85	; 133
     7d0:	82 30       	cpi	r24, 0x02	; 2
     7d2:	e8 f0       	brcs	.+58     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     7d4:	c4 80       	ldd	r12, Z+4	; 0x04
     7d6:	d5 80       	ldd	r13, Z+5	; 0x05
     7d8:	82 81       	ldd	r24, Z+2	; 0x02
     7da:	93 81       	ldd	r25, Z+3	; 0x03
     7dc:	ec 01       	movw	r28, r24
     7de:	89 81       	ldd	r24, Y+1	; 0x01
     7e0:	9a 81       	ldd	r25, Y+2	; 0x02
     7e2:	c8 16       	cp	r12, r24
     7e4:	d9 06       	cpc	r13, r25
     7e6:	60 f4       	brcc	.+24     	; 0x800 <__DATA_REGION_LENGTH__>
     7e8:	8c 19       	sub	r24, r12
     7ea:	9d 09       	sbc	r25, r13
     7ec:	cc 91       	ld	r28, X
     7ee:	d0 e0       	ldi	r29, 0x00	; 0
     7f0:	c8 17       	cp	r28, r24
     7f2:	d9 07       	cpc	r29, r25
     7f4:	28 f4       	brcc	.+10     	; 0x800 <__DATA_REGION_LENGTH__>
     7f6:	8c 1b       	sub	r24, r28
     7f8:	9d 0b       	sbc	r25, r29
     7fa:	28 17       	cp	r18, r24
     7fc:	39 07       	cpc	r19, r25
     7fe:	38 f0       	brcs	.+14     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     800:	4f 5f       	subi	r20, 0xFF	; 255
     802:	5f 4f       	sbci	r21, 0xFF	; 255
     804:	13 96       	adiw	r26, 0x03	; 3
     806:	36 96       	adiw	r30, 0x06	; 6
     808:	d6 cf       	rjmp	.-84     	; 0x7b6 <check_for_aks_block+0x68>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	01 c0       	rjmp	.+2      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     80e:	81 e0       	ldi	r24, 0x01	; 1
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	1f 91       	pop	r17
     816:	0f 91       	pop	r16
     818:	ff 90       	pop	r15
     81a:	df 90       	pop	r13
     81c:	cf 90       	pop	r12
     81e:	08 95       	ret

00000820 <qtm_update_qtlib_timer>:
     820:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <qtm_local_ms_timecount>
     824:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <qtm_local_ms_timecount+0x1>
     828:	82 0f       	add	r24, r18
     82a:	93 1f       	adc	r25, r19
     82c:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <qtm_local_ms_timecount+0x1>
     830:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <qtm_local_ms_timecount>
     834:	08 95       	ret

00000836 <qtm_init_sensor_key>:
     836:	00 97       	sbiw	r24, 0x00	; 0
     838:	d9 f0       	breq	.+54     	; 0x870 <qtm_init_sensor_key+0x3a>
     83a:	41 15       	cp	r20, r1
     83c:	51 05       	cpc	r21, r1
     83e:	c1 f0       	breq	.+48     	; 0x870 <qtm_init_sensor_key+0x3a>
     840:	26 e0       	ldi	r18, 0x06	; 6
     842:	62 9f       	mul	r22, r18
     844:	b0 01       	movw	r22, r0
     846:	11 24       	eor	r1, r1
     848:	dc 01       	movw	r26, r24
     84a:	14 96       	adiw	r26, 0x04	; 4
     84c:	ed 91       	ld	r30, X+
     84e:	fc 91       	ld	r31, X
     850:	15 97       	sbiw	r26, 0x05	; 5
     852:	e6 0f       	add	r30, r22
     854:	f7 1f       	adc	r31, r23
     856:	21 e0       	ldi	r18, 0x01	; 1
     858:	20 83       	st	Z, r18
     85a:	14 96       	adiw	r26, 0x04	; 4
     85c:	8d 91       	ld	r24, X+
     85e:	9c 91       	ld	r25, X
     860:	15 97       	sbiw	r26, 0x05	; 5
     862:	fc 01       	movw	r30, r24
     864:	e6 0f       	add	r30, r22
     866:	f7 1f       	adc	r31, r23
     868:	53 83       	std	Z+3, r21	; 0x03
     86a:	42 83       	std	Z+2, r20	; 0x02
     86c:	80 e0       	ldi	r24, 0x00	; 0
     86e:	08 95       	ret
     870:	8b e0       	ldi	r24, 0x0B	; 11
     872:	08 95       	ret

00000874 <qtm_key_sensors_process>:
     874:	2f 92       	push	r2
     876:	3f 92       	push	r3
     878:	4f 92       	push	r4
     87a:	5f 92       	push	r5
     87c:	6f 92       	push	r6
     87e:	7f 92       	push	r7
     880:	8f 92       	push	r8
     882:	9f 92       	push	r9
     884:	af 92       	push	r10
     886:	bf 92       	push	r11
     888:	cf 92       	push	r12
     88a:	df 92       	push	r13
     88c:	ef 92       	push	r14
     88e:	ff 92       	push	r15
     890:	0f 93       	push	r16
     892:	1f 93       	push	r17
     894:	cf 93       	push	r28
     896:	df 93       	push	r29
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	09 f4       	brne	.+2      	; 0x89e <qtm_key_sensors_process+0x2a>
     89c:	7e c3       	rjmp	.+1788   	; 0xf9a <__stack+0x69b>
     89e:	ec 01       	movw	r28, r24
     8a0:	a1 2c       	mov	r10, r1
     8a2:	b1 2c       	mov	r11, r1
     8a4:	81 2c       	mov	r8, r1
     8a6:	91 2c       	mov	r9, r1
     8a8:	21 2c       	mov	r2, r1
     8aa:	d1 2c       	mov	r13, r1
     8ac:	55 24       	eor	r5, r5
     8ae:	53 94       	inc	r5
     8b0:	33 e0       	ldi	r19, 0x03	; 3
     8b2:	c3 2e       	mov	r12, r19
     8b4:	45 e8       	ldi	r20, 0x85	; 133
     8b6:	64 2e       	mov	r6, r20
     8b8:	56 e8       	ldi	r21, 0x86	; 134
     8ba:	75 2e       	mov	r7, r21
     8bc:	62 e0       	ldi	r22, 0x02	; 2
     8be:	36 2e       	mov	r3, r22
     8c0:	78 e0       	ldi	r23, 0x08	; 8
     8c2:	47 2e       	mov	r4, r23
     8c4:	ea 81       	ldd	r30, Y+2	; 0x02
     8c6:	fb 81       	ldd	r31, Y+3	; 0x03
     8c8:	80 81       	ld	r24, Z
     8ca:	91 81       	ldd	r25, Z+1	; 0x01
     8cc:	88 16       	cp	r8, r24
     8ce:	99 06       	cpc	r9, r25
     8d0:	08 f0       	brcs	.+2      	; 0x8d4 <qtm_key_sensors_process+0x60>
     8d2:	a6 c1       	rjmp	.+844    	; 0xc20 <__stack+0x321>
     8d4:	75 01       	movw	r14, r10
     8d6:	ee 0c       	add	r14, r14
     8d8:	ff 1c       	adc	r15, r15
     8da:	ec 81       	ldd	r30, Y+4	; 0x04
     8dc:	fd 81       	ldd	r31, Y+5	; 0x05
     8de:	ee 0d       	add	r30, r14
     8e0:	ff 1d       	adc	r31, r15
     8e2:	a2 81       	ldd	r26, Z+2	; 0x02
     8e4:	b3 81       	ldd	r27, Z+3	; 0x03
     8e6:	9c 91       	ld	r25, X
     8e8:	9e 71       	andi	r25, 0x1E	; 30
     8ea:	09 f0       	breq	.+2      	; 0x8ee <qtm_key_sensors_process+0x7a>
     8ec:	50 82       	st	Z, r5
     8ee:	0c 81       	ldd	r16, Y+4	; 0x04
     8f0:	1d 81       	ldd	r17, Y+5	; 0x05
     8f2:	0e 0d       	add	r16, r14
     8f4:	1f 1d       	adc	r17, r15
     8f6:	d8 01       	movw	r26, r16
     8f8:	8c 91       	ld	r24, X
     8fa:	84 30       	cpi	r24, 0x04	; 4
     8fc:	09 f4       	brne	.+2      	; 0x900 <__stack+0x1>
     8fe:	9e c0       	rjmp	.+316    	; 0xa3c <__stack+0x13d>
     900:	38 f4       	brcc	.+14     	; 0x910 <__stack+0x11>
     902:	82 30       	cpi	r24, 0x02	; 2
     904:	d1 f0       	breq	.+52     	; 0x93a <__stack+0x3b>
     906:	08 f0       	brcs	.+2      	; 0x90a <__stack+0xb>
     908:	45 c0       	rjmp	.+138    	; 0x994 <__stack+0x95>
     90a:	81 30       	cpi	r24, 0x01	; 1
     90c:	59 f0       	breq	.+22     	; 0x924 <__stack+0x25>
     90e:	81 c1       	rjmp	.+770    	; 0xc12 <__stack+0x313>
     910:	85 38       	cpi	r24, 0x85	; 133
     912:	09 f4       	brne	.+2      	; 0x916 <__stack+0x17>
     914:	bf c0       	rjmp	.+382    	; 0xa94 <__stack+0x195>
     916:	86 38       	cpi	r24, 0x86	; 134
     918:	09 f4       	brne	.+2      	; 0x91c <__stack+0x1d>
     91a:	f5 c0       	rjmp	.+490    	; 0xb06 <__stack+0x207>
     91c:	87 30       	cpi	r24, 0x07	; 7
     91e:	09 f0       	breq	.+2      	; 0x922 <__stack+0x23>
     920:	78 c1       	rjmp	.+752    	; 0xc12 <__stack+0x313>
     922:	36 c1       	rjmp	.+620    	; 0xb90 <__stack+0x291>
     924:	91 11       	cpse	r25, r1
     926:	67 c1       	rjmp	.+718    	; 0xbf6 <__stack+0x2f7>
     928:	f8 01       	movw	r30, r16
     92a:	30 82       	st	Z, r3
     92c:	8c 81       	ldd	r24, Y+4	; 0x04
     92e:	9d 81       	ldd	r25, Y+5	; 0x05
     930:	fc 01       	movw	r30, r24
     932:	ee 0d       	add	r30, r14
     934:	ff 1d       	adc	r31, r15
     936:	41 82       	std	Z+1, r4	; 0x01
     938:	5e c1       	rjmp	.+700    	; 0xbf6 <__stack+0x2f7>
     93a:	d8 01       	movw	r26, r16
     93c:	11 96       	adiw	r26, 0x01	; 1
     93e:	2c 91       	ld	r18, X
     940:	11 97       	sbiw	r26, 0x01	; 1
     942:	22 23       	and	r18, r18
     944:	29 f1       	breq	.+74     	; 0x990 <__stack+0x91>
     946:	12 96       	adiw	r26, 0x02	; 2
     948:	ed 91       	ld	r30, X+
     94a:	fc 91       	ld	r31, X
     94c:	13 97       	sbiw	r26, 0x03	; 3
     94e:	25 30       	cpi	r18, 0x05	; 5
     950:	18 f0       	brcs	.+6      	; 0x958 <__stack+0x59>
     952:	81 81       	ldd	r24, Z+1	; 0x01
     954:	92 81       	ldd	r25, Z+2	; 0x02
     956:	0e c0       	rjmp	.+28     	; 0x974 <__stack+0x75>
     958:	d8 01       	movw	r26, r16
     95a:	14 96       	adiw	r26, 0x04	; 4
     95c:	8d 91       	ld	r24, X+
     95e:	9c 91       	ld	r25, X
     960:	15 97       	sbiw	r26, 0x05	; 5
     962:	41 81       	ldd	r20, Z+1	; 0x01
     964:	52 81       	ldd	r21, Z+2	; 0x02
     966:	84 17       	cp	r24, r20
     968:	95 07       	cpc	r25, r21
     96a:	69 f0       	breq	.+26     	; 0x986 <__stack+0x87>
     96c:	48 17       	cp	r20, r24
     96e:	59 07       	cpc	r21, r25
     970:	30 f4       	brcc	.+12     	; 0x97e <__stack+0x7f>
     972:	01 97       	sbiw	r24, 0x01	; 1
     974:	15 96       	adiw	r26, 0x05	; 5
     976:	9c 93       	st	X, r25
     978:	8e 93       	st	-X, r24
     97a:	14 97       	sbiw	r26, 0x04	; 4
     97c:	04 c0       	rjmp	.+8      	; 0x986 <__stack+0x87>
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	f8 01       	movw	r30, r16
     982:	95 83       	std	Z+5, r25	; 0x05
     984:	84 83       	std	Z+4, r24	; 0x04
     986:	21 50       	subi	r18, 0x01	; 1
     988:	d8 01       	movw	r26, r16
     98a:	11 96       	adiw	r26, 0x01	; 1
     98c:	2c 93       	st	X, r18
     98e:	33 c1       	rjmp	.+614    	; 0xbf6 <__stack+0x2f7>
     990:	f8 01       	movw	r30, r16
     992:	2d c1       	rjmp	.+602    	; 0xbee <__stack+0x2ef>
     994:	d8 01       	movw	r26, r16
     996:	14 96       	adiw	r26, 0x04	; 4
     998:	2d 91       	ld	r18, X+
     99a:	3c 91       	ld	r19, X
     99c:	15 97       	sbiw	r26, 0x05	; 5
     99e:	12 96       	adiw	r26, 0x02	; 2
     9a0:	ed 91       	ld	r30, X+
     9a2:	fc 91       	ld	r31, X
     9a4:	13 97       	sbiw	r26, 0x03	; 3
     9a6:	41 81       	ldd	r20, Z+1	; 0x01
     9a8:	52 81       	ldd	r21, Z+2	; 0x02
     9aa:	24 17       	cp	r18, r20
     9ac:	35 07       	cpc	r19, r21
     9ae:	09 f4       	brne	.+2      	; 0x9b2 <__stack+0xb3>
     9b0:	30 c1       	rjmp	.+608    	; 0xc12 <__stack+0x313>
     9b2:	8e 81       	ldd	r24, Y+6	; 0x06
     9b4:	9f 81       	ldd	r25, Y+7	; 0x07
     9b6:	42 17       	cp	r20, r18
     9b8:	53 07       	cpc	r21, r19
     9ba:	f8 f4       	brcc	.+62     	; 0x9fa <__stack+0xfb>
     9bc:	ea 81       	ldd	r30, Y+2	; 0x02
     9be:	fb 81       	ldd	r31, Y+3	; 0x03
     9c0:	24 1b       	sub	r18, r20
     9c2:	35 0b       	sbc	r19, r21
     9c4:	dc 01       	movw	r26, r24
     9c6:	aa 0d       	add	r26, r10
     9c8:	bb 1d       	adc	r27, r11
     9ca:	8c 91       	ld	r24, X
     9cc:	90 e0       	ldi	r25, 0x00	; 0
     9ce:	05 80       	ldd	r0, Z+5	; 0x05
     9d0:	02 c0       	rjmp	.+4      	; 0x9d6 <__stack+0xd7>
     9d2:	95 95       	asr	r25
     9d4:	87 95       	ror	r24
     9d6:	0a 94       	dec	r0
     9d8:	e2 f7       	brpl	.-8      	; 0x9d2 <__stack+0xd3>
     9da:	99 27       	eor	r25, r25
     9dc:	28 17       	cp	r18, r24
     9de:	39 07       	cpc	r19, r25
     9e0:	08 f4       	brcc	.+2      	; 0x9e4 <__stack+0xe5>
     9e2:	17 c1       	rjmp	.+558    	; 0xc12 <__stack+0x313>
     9e4:	84 81       	ldd	r24, Z+4	; 0x04
     9e6:	88 23       	and	r24, r24
     9e8:	09 f4       	brne	.+2      	; 0x9ec <__stack+0xed>
     9ea:	13 c1       	rjmp	.+550    	; 0xc12 <__stack+0x313>
     9ec:	87 e0       	ldi	r24, 0x07	; 7
     9ee:	f8 01       	movw	r30, r16
     9f0:	80 83       	st	Z, r24
     9f2:	ea 81       	ldd	r30, Y+2	; 0x02
     9f4:	fb 81       	ldd	r31, Y+3	; 0x03
     9f6:	24 81       	ldd	r18, Z+4	; 0x04
     9f8:	1a c0       	rjmp	.+52     	; 0xa2e <__stack+0x12f>
     9fa:	fc 01       	movw	r30, r24
     9fc:	ea 0d       	add	r30, r10
     9fe:	fb 1d       	adc	r31, r11
     a00:	42 1b       	sub	r20, r18
     a02:	53 0b       	sbc	r21, r19
     a04:	80 81       	ld	r24, Z
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	48 17       	cp	r20, r24
     a0a:	59 07       	cpc	r21, r25
     a0c:	08 f4       	brcc	.+2      	; 0xa10 <__stack+0x111>
     a0e:	01 c1       	rjmp	.+514    	; 0xc12 <__stack+0x313>
     a10:	82 81       	ldd	r24, Z+2	; 0x02
     a12:	88 23       	and	r24, r24
     a14:	31 f0       	breq	.+12     	; 0xa22 <__stack+0x123>
     a16:	b4 01       	movw	r22, r8
     a18:	ce 01       	movw	r24, r28
     a1a:	0e 94 a7 03 	call	0x74e	; 0x74e <check_for_aks_block>
     a1e:	81 11       	cpse	r24, r1
     a20:	f8 c0       	rjmp	.+496    	; 0xc12 <__stack+0x313>
     a22:	e4 e0       	ldi	r30, 0x04	; 4
     a24:	d8 01       	movw	r26, r16
     a26:	ec 93       	st	X, r30
     a28:	ea 81       	ldd	r30, Y+2	; 0x02
     a2a:	fb 81       	ldd	r31, Y+3	; 0x03
     a2c:	22 81       	ldd	r18, Z+2	; 0x02
     a2e:	8c 81       	ldd	r24, Y+4	; 0x04
     a30:	9d 81       	ldd	r25, Y+5	; 0x05
     a32:	fc 01       	movw	r30, r24
     a34:	ee 0d       	add	r30, r14
     a36:	ff 1d       	adc	r31, r15
     a38:	21 83       	std	Z+1, r18	; 0x01
     a3a:	dd c0       	rjmp	.+442    	; 0xbf6 <__stack+0x2f7>
     a3c:	d8 01       	movw	r26, r16
     a3e:	14 96       	adiw	r26, 0x04	; 4
     a40:	2d 91       	ld	r18, X+
     a42:	3c 91       	ld	r19, X
     a44:	15 97       	sbiw	r26, 0x05	; 5
     a46:	12 96       	adiw	r26, 0x02	; 2
     a48:	ed 91       	ld	r30, X+
     a4a:	fc 91       	ld	r31, X
     a4c:	13 97       	sbiw	r26, 0x03	; 3
     a4e:	81 81       	ldd	r24, Z+1	; 0x01
     a50:	92 81       	ldd	r25, Z+2	; 0x02
     a52:	82 17       	cp	r24, r18
     a54:	93 07       	cpc	r25, r19
     a56:	08 f4       	brcc	.+2      	; 0xa5a <__stack+0x15b>
     a58:	bb c0       	rjmp	.+374    	; 0xbd0 <__stack+0x2d1>
     a5a:	ee 81       	ldd	r30, Y+6	; 0x06
     a5c:	ff 81       	ldd	r31, Y+7	; 0x07
     a5e:	ea 0d       	add	r30, r10
     a60:	fb 1d       	adc	r31, r11
     a62:	82 1b       	sub	r24, r18
     a64:	93 0b       	sbc	r25, r19
     a66:	20 81       	ld	r18, Z
     a68:	30 e0       	ldi	r19, 0x00	; 0
     a6a:	28 17       	cp	r18, r24
     a6c:	39 07       	cpc	r19, r25
     a6e:	08 f0       	brcs	.+2      	; 0xa72 <__stack+0x173>
     a70:	c5 c0       	rjmp	.+394    	; 0xbfc <__stack+0x2fd>
     a72:	82 81       	ldd	r24, Z+2	; 0x02
     a74:	88 23       	and	r24, r24
     a76:	31 f0       	breq	.+12     	; 0xa84 <__stack+0x185>
     a78:	b4 01       	movw	r22, r8
     a7a:	ce 01       	movw	r24, r28
     a7c:	0e 94 a7 03 	call	0x74e	; 0x74e <check_for_aks_block>
     a80:	81 11       	cpse	r24, r1
     a82:	c7 c0       	rjmp	.+398    	; 0xc12 <__stack+0x313>
     a84:	f8 01       	movw	r30, r16
     a86:	81 81       	ldd	r24, Z+1	; 0x01
     a88:	88 23       	and	r24, r24
     a8a:	09 f4       	brne	.+2      	; 0xa8e <__stack+0x18f>
     a8c:	6a c0       	rjmp	.+212    	; 0xb62 <__stack+0x263>
     a8e:	81 50       	subi	r24, 0x01	; 1
     a90:	81 83       	std	Z+1, r24	; 0x01
     a92:	b1 c0       	rjmp	.+354    	; 0xbf6 <__stack+0x2f7>
     a94:	e8 81       	ld	r30, Y
     a96:	f9 81       	ldd	r31, Y+1	; 0x01
     a98:	aa 81       	ldd	r26, Y+2	; 0x02
     a9a:	bb 81       	ldd	r27, Y+3	; 0x03
     a9c:	18 96       	adiw	r26, 0x08	; 8
     a9e:	8c 91       	ld	r24, X
     aa0:	83 83       	std	Z+3, r24	; 0x03
     aa2:	ec 81       	ldd	r30, Y+4	; 0x04
     aa4:	fd 81       	ldd	r31, Y+5	; 0x05
     aa6:	ee 0d       	add	r30, r14
     aa8:	ff 1d       	adc	r31, r15
     aaa:	44 81       	ldd	r20, Z+4	; 0x04
     aac:	55 81       	ldd	r21, Z+5	; 0x05
     aae:	a2 81       	ldd	r26, Z+2	; 0x02
     ab0:	b3 81       	ldd	r27, Z+3	; 0x03
     ab2:	11 96       	adiw	r26, 0x01	; 1
     ab4:	8d 91       	ld	r24, X+
     ab6:	9c 91       	ld	r25, X
     ab8:	12 97       	sbiw	r26, 0x02	; 2
     aba:	84 17       	cp	r24, r20
     abc:	95 07       	cpc	r25, r21
     abe:	c0 f0       	brcs	.+48     	; 0xaf0 <__stack+0x1f1>
     ac0:	ae 81       	ldd	r26, Y+6	; 0x06
     ac2:	bf 81       	ldd	r27, Y+7	; 0x07
     ac4:	aa 0d       	add	r26, r10
     ac6:	bb 1d       	adc	r27, r11
     ac8:	6c 91       	ld	r22, X
     aca:	26 2f       	mov	r18, r22
     acc:	30 e0       	ldi	r19, 0x00	; 0
     ace:	11 96       	adiw	r26, 0x01	; 1
     ad0:	7c 91       	ld	r23, X
     ad2:	7f 5f       	subi	r23, 0xFF	; 255
     ad4:	02 c0       	rjmp	.+4      	; 0xada <__stack+0x1db>
     ad6:	35 95       	asr	r19
     ad8:	27 95       	ror	r18
     ada:	7a 95       	dec	r23
     adc:	e2 f7       	brpl	.-8      	; 0xad6 <__stack+0x1d7>
     ade:	84 1b       	sub	r24, r20
     ae0:	95 0b       	sbc	r25, r21
     ae2:	62 1b       	sub	r22, r18
     ae4:	26 2f       	mov	r18, r22
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	08 f4       	brcc	.+2      	; 0xaf0 <__stack+0x1f1>
     aee:	8f c0       	rjmp	.+286    	; 0xc0e <__stack+0x30f>
     af0:	70 82       	st	Z, r7
     af2:	ea 81       	ldd	r30, Y+2	; 0x02
     af4:	fb 81       	ldd	r31, Y+3	; 0x03
     af6:	22 81       	ldd	r18, Z+2	; 0x02
     af8:	8c 81       	ldd	r24, Y+4	; 0x04
     afa:	9d 81       	ldd	r25, Y+5	; 0x05
     afc:	fc 01       	movw	r30, r24
     afe:	ee 0d       	add	r30, r14
     b00:	ff 1d       	adc	r31, r15
     b02:	21 83       	std	Z+1, r18	; 0x01
     b04:	42 c0       	rjmp	.+132    	; 0xb8a <__stack+0x28b>
     b06:	d8 01       	movw	r26, r16
     b08:	14 96       	adiw	r26, 0x04	; 4
     b0a:	6d 91       	ld	r22, X+
     b0c:	7c 91       	ld	r23, X
     b0e:	15 97       	sbiw	r26, 0x05	; 5
     b10:	12 96       	adiw	r26, 0x02	; 2
     b12:	ed 91       	ld	r30, X+
     b14:	fc 91       	ld	r31, X
     b16:	13 97       	sbiw	r26, 0x03	; 3
     b18:	21 81       	ldd	r18, Z+1	; 0x01
     b1a:	32 81       	ldd	r19, Z+2	; 0x02
     b1c:	26 17       	cp	r18, r22
     b1e:	37 07       	cpc	r19, r23
     b20:	58 f4       	brcc	.+22     	; 0xb38 <__stack+0x239>
     b22:	11 96       	adiw	r26, 0x01	; 1
     b24:	8c 91       	ld	r24, X
     b26:	11 97       	sbiw	r26, 0x01	; 1
     b28:	81 11       	cpse	r24, r1
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__stack+0x231>
     b2c:	cc 92       	st	X, r12
     b2e:	6f c0       	rjmp	.+222    	; 0xc0e <__stack+0x30f>
     b30:	81 50       	subi	r24, 0x01	; 1
     b32:	f8 01       	movw	r30, r16
     b34:	81 83       	std	Z+1, r24	; 0x01
     b36:	6b c0       	rjmp	.+214    	; 0xc0e <__stack+0x30f>
     b38:	ee 81       	ldd	r30, Y+6	; 0x06
     b3a:	ff 81       	ldd	r31, Y+7	; 0x07
     b3c:	ea 0d       	add	r30, r10
     b3e:	fb 1d       	adc	r31, r11
     b40:	80 81       	ld	r24, Z
     b42:	48 2f       	mov	r20, r24
     b44:	50 e0       	ldi	r21, 0x00	; 0
     b46:	91 81       	ldd	r25, Z+1	; 0x01
     b48:	9f 5f       	subi	r25, 0xFF	; 255
     b4a:	02 c0       	rjmp	.+4      	; 0xb50 <__stack+0x251>
     b4c:	55 95       	asr	r21
     b4e:	47 95       	ror	r20
     b50:	9a 95       	dec	r25
     b52:	e2 f7       	brpl	.-8      	; 0xb4c <__stack+0x24d>
     b54:	26 1b       	sub	r18, r22
     b56:	37 0b       	sbc	r19, r23
     b58:	84 1b       	sub	r24, r20
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	82 17       	cp	r24, r18
     b5e:	93 07       	cpc	r25, r19
     b60:	60 f4       	brcc	.+24     	; 0xb7a <__stack+0x27b>
     b62:	d8 01       	movw	r26, r16
     b64:	6c 92       	st	X, r6
     b66:	ea 81       	ldd	r30, Y+2	; 0x02
     b68:	fb 81       	ldd	r31, Y+3	; 0x03
     b6a:	23 81       	ldd	r18, Z+3	; 0x03
     b6c:	8c 81       	ldd	r24, Y+4	; 0x04
     b6e:	9d 81       	ldd	r25, Y+5	; 0x05
     b70:	fc 01       	movw	r30, r24
     b72:	ee 0d       	add	r30, r14
     b74:	ff 1d       	adc	r31, r15
     b76:	21 83       	std	Z+1, r18	; 0x01
     b78:	4a c0       	rjmp	.+148    	; 0xc0e <__stack+0x30f>
     b7a:	f8 01       	movw	r30, r16
     b7c:	81 81       	ldd	r24, Z+1	; 0x01
     b7e:	81 11       	cpse	r24, r1
     b80:	02 c0       	rjmp	.+4      	; 0xb86 <__stack+0x287>
     b82:	c0 82       	st	Z, r12
     b84:	44 c0       	rjmp	.+136    	; 0xc0e <__stack+0x30f>
     b86:	81 50       	subi	r24, 0x01	; 1
     b88:	81 83       	std	Z+1, r24	; 0x01
     b8a:	22 24       	eor	r2, r2
     b8c:	23 94       	inc	r2
     b8e:	33 c0       	rjmp	.+102    	; 0xbf6 <__stack+0x2f7>
     b90:	f8 01       	movw	r30, r16
     b92:	24 81       	ldd	r18, Z+4	; 0x04
     b94:	35 81       	ldd	r19, Z+5	; 0x05
     b96:	02 80       	ldd	r0, Z+2	; 0x02
     b98:	f3 81       	ldd	r31, Z+3	; 0x03
     b9a:	e0 2d       	mov	r30, r0
     b9c:	81 81       	ldd	r24, Z+1	; 0x01
     b9e:	92 81       	ldd	r25, Z+2	; 0x02
     ba0:	82 17       	cp	r24, r18
     ba2:	93 07       	cpc	r25, r19
     ba4:	58 f5       	brcc	.+86     	; 0xbfc <__stack+0x2fd>
     ba6:	28 1b       	sub	r18, r24
     ba8:	39 0b       	sbc	r19, r25
     baa:	ee 81       	ldd	r30, Y+6	; 0x06
     bac:	ff 81       	ldd	r31, Y+7	; 0x07
     bae:	ea 0d       	add	r30, r10
     bb0:	fb 1d       	adc	r31, r11
     bb2:	80 81       	ld	r24, Z
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	ea 81       	ldd	r30, Y+2	; 0x02
     bb8:	fb 81       	ldd	r31, Y+3	; 0x03
     bba:	05 80       	ldd	r0, Z+5	; 0x05
     bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <__stack+0x2c3>
     bbe:	95 95       	asr	r25
     bc0:	87 95       	ror	r24
     bc2:	0a 94       	dec	r0
     bc4:	e2 f7       	brpl	.-8      	; 0xbbe <__stack+0x2bf>
     bc6:	99 27       	eor	r25, r25
     bc8:	28 17       	cp	r18, r24
     bca:	39 07       	cpc	r19, r25
     bcc:	18 f4       	brcc	.+6      	; 0xbd4 <__stack+0x2d5>
     bce:	d8 01       	movw	r26, r16
     bd0:	cc 92       	st	X, r12
     bd2:	16 c0       	rjmp	.+44     	; 0xc00 <__stack+0x301>
     bd4:	f8 01       	movw	r30, r16
     bd6:	81 81       	ldd	r24, Z+1	; 0x01
     bd8:	81 11       	cpse	r24, r1
     bda:	0b c0       	rjmp	.+22     	; 0xbf2 <__stack+0x2f3>
     bdc:	50 82       	st	Z, r5
     bde:	8c 81       	ldd	r24, Y+4	; 0x04
     be0:	9d 81       	ldd	r25, Y+5	; 0x05
     be2:	fc 01       	movw	r30, r24
     be4:	ee 0d       	add	r30, r14
     be6:	ff 1d       	adc	r31, r15
     be8:	02 80       	ldd	r0, Z+2	; 0x02
     bea:	f3 81       	ldd	r31, Z+3	; 0x03
     bec:	e0 2d       	mov	r30, r0
     bee:	c0 82       	st	Z, r12
     bf0:	10 c0       	rjmp	.+32     	; 0xc12 <__stack+0x313>
     bf2:	81 50       	subi	r24, 0x01	; 1
     bf4:	81 83       	std	Z+1, r24	; 0x01
     bf6:	dd 24       	eor	r13, r13
     bf8:	d3 94       	inc	r13
     bfa:	0b c0       	rjmp	.+22     	; 0xc12 <__stack+0x313>
     bfc:	f8 01       	movw	r30, r16
     bfe:	c0 82       	st	Z, r12
     c00:	8c 81       	ldd	r24, Y+4	; 0x04
     c02:	9d 81       	ldd	r25, Y+5	; 0x05
     c04:	fc 01       	movw	r30, r24
     c06:	ee 0d       	add	r30, r14
     c08:	ff 1d       	adc	r31, r15
     c0a:	11 82       	std	Z+1, r1	; 0x01
     c0c:	02 c0       	rjmp	.+4      	; 0xc12 <__stack+0x313>
     c0e:	22 24       	eor	r2, r2
     c10:	23 94       	inc	r2
     c12:	ff ef       	ldi	r31, 0xFF	; 255
     c14:	8f 1a       	sub	r8, r31
     c16:	9f 0a       	sbc	r9, r31
     c18:	83 e0       	ldi	r24, 0x03	; 3
     c1a:	a8 0e       	add	r10, r24
     c1c:	b1 1c       	adc	r11, r1
     c1e:	52 ce       	rjmp	.-860    	; 0x8c4 <qtm_key_sensors_process+0x50>
     c20:	e8 81       	ld	r30, Y
     c22:	f9 81       	ldd	r31, Y+1	; 0x01
     c24:	80 81       	ld	r24, Z
     c26:	87 ff       	sbrs	r24, 7
     c28:	23 c0       	rjmp	.+70     	; 0xc70 <__stack+0x371>
     c2a:	40 e0       	ldi	r20, 0x00	; 0
     c2c:	50 e0       	ldi	r21, 0x00	; 0
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	ea 81       	ldd	r30, Y+2	; 0x02
     c34:	fb 81       	ldd	r31, Y+3	; 0x03
     c36:	80 81       	ld	r24, Z
     c38:	91 81       	ldd	r25, Z+1	; 0x01
     c3a:	28 17       	cp	r18, r24
     c3c:	39 07       	cpc	r19, r25
     c3e:	98 f4       	brcc	.+38     	; 0xc66 <__stack+0x367>
     c40:	ec 81       	ldd	r30, Y+4	; 0x04
     c42:	fd 81       	ldd	r31, Y+5	; 0x05
     c44:	e4 0f       	add	r30, r20
     c46:	f5 1f       	adc	r31, r21
     c48:	a2 81       	ldd	r26, Z+2	; 0x02
     c4a:	b3 81       	ldd	r27, Z+3	; 0x03
     c4c:	8c 91       	ld	r24, X
     c4e:	80 fd       	sbrc	r24, 0
     c50:	05 c0       	rjmp	.+10     	; 0xc5c <__stack+0x35d>
     c52:	90 81       	ld	r25, Z
     c54:	97 7f       	andi	r25, 0xF7	; 247
     c56:	11 f0       	breq	.+4      	; 0xc5c <__stack+0x35d>
     c58:	81 60       	ori	r24, 0x01	; 1
     c5a:	8c 93       	st	X, r24
     c5c:	2f 5f       	subi	r18, 0xFF	; 255
     c5e:	3f 4f       	sbci	r19, 0xFF	; 255
     c60:	4a 5f       	subi	r20, 0xFA	; 250
     c62:	5f 4f       	sbci	r21, 0xFF	; 255
     c64:	e6 cf       	rjmp	.-52     	; 0xc32 <__stack+0x333>
     c66:	e8 81       	ld	r30, Y
     c68:	f9 81       	ldd	r31, Y+1	; 0x01
     c6a:	80 81       	ld	r24, Z
     c6c:	8f 77       	andi	r24, 0x7F	; 127
     c6e:	80 83       	st	Z, r24
     c70:	d1 10       	cpse	r13, r1
     c72:	07 c0       	rjmp	.+14     	; 0xc82 <__stack+0x383>
     c74:	e8 81       	ld	r30, Y
     c76:	f9 81       	ldd	r31, Y+1	; 0x01
     c78:	21 10       	cpse	r2, r1
     c7a:	6f c0       	rjmp	.+222    	; 0xd5a <__stack+0x45b>
     c7c:	80 81       	ld	r24, Z
     c7e:	8e 7f       	andi	r24, 0xFE	; 254
     c80:	6e c0       	rjmp	.+220    	; 0xd5e <__stack+0x45f>
     c82:	ea 81       	ldd	r30, Y+2	; 0x02
     c84:	fb 81       	ldd	r31, Y+3	; 0x03
     c86:	81 85       	ldd	r24, Z+9	; 0x09
     c88:	88 23       	and	r24, r24
     c8a:	a1 f3       	breq	.-24     	; 0xc74 <__stack+0x375>
     c8c:	e8 81       	ld	r30, Y
     c8e:	f9 81       	ldd	r31, Y+1	; 0x01
     c90:	80 81       	ld	r24, Z
     c92:	80 68       	ori	r24, 0x80	; 128
     c94:	80 83       	st	Z, r24
     c96:	ea 81       	ldd	r30, Y+2	; 0x02
     c98:	fb 81       	ldd	r31, Y+3	; 0x03
     c9a:	81 85       	ldd	r24, Z+9	; 0x09
     c9c:	81 30       	cpi	r24, 0x01	; 1
     c9e:	51 f7       	brne	.-44     	; 0xc74 <__stack+0x375>
     ca0:	40 e0       	ldi	r20, 0x00	; 0
     ca2:	50 e0       	ldi	r21, 0x00	; 0
     ca4:	20 e0       	ldi	r18, 0x00	; 0
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	96 e0       	ldi	r25, 0x06	; 6
     caa:	d9 2e       	mov	r13, r25
     cac:	ea 81       	ldd	r30, Y+2	; 0x02
     cae:	fb 81       	ldd	r31, Y+3	; 0x03
     cb0:	60 81       	ld	r22, Z
     cb2:	71 81       	ldd	r23, Z+1	; 0x01
     cb4:	26 17       	cp	r18, r22
     cb6:	37 07       	cpc	r19, r23
     cb8:	e8 f6       	brcc	.-70     	; 0xc74 <__stack+0x375>
     cba:	0c 81       	ldd	r16, Y+4	; 0x04
     cbc:	1d 81       	ldd	r17, Y+5	; 0x05
     cbe:	fa 01       	movw	r30, r20
     cc0:	ee 0f       	add	r30, r30
     cc2:	ff 1f       	adc	r31, r31
     cc4:	e0 0f       	add	r30, r16
     cc6:	f1 1f       	adc	r31, r17
     cc8:	80 81       	ld	r24, Z
     cca:	98 2f       	mov	r25, r24
     ccc:	97 7f       	andi	r25, 0xF7	; 247
     cce:	a1 f1       	breq	.+104    	; 0xd38 <__stack+0x439>
     cd0:	85 38       	cpi	r24, 0x85	; 133
     cd2:	11 f0       	breq	.+4      	; 0xcd8 <__stack+0x3d9>
     cd4:	83 30       	cpi	r24, 0x03	; 3
     cd6:	b1 f5       	brne	.+108    	; 0xd44 <__stack+0x445>
     cd8:	ee 80       	ldd	r14, Y+6	; 0x06
     cda:	ff 80       	ldd	r15, Y+7	; 0x07
     cdc:	d7 01       	movw	r26, r14
     cde:	a4 0f       	add	r26, r20
     ce0:	b5 1f       	adc	r27, r21
     ce2:	12 96       	adiw	r26, 0x02	; 2
     ce4:	bc 90       	ld	r11, X
     ce6:	bb 20       	and	r11, r11
     ce8:	39 f1       	breq	.+78     	; 0xd38 <__stack+0x439>
     cea:	80 e0       	ldi	r24, 0x00	; 0
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	c1 2c       	mov	r12, r1
     cf0:	86 17       	cp	r24, r22
     cf2:	97 07       	cpc	r25, r23
     cf4:	f8 f4       	brcc	.+62     	; 0xd34 <__stack+0x435>
     cf6:	28 17       	cp	r18, r24
     cf8:	39 07       	cpc	r19, r25
     cfa:	d1 f0       	breq	.+52     	; 0xd30 <__stack+0x431>
     cfc:	d8 9e       	mul	r13, r24
     cfe:	d0 01       	movw	r26, r0
     d00:	d9 9e       	mul	r13, r25
     d02:	b0 0d       	add	r27, r0
     d04:	11 24       	eor	r1, r1
     d06:	a0 0f       	add	r26, r16
     d08:	b1 1f       	adc	r27, r17
     d0a:	ac 91       	ld	r26, X
     d0c:	a4 30       	cpi	r26, 0x04	; 4
     d0e:	11 f0       	breq	.+4      	; 0xd14 <__stack+0x415>
     d10:	a6 38       	cpi	r26, 0x86	; 134
     d12:	71 f4       	brne	.+28     	; 0xd30 <__stack+0x431>
     d14:	dc 01       	movw	r26, r24
     d16:	aa 0f       	add	r26, r26
     d18:	bb 1f       	adc	r27, r27
     d1a:	a8 0f       	add	r26, r24
     d1c:	b9 1f       	adc	r27, r25
     d1e:	ae 0d       	add	r26, r14
     d20:	bf 1d       	adc	r27, r15
     d22:	12 96       	adiw	r26, 0x02	; 2
     d24:	ac 91       	ld	r26, X
     d26:	ba 12       	cpse	r11, r26
     d28:	03 c0       	rjmp	.+6      	; 0xd30 <__stack+0x431>
     d2a:	cb 01       	movw	r24, r22
     d2c:	cc 24       	eor	r12, r12
     d2e:	c3 94       	inc	r12
     d30:	01 96       	adiw	r24, 0x01	; 1
     d32:	de cf       	rjmp	.-68     	; 0xcf0 <__stack+0x3f1>
     d34:	c1 10       	cpse	r12, r1
     d36:	06 c0       	rjmp	.+12     	; 0xd44 <__stack+0x445>
     d38:	02 80       	ldd	r0, Z+2	; 0x02
     d3a:	f3 81       	ldd	r31, Z+3	; 0x03
     d3c:	e0 2d       	mov	r30, r0
     d3e:	80 81       	ld	r24, Z
     d40:	8e 7f       	andi	r24, 0xFE	; 254
     d42:	05 c0       	rjmp	.+10     	; 0xd4e <__stack+0x44f>
     d44:	02 80       	ldd	r0, Z+2	; 0x02
     d46:	f3 81       	ldd	r31, Z+3	; 0x03
     d48:	e0 2d       	mov	r30, r0
     d4a:	80 81       	ld	r24, Z
     d4c:	81 60       	ori	r24, 0x01	; 1
     d4e:	80 83       	st	Z, r24
     d50:	2f 5f       	subi	r18, 0xFF	; 255
     d52:	3f 4f       	sbci	r19, 0xFF	; 255
     d54:	4d 5f       	subi	r20, 0xFD	; 253
     d56:	5f 4f       	sbci	r21, 0xFF	; 255
     d58:	a9 cf       	rjmp	.-174    	; 0xcac <__stack+0x3ad>
     d5a:	80 81       	ld	r24, Z
     d5c:	81 60       	ori	r24, 0x01	; 1
     d5e:	80 83       	st	Z, r24
     d60:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <qtm_local_ms_timecount>
     d64:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <qtm_local_ms_timecount+0x1>
     d68:	e8 81       	ld	r30, Y
     d6a:	f9 81       	ldd	r31, Y+1	; 0x01
     d6c:	21 81       	ldd	r18, Z+1	; 0x01
     d6e:	32 81       	ldd	r19, Z+2	; 0x02
     d70:	a9 01       	movw	r20, r18
     d72:	48 53       	subi	r20, 0x38	; 56
     d74:	5f 4f       	sbci	r21, 0xFF	; 255
     d76:	48 17       	cp	r20, r24
     d78:	59 07       	cpc	r21, r25
     d7a:	38 f4       	brcc	.+14     	; 0xd8a <__stack+0x48b>
     d7c:	82 1b       	sub	r24, r18
     d7e:	93 0b       	sbc	r25, r19
     d80:	aa 24       	eor	r10, r10
     d82:	a3 94       	inc	r10
     d84:	a3 e0       	ldi	r26, 0x03	; 3
     d86:	ba 2e       	mov	r11, r26
     d88:	44 c0       	rjmp	.+136    	; 0xe12 <__stack+0x513>
     d8a:	82 17       	cp	r24, r18
     d8c:	93 07       	cpc	r25, r19
     d8e:	10 f0       	brcs	.+4      	; 0xd94 <__stack+0x495>
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	04 c1       	rjmp	.+520    	; 0xf9c <__stack+0x69d>
     d94:	82 1b       	sub	r24, r18
     d96:	93 0b       	sbc	r25, r19
     d98:	01 97       	sbiw	r24, 0x01	; 1
     d9a:	89 3c       	cpi	r24, 0xC9	; 201
     d9c:	91 05       	cpc	r25, r1
     d9e:	c0 f3       	brcs	.-16     	; 0xd90 <__stack+0x491>
     da0:	ef cf       	rjmp	.-34     	; 0xd80 <__stack+0x481>
     da2:	88 5c       	subi	r24, 0xC8	; 200
     da4:	91 09       	sbc	r25, r1
     da6:	e8 81       	ld	r30, Y
     da8:	f9 81       	ldd	r31, Y+1	; 0x01
     daa:	21 81       	ldd	r18, Z+1	; 0x01
     dac:	32 81       	ldd	r19, Z+2	; 0x02
     dae:	28 53       	subi	r18, 0x38	; 56
     db0:	3f 4f       	sbci	r19, 0xFF	; 255
     db2:	32 83       	std	Z+2, r19	; 0x02
     db4:	21 83       	std	Z+1, r18	; 0x01
     db6:	23 81       	ldd	r18, Z+3	; 0x03
     db8:	21 11       	cpse	r18, r1
     dba:	96 c0       	rjmp	.+300    	; 0xee8 <__stack+0x5e9>
     dbc:	24 81       	ldd	r18, Z+4	; 0x04
     dbe:	22 23       	and	r18, r18
     dc0:	11 f0       	breq	.+4      	; 0xdc6 <__stack+0x4c7>
     dc2:	21 50       	subi	r18, 0x01	; 1
     dc4:	24 83       	std	Z+4, r18	; 0x04
     dc6:	e8 81       	ld	r30, Y
     dc8:	f9 81       	ldd	r31, Y+1	; 0x01
     dca:	25 81       	ldd	r18, Z+5	; 0x05
     dcc:	22 23       	and	r18, r18
     dce:	11 f0       	breq	.+4      	; 0xdd4 <__stack+0x4d5>
     dd0:	21 50       	subi	r18, 0x01	; 1
     dd2:	25 83       	std	Z+5, r18	; 0x05
     dd4:	8a 80       	ldd	r8, Y+2	; 0x02
     dd6:	9b 80       	ldd	r9, Y+3	; 0x03
     dd8:	d4 01       	movw	r26, r8
     dda:	16 96       	adiw	r26, 0x06	; 6
     ddc:	2c 91       	ld	r18, X
     dde:	16 97       	sbiw	r26, 0x06	; 6
     de0:	21 11       	cpse	r18, r1
     de2:	1b c0       	rjmp	.+54     	; 0xe1a <__stack+0x51b>
     de4:	8a 80       	ldd	r8, Y+2	; 0x02
     de6:	9b 80       	ldd	r9, Y+3	; 0x03
     de8:	f4 01       	movw	r30, r8
     dea:	27 81       	ldd	r18, Z+7	; 0x07
     dec:	21 11       	cpse	r18, r1
     dee:	48 c0       	rjmp	.+144    	; 0xe80 <__stack+0x581>
     df0:	ea 81       	ldd	r30, Y+2	; 0x02
     df2:	fb 81       	ldd	r31, Y+3	; 0x03
     df4:	23 81       	ldd	r18, Z+3	; 0x03
     df6:	22 23       	and	r18, r18
     df8:	61 f0       	breq	.+24     	; 0xe12 <__stack+0x513>
     dfa:	20 e0       	ldi	r18, 0x00	; 0
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	a0 e0       	ldi	r26, 0x00	; 0
     e00:	b0 e0       	ldi	r27, 0x00	; 0
     e02:	ea 81       	ldd	r30, Y+2	; 0x02
     e04:	fb 81       	ldd	r31, Y+3	; 0x03
     e06:	40 81       	ld	r20, Z
     e08:	51 81       	ldd	r21, Z+1	; 0x01
     e0a:	a4 17       	cp	r26, r20
     e0c:	b5 07       	cpc	r27, r21
     e0e:	08 f4       	brcc	.+2      	; 0xe12 <__stack+0x513>
     e10:	6e c0       	rjmp	.+220    	; 0xeee <__stack+0x5ef>
     e12:	89 3c       	cpi	r24, 0xC9	; 201
     e14:	91 05       	cpc	r25, r1
     e16:	28 f6       	brcc	.-118    	; 0xda2 <__stack+0x4a3>
     e18:	bb cf       	rjmp	.-138    	; 0xd90 <__stack+0x491>
     e1a:	08 81       	ld	r16, Y
     e1c:	19 81       	ldd	r17, Y+1	; 0x01
     e1e:	f8 01       	movw	r30, r16
     e20:	24 81       	ldd	r18, Z+4	; 0x04
     e22:	21 11       	cpse	r18, r1
     e24:	df cf       	rjmp	.-66     	; 0xde4 <__stack+0x4e5>
     e26:	ed 90       	ld	r14, X+
     e28:	fc 90       	ld	r15, X
     e2a:	60 e0       	ldi	r22, 0x00	; 0
     e2c:	70 e0       	ldi	r23, 0x00	; 0
     e2e:	40 e0       	ldi	r20, 0x00	; 0
     e30:	50 e0       	ldi	r21, 0x00	; 0
     e32:	4e 15       	cp	r20, r14
     e34:	5f 05       	cpc	r21, r15
     e36:	f1 f0       	breq	.+60     	; 0xe74 <__stack+0x575>
     e38:	ec 81       	ldd	r30, Y+4	; 0x04
     e3a:	fd 81       	ldd	r31, Y+5	; 0x05
     e3c:	e6 0f       	add	r30, r22
     e3e:	f7 1f       	adc	r31, r23
     e40:	20 81       	ld	r18, Z
     e42:	23 30       	cpi	r18, 0x03	; 3
     e44:	11 f0       	breq	.+4      	; 0xe4a <__stack+0x54b>
     e46:	28 30       	cpi	r18, 0x08	; 8
     e48:	81 f4       	brne	.+32     	; 0xe6a <__stack+0x56b>
     e4a:	24 81       	ldd	r18, Z+4	; 0x04
     e4c:	35 81       	ldd	r19, Z+5	; 0x05
     e4e:	c2 80       	ldd	r12, Z+2	; 0x02
     e50:	d3 80       	ldd	r13, Z+3	; 0x03
     e52:	d6 01       	movw	r26, r12
     e54:	11 96       	adiw	r26, 0x01	; 1
     e56:	cd 90       	ld	r12, X+
     e58:	dc 90       	ld	r13, X
     e5a:	12 97       	sbiw	r26, 0x02	; 2
     e5c:	2c 15       	cp	r18, r12
     e5e:	3d 05       	cpc	r19, r13
     e60:	20 f4       	brcc	.+8      	; 0xe6a <__stack+0x56b>
     e62:	2f 5f       	subi	r18, 0xFF	; 255
     e64:	3f 4f       	sbci	r19, 0xFF	; 255
     e66:	35 83       	std	Z+5, r19	; 0x05
     e68:	24 83       	std	Z+4, r18	; 0x04
     e6a:	4f 5f       	subi	r20, 0xFF	; 255
     e6c:	5f 4f       	sbci	r21, 0xFF	; 255
     e6e:	6a 5f       	subi	r22, 0xFA	; 250
     e70:	7f 4f       	sbci	r23, 0xFF	; 255
     e72:	df cf       	rjmp	.-66     	; 0xe32 <__stack+0x533>
     e74:	f4 01       	movw	r30, r8
     e76:	26 81       	ldd	r18, Z+6	; 0x06
     e78:	d8 01       	movw	r26, r16
     e7a:	14 96       	adiw	r26, 0x04	; 4
     e7c:	2c 93       	st	X, r18
     e7e:	b2 cf       	rjmp	.-156    	; 0xde4 <__stack+0x4e5>
     e80:	08 81       	ld	r16, Y
     e82:	19 81       	ldd	r17, Y+1	; 0x01
     e84:	d8 01       	movw	r26, r16
     e86:	15 96       	adiw	r26, 0x05	; 5
     e88:	2c 91       	ld	r18, X
     e8a:	21 11       	cpse	r18, r1
     e8c:	b1 cf       	rjmp	.-158    	; 0xdf0 <__stack+0x4f1>
     e8e:	e0 80       	ld	r14, Z
     e90:	f1 80       	ldd	r15, Z+1	; 0x01
     e92:	60 e0       	ldi	r22, 0x00	; 0
     e94:	70 e0       	ldi	r23, 0x00	; 0
     e96:	40 e0       	ldi	r20, 0x00	; 0
     e98:	50 e0       	ldi	r21, 0x00	; 0
     e9a:	4e 15       	cp	r20, r14
     e9c:	5f 05       	cpc	r21, r15
     e9e:	f1 f0       	breq	.+60     	; 0xedc <__stack+0x5dd>
     ea0:	ec 81       	ldd	r30, Y+4	; 0x04
     ea2:	fd 81       	ldd	r31, Y+5	; 0x05
     ea4:	e6 0f       	add	r30, r22
     ea6:	f7 1f       	adc	r31, r23
     ea8:	20 81       	ld	r18, Z
     eaa:	23 30       	cpi	r18, 0x03	; 3
     eac:	11 f0       	breq	.+4      	; 0xeb2 <__stack+0x5b3>
     eae:	28 30       	cpi	r18, 0x08	; 8
     eb0:	81 f4       	brne	.+32     	; 0xed2 <__stack+0x5d3>
     eb2:	24 81       	ldd	r18, Z+4	; 0x04
     eb4:	35 81       	ldd	r19, Z+5	; 0x05
     eb6:	c2 80       	ldd	r12, Z+2	; 0x02
     eb8:	d3 80       	ldd	r13, Z+3	; 0x03
     eba:	d6 01       	movw	r26, r12
     ebc:	11 96       	adiw	r26, 0x01	; 1
     ebe:	cd 90       	ld	r12, X+
     ec0:	dc 90       	ld	r13, X
     ec2:	12 97       	sbiw	r26, 0x02	; 2
     ec4:	c2 16       	cp	r12, r18
     ec6:	d3 06       	cpc	r13, r19
     ec8:	20 f4       	brcc	.+8      	; 0xed2 <__stack+0x5d3>
     eca:	21 50       	subi	r18, 0x01	; 1
     ecc:	31 09       	sbc	r19, r1
     ece:	35 83       	std	Z+5, r19	; 0x05
     ed0:	24 83       	std	Z+4, r18	; 0x04
     ed2:	4f 5f       	subi	r20, 0xFF	; 255
     ed4:	5f 4f       	sbci	r21, 0xFF	; 255
     ed6:	6a 5f       	subi	r22, 0xFA	; 250
     ed8:	7f 4f       	sbci	r23, 0xFF	; 255
     eda:	df cf       	rjmp	.-66     	; 0xe9a <__stack+0x59b>
     edc:	f4 01       	movw	r30, r8
     ede:	27 81       	ldd	r18, Z+7	; 0x07
     ee0:	d8 01       	movw	r26, r16
     ee2:	15 96       	adiw	r26, 0x05	; 5
     ee4:	2c 93       	st	X, r18
     ee6:	84 cf       	rjmp	.-248    	; 0xdf0 <__stack+0x4f1>
     ee8:	21 50       	subi	r18, 0x01	; 1
     eea:	23 83       	std	Z+3, r18	; 0x03
     eec:	81 cf       	rjmp	.-254    	; 0xdf0 <__stack+0x4f1>
     eee:	a9 01       	movw	r20, r18
     ef0:	44 0f       	add	r20, r20
     ef2:	55 1f       	adc	r21, r21
     ef4:	ec 81       	ldd	r30, Y+4	; 0x04
     ef6:	fd 81       	ldd	r31, Y+5	; 0x05
     ef8:	e4 0f       	add	r30, r20
     efa:	f5 1f       	adc	r31, r21
     efc:	60 81       	ld	r22, Z
     efe:	65 38       	cpi	r22, 0x85	; 133
     f00:	09 f0       	breq	.+2      	; 0xf04 <__stack+0x605>
     f02:	47 c0       	rjmp	.+142    	; 0xf92 <__stack+0x693>
     f04:	61 81       	ldd	r22, Z+1	; 0x01
     f06:	66 23       	and	r22, r22
     f08:	19 f0       	breq	.+6      	; 0xf10 <__stack+0x611>
     f0a:	61 50       	subi	r22, 0x01	; 1
     f0c:	61 83       	std	Z+1, r22	; 0x01
     f0e:	41 c0       	rjmp	.+130    	; 0xf92 <__stack+0x693>
     f10:	a0 82       	st	Z, r10
     f12:	6c 81       	ldd	r22, Y+4	; 0x04
     f14:	7d 81       	ldd	r23, Y+5	; 0x05
     f16:	fb 01       	movw	r30, r22
     f18:	e4 0f       	add	r30, r20
     f1a:	f5 1f       	adc	r31, r21
     f1c:	02 80       	ldd	r0, Z+2	; 0x02
     f1e:	f3 81       	ldd	r31, Z+3	; 0x03
     f20:	e0 2d       	mov	r30, r0
     f22:	b0 82       	st	Z, r11
     f24:	ee 81       	ldd	r30, Y+6	; 0x06
     f26:	ff 81       	ldd	r31, Y+7	; 0x07
     f28:	e2 0f       	add	r30, r18
     f2a:	f3 1f       	adc	r31, r19
     f2c:	d2 80       	ldd	r13, Z+2	; 0x02
     f2e:	dd 20       	and	r13, r13
     f30:	81 f1       	breq	.+96     	; 0xf92 <__stack+0x693>
     f32:	40 e0       	ldi	r20, 0x00	; 0
     f34:	50 e0       	ldi	r21, 0x00	; 0
     f36:	00 e0       	ldi	r16, 0x00	; 0
     f38:	10 e0       	ldi	r17, 0x00	; 0
     f3a:	ea 81       	ldd	r30, Y+2	; 0x02
     f3c:	fb 81       	ldd	r31, Y+3	; 0x03
     f3e:	60 81       	ld	r22, Z
     f40:	71 81       	ldd	r23, Z+1	; 0x01
     f42:	06 17       	cp	r16, r22
     f44:	17 07       	cpc	r17, r23
     f46:	28 f5       	brcc	.+74     	; 0xf92 <__stack+0x693>
     f48:	ee 81       	ldd	r30, Y+6	; 0x06
     f4a:	ff 81       	ldd	r31, Y+7	; 0x07
     f4c:	e4 0f       	add	r30, r20
     f4e:	f5 1f       	adc	r31, r21
     f50:	62 81       	ldd	r22, Z+2	; 0x02
     f52:	d6 12       	cpse	r13, r22
     f54:	19 c0       	rjmp	.+50     	; 0xf88 <__stack+0x689>
     f56:	ba 01       	movw	r22, r20
     f58:	66 0f       	add	r22, r22
     f5a:	77 1f       	adc	r23, r23
     f5c:	ec 81       	ldd	r30, Y+4	; 0x04
     f5e:	fd 81       	ldd	r31, Y+5	; 0x05
     f60:	4f 01       	movw	r8, r30
     f62:	86 0e       	add	r8, r22
     f64:	97 1e       	adc	r9, r23
     f66:	f4 01       	movw	r30, r8
     f68:	e2 80       	ldd	r14, Z+2	; 0x02
     f6a:	f3 80       	ldd	r15, Z+3	; 0x03
     f6c:	f7 01       	movw	r30, r14
     f6e:	f0 80       	ld	r15, Z
     f70:	f0 fe       	sbrs	r15, 0
     f72:	0a c0       	rjmp	.+20     	; 0xf88 <__stack+0x689>
     f74:	f4 01       	movw	r30, r8
     f76:	a0 82       	st	Z, r10
     f78:	ec 81       	ldd	r30, Y+4	; 0x04
     f7a:	fd 81       	ldd	r31, Y+5	; 0x05
     f7c:	e6 0f       	add	r30, r22
     f7e:	f7 1f       	adc	r31, r23
     f80:	02 80       	ldd	r0, Z+2	; 0x02
     f82:	f3 81       	ldd	r31, Z+3	; 0x03
     f84:	e0 2d       	mov	r30, r0
     f86:	b0 82       	st	Z, r11
     f88:	0f 5f       	subi	r16, 0xFF	; 255
     f8a:	1f 4f       	sbci	r17, 0xFF	; 255
     f8c:	4d 5f       	subi	r20, 0xFD	; 253
     f8e:	5f 4f       	sbci	r21, 0xFF	; 255
     f90:	d4 cf       	rjmp	.-88     	; 0xf3a <__stack+0x63b>
     f92:	11 96       	adiw	r26, 0x01	; 1
     f94:	2d 5f       	subi	r18, 0xFD	; 253
     f96:	3f 4f       	sbci	r19, 0xFF	; 255
     f98:	34 cf       	rjmp	.-408    	; 0xe02 <__stack+0x503>
     f9a:	8b e0       	ldi	r24, 0x0B	; 11
     f9c:	df 91       	pop	r29
     f9e:	cf 91       	pop	r28
     fa0:	1f 91       	pop	r17
     fa2:	0f 91       	pop	r16
     fa4:	ff 90       	pop	r15
     fa6:	ef 90       	pop	r14
     fa8:	df 90       	pop	r13
     faa:	cf 90       	pop	r12
     fac:	bf 90       	pop	r11
     fae:	af 90       	pop	r10
     fb0:	9f 90       	pop	r9
     fb2:	8f 90       	pop	r8
     fb4:	7f 90       	pop	r7
     fb6:	6f 90       	pop	r6
     fb8:	5f 90       	pop	r5
     fba:	4f 90       	pop	r4
     fbc:	3f 90       	pop	r3
     fbe:	2f 90       	pop	r2
     fc0:	08 95       	ret

00000fc2 <select_next_channel_to_measure>:
     fc2:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <current_measure_channel>
     fc6:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <current_measure_channel+0x1>
     fca:	a0 91 9a 01 	lds	r26, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
     fce:	b0 91 9b 01 	lds	r27, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
     fd2:	ed 91       	ld	r30, X+
     fd4:	fc 91       	ld	r31, X
     fd6:	11 97       	sbiw	r26, 0x01	; 1
     fd8:	40 81       	ld	r20, Z
     fda:	51 81       	ldd	r21, Z+1	; 0x01
     fdc:	25 e0       	ldi	r18, 0x05	; 5
     fde:	28 9f       	mul	r18, r24
     fe0:	b0 01       	movw	r22, r0
     fe2:	29 9f       	mul	r18, r25
     fe4:	70 0d       	add	r23, r0
     fe6:	11 24       	eor	r1, r1
     fe8:	20 e0       	ldi	r18, 0x00	; 0
     fea:	30 e0       	ldi	r19, 0x00	; 0
     fec:	84 17       	cp	r24, r20
     fee:	95 07       	cpc	r25, r21
     ff0:	a8 f4       	brcc	.+42     	; 0x101c <select_next_channel_to_measure+0x5a>
     ff2:	14 96       	adiw	r26, 0x04	; 4
     ff4:	ed 91       	ld	r30, X+
     ff6:	fc 91       	ld	r31, X
     ff8:	15 97       	sbiw	r26, 0x05	; 5
     ffa:	e2 0f       	add	r30, r18
     ffc:	f3 1f       	adc	r31, r19
     ffe:	e6 0f       	add	r30, r22
    1000:	f7 1f       	adc	r31, r23
    1002:	e0 81       	ld	r30, Z
    1004:	2b 5f       	subi	r18, 0xFB	; 251
    1006:	3f 4f       	sbci	r19, 0xFF	; 255
    1008:	e0 fd       	sbrc	r30, 0
    100a:	02 c0       	rjmp	.+4      	; 0x1010 <select_next_channel_to_measure+0x4e>
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	ee cf       	rjmp	.-36     	; 0xfec <select_next_channel_to_measure+0x2a>
    1010:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <current_measure_channel+0x1>
    1014:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <current_measure_channel>
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	08 95       	ret
    101c:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <current_measure_channel+0x1>
    1020:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <current_measure_channel>
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	08 95       	ret

00001028 <qtm_measure_node>:
    1028:	4a e0       	ldi	r20, 0x0A	; 10
    102a:	48 9f       	mul	r20, r24
    102c:	90 01       	movw	r18, r0
    102e:	49 9f       	mul	r20, r25
    1030:	30 0d       	add	r19, r0
    1032:	11 24       	eor	r1, r1
    1034:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1038:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    103c:	02 80       	ldd	r0, Z+2	; 0x02
    103e:	f3 81       	ldd	r31, Z+3	; 0x03
    1040:	e0 2d       	mov	r30, r0
    1042:	e2 0f       	add	r30, r18
    1044:	f3 1f       	adc	r31, r19
    1046:	42 81       	ldd	r20, Z+2	; 0x02
    1048:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    104c:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1050:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    1054:	02 80       	ldd	r0, Z+2	; 0x02
    1056:	f3 81       	ldd	r31, Z+3	; 0x03
    1058:	e0 2d       	mov	r30, r0
    105a:	e2 0f       	add	r30, r18
    105c:	f3 1f       	adc	r31, r19
    105e:	43 81       	ldd	r20, Z+3	; 0x03
    1060:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    1064:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1068:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    106c:	02 80       	ldd	r0, Z+2	; 0x02
    106e:	f3 81       	ldd	r31, Z+3	; 0x03
    1070:	e0 2d       	mov	r30, r0
    1072:	e2 0f       	add	r30, r18
    1074:	f3 1f       	adc	r31, r19
    1076:	44 81       	ldd	r20, Z+4	; 0x04
    1078:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    107c:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1080:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    1084:	02 80       	ldd	r0, Z+2	; 0x02
    1086:	f3 81       	ldd	r31, Z+3	; 0x03
    1088:	e0 2d       	mov	r30, r0
    108a:	e2 0f       	add	r30, r18
    108c:	f3 1f       	adc	r31, r19
    108e:	42 81       	ldd	r20, Z+2	; 0x02
    1090:	53 81       	ldd	r21, Z+3	; 0x03
    1092:	64 81       	ldd	r22, Z+4	; 0x04
    1094:	75 81       	ldd	r23, Z+5	; 0x05
    1096:	47 2f       	mov	r20, r23
    1098:	55 27       	eor	r21, r21
    109a:	66 27       	eor	r22, r22
    109c:	77 27       	eor	r23, r23
    109e:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    10a2:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    10a6:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    10aa:	02 80       	ldd	r0, Z+2	; 0x02
    10ac:	f3 81       	ldd	r31, Z+3	; 0x03
    10ae:	e0 2d       	mov	r30, r0
    10b0:	e2 0f       	add	r30, r18
    10b2:	f3 1f       	adc	r31, r19
    10b4:	40 81       	ld	r20, Z
    10b6:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    10ba:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    10be:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    10c2:	02 80       	ldd	r0, Z+2	; 0x02
    10c4:	f3 81       	ldd	r31, Z+3	; 0x03
    10c6:	e0 2d       	mov	r30, r0
    10c8:	e2 0f       	add	r30, r18
    10ca:	f3 1f       	adc	r31, r19
    10cc:	41 81       	ldd	r20, Z+1	; 0x01
    10ce:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    10d2:	65 e0       	ldi	r22, 0x05	; 5
    10d4:	68 9f       	mul	r22, r24
    10d6:	a0 01       	movw	r20, r0
    10d8:	69 9f       	mul	r22, r25
    10da:	50 0d       	add	r21, r0
    10dc:	11 24       	eor	r1, r1
    10de:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    10e2:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    10e6:	04 80       	ldd	r0, Z+4	; 0x04
    10e8:	f5 81       	ldd	r31, Z+5	; 0x05
    10ea:	e0 2d       	mov	r30, r0
    10ec:	e4 0f       	add	r30, r20
    10ee:	f5 1f       	adc	r31, r21
    10f0:	83 81       	ldd	r24, Z+3	; 0x03
    10f2:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    10f6:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    10fa:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    10fe:	04 80       	ldd	r0, Z+4	; 0x04
    1100:	f5 81       	ldd	r31, Z+5	; 0x05
    1102:	e0 2d       	mov	r30, r0
    1104:	e4 0f       	add	r30, r20
    1106:	f5 1f       	adc	r31, r21
    1108:	83 81       	ldd	r24, Z+3	; 0x03
    110a:	94 81       	ldd	r25, Z+4	; 0x04
    110c:	88 27       	eor	r24, r24
    110e:	9f 73       	andi	r25, 0x3F	; 63
    1110:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    1114:	a0 91 9a 01 	lds	r26, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1118:	b0 91 9b 01 	lds	r27, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    111c:	14 96       	adiw	r26, 0x04	; 4
    111e:	ed 91       	ld	r30, X+
    1120:	fc 91       	ld	r31, X
    1122:	15 97       	sbiw	r26, 0x05	; 5
    1124:	e4 0f       	add	r30, r20
    1126:	f5 1f       	adc	r31, r21
    1128:	80 81       	ld	r24, Z
    112a:	81 fd       	sbrc	r24, 1
    112c:	60 83       	st	Z, r22
    112e:	14 96       	adiw	r26, 0x04	; 4
    1130:	8d 91       	ld	r24, X+
    1132:	9c 91       	ld	r25, X
    1134:	15 97       	sbiw	r26, 0x05	; 5
    1136:	fc 01       	movw	r30, r24
    1138:	e4 0f       	add	r30, r20
    113a:	f5 1f       	adc	r31, r21
    113c:	80 81       	ld	r24, Z
    113e:	8c 71       	andi	r24, 0x1C	; 28
    1140:	71 f4       	brne	.+28     	; 0x115e <qtm_measure_node+0x136>
    1142:	12 96       	adiw	r26, 0x02	; 2
    1144:	ed 91       	ld	r30, X+
    1146:	fc 91       	ld	r31, X
    1148:	13 97       	sbiw	r26, 0x03	; 3
    114a:	e2 0f       	add	r30, r18
    114c:	f3 1f       	adc	r31, r19
    114e:	e0 85       	ldd	r30, Z+8	; 0x08
    1150:	e2 95       	swap	r30
    1152:	ef 70       	andi	r30, 0x0F	; 15
    1154:	f0 e0       	ldi	r31, 0x00	; 0
    1156:	e0 5b       	subi	r30, 0xB0	; 176
    1158:	fe 4f       	sbci	r31, 0xFE	; 254
    115a:	80 81       	ld	r24, Z
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <qtm_measure_node+0x138>
    115e:	8f e3       	ldi	r24, 0x3F	; 63
    1160:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    1164:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1168:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    116c:	02 80       	ldd	r0, Z+2	; 0x02
    116e:	f3 81       	ldd	r31, Z+3	; 0x03
    1170:	e0 2d       	mov	r30, r0
    1172:	e2 0f       	add	r30, r18
    1174:	f3 1f       	adc	r31, r19
    1176:	86 81       	ldd	r24, Z+6	; 0x06
    1178:	8b 3f       	cpi	r24, 0xFB	; 251
    117a:	10 f4       	brcc	.+4      	; 0x1180 <qtm_measure_node+0x158>
    117c:	8c 5f       	subi	r24, 0xFC	; 252
    117e:	01 c0       	rjmp	.+2      	; 0x1182 <qtm_measure_node+0x15a>
    1180:	8f ef       	ldi	r24, 0xFF	; 255
    1182:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1186:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    118a:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    118e:	02 80       	ldd	r0, Z+2	; 0x02
    1190:	f3 81       	ldd	r31, Z+3	; 0x03
    1192:	e0 2d       	mov	r30, r0
    1194:	e2 0f       	add	r30, r18
    1196:	f3 1f       	adc	r31, r19
    1198:	87 81       	ldd	r24, Z+7	; 0x07
    119a:	80 7f       	andi	r24, 0xF0	; 240
    119c:	91 85       	ldd	r25, Z+9	; 0x09
    119e:	89 2b       	or	r24, r25
    11a0:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    11a4:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    11a8:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    11ac:	82 81       	ldd	r24, Z+2	; 0x02
    11ae:	93 81       	ldd	r25, Z+3	; 0x03
    11b0:	fc 01       	movw	r30, r24
    11b2:	e2 0f       	add	r30, r18
    11b4:	f3 1f       	adc	r31, r19
    11b6:	87 81       	ldd	r24, Z+7	; 0x07
    11b8:	8f 70       	andi	r24, 0x0F	; 15
    11ba:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    11be:	82 e1       	ldi	r24, 0x12	; 18
    11c0:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    11c4:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    11c8:	81 60       	ori	r24, 0x01	; 1
    11ca:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    11ce:	08 95       	ret

000011d0 <qtm_acquisition_process>:
    11d0:	4f 92       	push	r4
    11d2:	5f 92       	push	r5
    11d4:	6f 92       	push	r6
    11d6:	7f 92       	push	r7
    11d8:	8f 92       	push	r8
    11da:	9f 92       	push	r9
    11dc:	af 92       	push	r10
    11de:	bf 92       	push	r11
    11e0:	cf 92       	push	r12
    11e2:	df 92       	push	r13
    11e4:	ef 92       	push	r14
    11e6:	ff 92       	push	r15
    11e8:	0f 93       	push	r16
    11ea:	1f 93       	push	r17
    11ec:	cf 93       	push	r28
    11ee:	df 93       	push	r29
    11f0:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <touch_seq_lib_state>
    11f4:	88 23       	and	r24, r24
    11f6:	09 f4       	brne	.+2      	; 0x11fa <qtm_acquisition_process+0x2a>
    11f8:	31 c1       	rjmp	.+610    	; 0x145c <qtm_acquisition_process+0x28c>
    11fa:	a0 91 9a 01 	lds	r26, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    11fe:	b0 91 9b 01 	lds	r27, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    1202:	e0 90 9c 01 	lds	r14, 0x019C	; 0x80019c <qtm_raw_data_measurements_ptr>
    1206:	f0 90 9d 01 	lds	r15, 0x019D	; 0x80019d <qtm_raw_data_measurements_ptr+0x1>
    120a:	41 2c       	mov	r4, r1
    120c:	51 2c       	mov	r5, r1
    120e:	60 e0       	ldi	r22, 0x00	; 0
    1210:	70 e0       	ldi	r23, 0x00	; 0
    1212:	00 e0       	ldi	r16, 0x00	; 0
    1214:	10 e0       	ldi	r17, 0x00	; 0
    1216:	80 e0       	ldi	r24, 0x00	; 0
    1218:	66 24       	eor	r6, r6
    121a:	63 94       	inc	r6
    121c:	91 e8       	ldi	r25, 0x81	; 129
    121e:	79 2e       	mov	r7, r25
    1220:	aa 24       	eor	r10, r10
    1222:	aa 94       	dec	r10
    1224:	bb 24       	eor	r11, r11
    1226:	b3 94       	inc	r11
    1228:	cd 90       	ld	r12, X+
    122a:	dc 90       	ld	r13, X
    122c:	11 97       	sbiw	r26, 0x01	; 1
    122e:	f6 01       	movw	r30, r12
    1230:	20 81       	ld	r18, Z
    1232:	31 81       	ldd	r19, Z+1	; 0x01
    1234:	02 17       	cp	r16, r18
    1236:	13 07       	cpc	r17, r19
    1238:	08 f0       	brcs	.+2      	; 0x123c <qtm_acquisition_process+0x6c>
    123a:	0c c1       	rjmp	.+536    	; 0x1454 <qtm_acquisition_process+0x284>
    123c:	e7 01       	movw	r28, r14
    123e:	29 91       	ld	r18, Y+
    1240:	39 91       	ld	r19, Y+
    1242:	7e 01       	movw	r14, r28
    1244:	14 96       	adiw	r26, 0x04	; 4
    1246:	ed 91       	ld	r30, X+
    1248:	fc 91       	ld	r31, X
    124a:	15 97       	sbiw	r26, 0x05	; 5
    124c:	e6 0f       	add	r30, r22
    124e:	f7 1f       	adc	r31, r23
    1250:	40 81       	ld	r20, Z
    1252:	4c 71       	andi	r20, 0x1C	; 28
    1254:	50 e0       	ldi	r21, 0x00	; 0
    1256:	56 95       	lsr	r21
    1258:	47 95       	ror	r20
    125a:	56 95       	lsr	r21
    125c:	47 95       	ror	r20
    125e:	41 15       	cp	r20, r1
    1260:	51 05       	cpc	r21, r1
    1262:	21 f0       	breq	.+8      	; 0x126c <qtm_acquisition_process+0x9c>
    1264:	41 30       	cpi	r20, 0x01	; 1
    1266:	51 05       	cpc	r21, r1
    1268:	c1 f0       	breq	.+48     	; 0x129a <qtm_acquisition_process+0xca>
    126a:	eb c0       	rjmp	.+470    	; 0x1442 <qtm_acquisition_process+0x272>
    126c:	12 96       	adiw	r26, 0x02	; 2
    126e:	4d 91       	ld	r20, X+
    1270:	5c 91       	ld	r21, X
    1272:	13 97       	sbiw	r26, 0x03	; 3
    1274:	44 0d       	add	r20, r4
    1276:	55 1d       	adc	r21, r5
    1278:	ea 01       	movw	r28, r20
    127a:	98 85       	ldd	r25, Y+8	; 0x08
    127c:	9f 70       	andi	r25, 0x0F	; 15
    127e:	49 85       	ldd	r20, Y+9	; 0x09
    1280:	94 17       	cp	r25, r20
    1282:	10 f4       	brcc	.+4      	; 0x1288 <qtm_acquisition_process+0xb8>
    1284:	49 1b       	sub	r20, r25
    1286:	01 c0       	rjmp	.+2      	; 0x128a <qtm_acquisition_process+0xba>
    1288:	40 e0       	ldi	r20, 0x00	; 0
    128a:	02 c0       	rjmp	.+4      	; 0x1290 <qtm_acquisition_process+0xc0>
    128c:	36 95       	lsr	r19
    128e:	27 95       	ror	r18
    1290:	4a 95       	dec	r20
    1292:	e2 f7       	brpl	.-8      	; 0x128c <qtm_acquisition_process+0xbc>
    1294:	32 83       	std	Z+2, r19	; 0x02
    1296:	21 83       	std	Z+1, r18	; 0x01
    1298:	d5 c0       	rjmp	.+426    	; 0x1444 <qtm_acquisition_process+0x274>
    129a:	12 96       	adiw	r26, 0x02	; 2
    129c:	4d 91       	ld	r20, X+
    129e:	5c 91       	ld	r21, X
    12a0:	13 97       	sbiw	r26, 0x03	; 3
    12a2:	44 0d       	add	r20, r4
    12a4:	55 1d       	adc	r21, r5
    12a6:	ea 01       	movw	r28, r20
    12a8:	09 84       	ldd	r0, Y+9	; 0x09
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <qtm_acquisition_process+0xe0>
    12ac:	36 95       	lsr	r19
    12ae:	27 95       	ror	r18
    12b0:	0a 94       	dec	r0
    12b2:	e2 f7       	brpl	.-8      	; 0x12ac <qtm_acquisition_process+0xdc>
    12b4:	32 83       	std	Z+2, r19	; 0x02
    12b6:	21 83       	std	Z+1, r18	; 0x01
    12b8:	43 81       	ldd	r20, Z+3	; 0x03
    12ba:	54 81       	ldd	r21, Z+4	; 0x04
    12bc:	21 15       	cp	r18, r1
    12be:	d2 e0       	ldi	r29, 0x02	; 2
    12c0:	3d 07       	cpc	r19, r29
    12c2:	20 f0       	brcs	.+8      	; 0x12cc <qtm_acquisition_process+0xfc>
    12c4:	2f 5f       	subi	r18, 0xFF	; 255
    12c6:	31 40       	sbci	r19, 0x01	; 1
    12c8:	91 e0       	ldi	r25, 0x01	; 1
    12ca:	05 c0       	rjmp	.+10     	; 0x12d6 <qtm_acquisition_process+0x106>
    12cc:	e5 01       	movw	r28, r10
    12ce:	c2 1b       	sub	r28, r18
    12d0:	d3 0b       	sbc	r29, r19
    12d2:	9e 01       	movw	r18, r28
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	e6 01       	movw	r28, r12
    12d8:	da 80       	ldd	r13, Y+2	; 0x02
    12da:	d0 e4       	ldi	r29, 0x40	; 64
    12dc:	dd 12       	cpse	r13, r29
    12de:	05 c0       	rjmp	.+10     	; 0x12ea <qtm_acquisition_process+0x11a>
    12e0:	36 95       	lsr	r19
    12e2:	27 95       	ror	r18
    12e4:	99 23       	and	r25, r25
    12e6:	19 f0       	breq	.+6      	; 0x12ee <qtm_acquisition_process+0x11e>
    12e8:	09 c0       	rjmp	.+18     	; 0x12fc <qtm_acquisition_process+0x12c>
    12ea:	99 23       	and	r25, r25
    12ec:	39 f0       	breq	.+14     	; 0x12fc <qtm_acquisition_process+0x12c>
    12ee:	4f 3f       	cpi	r20, 0xFF	; 255
    12f0:	9f e3       	ldi	r25, 0x3F	; 63
    12f2:	59 07       	cpc	r21, r25
    12f4:	31 f4       	brne	.+12     	; 0x1302 <qtm_acquisition_process+0x132>
    12f6:	70 82       	st	Z, r7
    12f8:	8e e0       	ldi	r24, 0x0E	; 14
    12fa:	07 c0       	rjmp	.+14     	; 0x130a <qtm_acquisition_process+0x13a>
    12fc:	88 24       	eor	r8, r8
    12fe:	83 94       	inc	r8
    1300:	01 c0       	rjmp	.+2      	; 0x1304 <qtm_acquisition_process+0x134>
    1302:	81 2c       	mov	r8, r1
    1304:	2a 30       	cpi	r18, 0x0A	; 10
    1306:	31 05       	cpc	r19, r1
    1308:	98 f4       	brcc	.+38     	; 0x1330 <qtm_acquisition_process+0x160>
    130a:	14 96       	adiw	r26, 0x04	; 4
    130c:	ed 91       	ld	r30, X+
    130e:	fc 91       	ld	r31, X
    1310:	15 97       	sbiw	r26, 0x05	; 5
    1312:	e6 0f       	add	r30, r22
    1314:	f7 1f       	adc	r31, r23
    1316:	20 81       	ld	r18, Z
    1318:	27 ff       	sbrs	r18, 7
    131a:	60 82       	st	Z, r6
    131c:	14 96       	adiw	r26, 0x04	; 4
    131e:	ed 91       	ld	r30, X+
    1320:	fc 91       	ld	r31, X
    1322:	15 97       	sbiw	r26, 0x05	; 5
    1324:	e6 0f       	add	r30, r22
    1326:	f7 1f       	adc	r31, r23
    1328:	5f 73       	andi	r21, 0x3F	; 63
    132a:	54 83       	std	Z+4, r21	; 0x04
    132c:	43 83       	std	Z+3, r20	; 0x03
    132e:	8a c0       	rjmp	.+276    	; 0x1444 <qtm_acquisition_process+0x274>
    1330:	6a 01       	movw	r12, r20
    1332:	cc 24       	eor	r12, r12
    1334:	c0 e3       	ldi	r28, 0x30	; 48
    1336:	dc 22       	and	r13, r28
    1338:	9d 2c       	mov	r9, r13
    133a:	92 94       	swap	r9
    133c:	df e0       	ldi	r29, 0x0F	; 15
    133e:	9d 22       	and	r9, r29
    1340:	6a 01       	movw	r12, r20
    1342:	cc 24       	eor	r12, r12
    1344:	df e0       	ldi	r29, 0x0F	; 15
    1346:	dd 22       	and	r13, r29
    1348:	9d 2d       	mov	r25, r13
    134a:	6a 01       	movw	r12, r20
    134c:	c0 ef       	ldi	r28, 0xF0	; 240
    134e:	cc 22       	and	r12, r28
    1350:	dd 24       	eor	r13, r13
    1352:	54 e0       	ldi	r21, 0x04	; 4
    1354:	d6 94       	lsr	r13
    1356:	c7 94       	ror	r12
    1358:	5a 95       	dec	r21
    135a:	e1 f7       	brne	.-8      	; 0x1354 <qtm_acquisition_process+0x184>
    135c:	5c 2d       	mov	r21, r12
    135e:	4f 70       	andi	r20, 0x0F	; 15
    1360:	81 10       	cpse	r8, r1
    1362:	32 c0       	rjmp	.+100    	; 0x13c8 <qtm_acquisition_process+0x1f8>
    1364:	20 3d       	cpi	r18, 0xD0	; 208
    1366:	31 05       	cpc	r19, r1
    1368:	60 f0       	brcs	.+24     	; 0x1382 <qtm_acquisition_process+0x1b2>
    136a:	d3 e0       	ldi	r29, 0x03	; 3
    136c:	9d 16       	cp	r9, r29
    136e:	49 f0       	breq	.+18     	; 0x1382 <qtm_acquisition_process+0x1b2>
    1370:	93 94       	inc	r9
    1372:	2f 5c       	subi	r18, 0xCF	; 207
    1374:	31 09       	sbc	r19, r1
    1376:	f6 cf       	rjmp	.-20     	; 0x1364 <qtm_acquisition_process+0x194>
    1378:	9f 30       	cpi	r25, 0x0F	; 15
    137a:	41 f0       	breq	.+16     	; 0x138c <qtm_acquisition_process+0x1bc>
    137c:	9f 5f       	subi	r25, 0xFF	; 255
    137e:	25 51       	subi	r18, 0x15	; 21
    1380:	31 09       	sbc	r19, r1
    1382:	26 31       	cpi	r18, 0x16	; 22
    1384:	31 05       	cpc	r19, r1
    1386:	c0 f7       	brcc	.-16     	; 0x1378 <qtm_acquisition_process+0x1a8>
    1388:	9f 30       	cpi	r25, 0x0F	; 15
    138a:	69 f4       	brne	.+26     	; 0x13a6 <qtm_acquisition_process+0x1d6>
    138c:	93 e0       	ldi	r25, 0x03	; 3
    138e:	99 12       	cpse	r9, r25
    1390:	02 c0       	rjmp	.+4      	; 0x1396 <qtm_acquisition_process+0x1c6>
    1392:	9f e0       	ldi	r25, 0x0F	; 15
    1394:	08 c0       	rjmp	.+16     	; 0x13a6 <qtm_acquisition_process+0x1d6>
    1396:	93 94       	inc	r9
    1398:	95 e0       	ldi	r25, 0x05	; 5
    139a:	05 c0       	rjmp	.+10     	; 0x13a6 <qtm_acquisition_process+0x1d6>
    139c:	5f 30       	cpi	r21, 0x0F	; 15
    139e:	49 f0       	breq	.+18     	; 0x13b2 <qtm_acquisition_process+0x1e2>
    13a0:	5f 5f       	subi	r21, 0xFF	; 255
    13a2:	22 50       	subi	r18, 0x02	; 2
    13a4:	31 09       	sbc	r19, r1
    13a6:	23 30       	cpi	r18, 0x03	; 3
    13a8:	31 05       	cpc	r19, r1
    13aa:	c0 f7       	brcc	.-16     	; 0x139c <qtm_acquisition_process+0x1cc>
    13ac:	5f 30       	cpi	r21, 0x0F	; 15
    13ae:	09 f0       	breq	.+2      	; 0x13b2 <qtm_acquisition_process+0x1e2>
    13b0:	5b c0       	rjmp	.+182    	; 0x1468 <qtm_acquisition_process+0x298>
    13b2:	9f 30       	cpi	r25, 0x0F	; 15
    13b4:	09 f4       	brne	.+2      	; 0x13b8 <qtm_acquisition_process+0x1e8>
    13b6:	54 c0       	rjmp	.+168    	; 0x1460 <qtm_acquisition_process+0x290>
    13b8:	9f 5f       	subi	r25, 0xFF	; 255
    13ba:	55 e0       	ldi	r21, 0x05	; 5
    13bc:	55 c0       	rjmp	.+170    	; 0x1468 <qtm_acquisition_process+0x298>
    13be:	99 20       	and	r9, r9
    13c0:	61 f0       	breq	.+24     	; 0x13da <qtm_acquisition_process+0x20a>
    13c2:	9a 94       	dec	r9
    13c4:	2f 5c       	subi	r18, 0xCF	; 207
    13c6:	31 09       	sbc	r19, r1
    13c8:	20 3d       	cpi	r18, 0xD0	; 208
    13ca:	31 05       	cpc	r19, r1
    13cc:	c0 f7       	brcc	.-16     	; 0x13be <qtm_acquisition_process+0x1ee>
    13ce:	05 c0       	rjmp	.+10     	; 0x13da <qtm_acquisition_process+0x20a>
    13d0:	99 23       	and	r25, r25
    13d2:	41 f0       	breq	.+16     	; 0x13e4 <qtm_acquisition_process+0x214>
    13d4:	91 50       	subi	r25, 0x01	; 1
    13d6:	25 51       	subi	r18, 0x15	; 21
    13d8:	31 09       	sbc	r19, r1
    13da:	26 31       	cpi	r18, 0x16	; 22
    13dc:	31 05       	cpc	r19, r1
    13de:	c0 f7       	brcc	.-16     	; 0x13d0 <qtm_acquisition_process+0x200>
    13e0:	91 11       	cpse	r25, r1
    13e2:	0c c0       	rjmp	.+24     	; 0x13fc <qtm_acquisition_process+0x22c>
    13e4:	91 10       	cpse	r9, r1
    13e6:	02 c0       	rjmp	.+4      	; 0x13ec <qtm_acquisition_process+0x21c>
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	08 c0       	rjmp	.+16     	; 0x13fc <qtm_acquisition_process+0x22c>
    13ec:	9a 94       	dec	r9
    13ee:	9a e0       	ldi	r25, 0x0A	; 10
    13f0:	05 c0       	rjmp	.+10     	; 0x13fc <qtm_acquisition_process+0x22c>
    13f2:	55 23       	and	r21, r21
    13f4:	41 f0       	breq	.+16     	; 0x1406 <qtm_acquisition_process+0x236>
    13f6:	51 50       	subi	r21, 0x01	; 1
    13f8:	22 50       	subi	r18, 0x02	; 2
    13fa:	31 09       	sbc	r19, r1
    13fc:	23 30       	cpi	r18, 0x03	; 3
    13fe:	31 05       	cpc	r19, r1
    1400:	c0 f7       	brcc	.-16     	; 0x13f2 <qtm_acquisition_process+0x222>
    1402:	51 11       	cpse	r21, r1
    1404:	0d c0       	rjmp	.+26     	; 0x1420 <qtm_acquisition_process+0x250>
    1406:	99 23       	and	r25, r25
    1408:	b9 f1       	breq	.+110    	; 0x1478 <qtm_acquisition_process+0x2a8>
    140a:	91 50       	subi	r25, 0x01	; 1
    140c:	5a e0       	ldi	r21, 0x0A	; 10
    140e:	23 30       	cpi	r18, 0x03	; 3
    1410:	31 05       	cpc	r19, r1
    1412:	d0 f6       	brcc	.-76     	; 0x13c8 <qtm_acquisition_process+0x1f8>
    1414:	05 c0       	rjmp	.+10     	; 0x1420 <qtm_acquisition_process+0x250>
    1416:	23 30       	cpi	r18, 0x03	; 3
    1418:	31 05       	cpc	r19, r1
    141a:	58 f1       	brcs	.+86     	; 0x1472 <qtm_acquisition_process+0x2a2>
    141c:	4f e0       	ldi	r20, 0x0F	; 15
    141e:	5f e0       	ldi	r21, 0x0F	; 15
    1420:	29 2d       	mov	r18, r9
    1422:	30 e0       	ldi	r19, 0x00	; 0
    1424:	32 2f       	mov	r19, r18
    1426:	22 27       	eor	r18, r18
    1428:	32 95       	swap	r19
    142a:	30 7f       	andi	r19, 0xF0	; 240
    142c:	39 2b       	or	r19, r25
    142e:	24 2b       	or	r18, r20
    1430:	c0 e1       	ldi	r28, 0x10	; 16
    1432:	5c 9f       	mul	r21, r28
    1434:	60 01       	movw	r12, r0
    1436:	11 24       	eor	r1, r1
    1438:	c2 2a       	or	r12, r18
    143a:	d3 2a       	or	r13, r19
    143c:	d4 82       	std	Z+4, r13	; 0x04
    143e:	c3 82       	std	Z+3, r12	; 0x03
    1440:	01 c0       	rjmp	.+2      	; 0x1444 <qtm_acquisition_process+0x274>
    1442:	ff cf       	rjmp	.-2      	; 0x1442 <qtm_acquisition_process+0x272>
    1444:	0f 5f       	subi	r16, 0xFF	; 255
    1446:	1f 4f       	sbci	r17, 0xFF	; 255
    1448:	6b 5f       	subi	r22, 0xFB	; 251
    144a:	7f 4f       	sbci	r23, 0xFF	; 255
    144c:	da e0       	ldi	r29, 0x0A	; 10
    144e:	4d 0e       	add	r4, r29
    1450:	51 1c       	adc	r5, r1
    1452:	ea ce       	rjmp	.-556    	; 0x1228 <qtm_acquisition_process+0x58>
    1454:	92 e0       	ldi	r25, 0x02	; 2
    1456:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <touch_seq_lib_state>
    145a:	10 c0       	rjmp	.+32     	; 0x147c <qtm_acquisition_process+0x2ac>
    145c:	83 e0       	ldi	r24, 0x03	; 3
    145e:	0e c0       	rjmp	.+28     	; 0x147c <qtm_acquisition_process+0x2ac>
    1460:	53 e0       	ldi	r21, 0x03	; 3
    1462:	95 16       	cp	r9, r21
    1464:	c1 f2       	breq	.-80     	; 0x1416 <qtm_acquisition_process+0x246>
    1466:	5f e0       	ldi	r21, 0x0F	; 15
    1468:	23 30       	cpi	r18, 0x03	; 3
    146a:	31 05       	cpc	r19, r1
    146c:	08 f0       	brcs	.+2      	; 0x1470 <qtm_acquisition_process+0x2a0>
    146e:	7a cf       	rjmp	.-268    	; 0x1364 <qtm_acquisition_process+0x194>
    1470:	d7 cf       	rjmp	.-82     	; 0x1420 <qtm_acquisition_process+0x250>
    1472:	5f e0       	ldi	r21, 0x0F	; 15
    1474:	4f e0       	ldi	r20, 0x0F	; 15
    1476:	d4 cf       	rjmp	.-88     	; 0x1420 <qtm_acquisition_process+0x250>
    1478:	50 e0       	ldi	r21, 0x00	; 0
    147a:	d2 cf       	rjmp	.-92     	; 0x1420 <qtm_acquisition_process+0x250>
    147c:	df 91       	pop	r29
    147e:	cf 91       	pop	r28
    1480:	1f 91       	pop	r17
    1482:	0f 91       	pop	r16
    1484:	ff 90       	pop	r15
    1486:	ef 90       	pop	r14
    1488:	df 90       	pop	r13
    148a:	cf 90       	pop	r12
    148c:	bf 90       	pop	r11
    148e:	af 90       	pop	r10
    1490:	9f 90       	pop	r9
    1492:	8f 90       	pop	r8
    1494:	7f 90       	pop	r7
    1496:	6f 90       	pop	r6
    1498:	5f 90       	pop	r5
    149a:	4f 90       	pop	r4
    149c:	08 95       	ret

0000149e <qtm_ptc_init_acquisition_module>:
    149e:	8f 92       	push	r8
    14a0:	9f 92       	push	r9
    14a2:	af 92       	push	r10
    14a4:	bf 92       	push	r11
    14a6:	cf 92       	push	r12
    14a8:	df 92       	push	r13
    14aa:	ef 92       	push	r14
    14ac:	ff 92       	push	r15
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	00 97       	sbiw	r24, 0x00	; 0
    14b4:	09 f4       	brne	.+2      	; 0x14b8 <qtm_ptc_init_acquisition_module+0x1a>
    14b6:	76 c0       	rjmp	.+236    	; 0x15a4 <qtm_ptc_init_acquisition_module+0x106>
    14b8:	dc 01       	movw	r26, r24
    14ba:	ed 91       	ld	r30, X+
    14bc:	fc 91       	ld	r31, X
    14be:	c0 80       	ld	r12, Z
    14c0:	d1 80       	ldd	r13, Z+1	; 0x01
    14c2:	e1 2c       	mov	r14, r1
    14c4:	f1 2c       	mov	r15, r1
    14c6:	a0 e0       	ldi	r26, 0x00	; 0
    14c8:	b0 e0       	ldi	r27, 0x00	; 0
    14ca:	40 e0       	ldi	r20, 0x00	; 0
    14cc:	50 e0       	ldi	r21, 0x00	; 0
    14ce:	ba 01       	movw	r22, r20
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	ac 15       	cp	r26, r12
    14d6:	bd 05       	cpc	r27, r13
    14d8:	b1 f0       	breq	.+44     	; 0x1506 <qtm_ptc_init_acquisition_module+0x68>
    14da:	ec 01       	movw	r28, r24
    14dc:	ea 81       	ldd	r30, Y+2	; 0x02
    14de:	fb 81       	ldd	r31, Y+3	; 0x03
    14e0:	ee 0d       	add	r30, r14
    14e2:	ff 1d       	adc	r31, r15
    14e4:	a0 80       	ld	r10, Z
    14e6:	b1 80       	ldd	r11, Z+1	; 0x01
    14e8:	2a 29       	or	r18, r10
    14ea:	3b 29       	or	r19, r11
    14ec:	82 80       	ldd	r8, Z+2	; 0x02
    14ee:	93 80       	ldd	r9, Z+3	; 0x03
    14f0:	a4 80       	ldd	r10, Z+4	; 0x04
    14f2:	b5 80       	ldd	r11, Z+5	; 0x05
    14f4:	48 29       	or	r20, r8
    14f6:	59 29       	or	r21, r9
    14f8:	6a 29       	or	r22, r10
    14fa:	7b 29       	or	r23, r11
    14fc:	11 96       	adiw	r26, 0x01	; 1
    14fe:	da e0       	ldi	r29, 0x0A	; 10
    1500:	ed 0e       	add	r14, r29
    1502:	f1 1c       	adc	r15, r1
    1504:	e7 cf       	rjmp	.-50     	; 0x14d4 <qtm_ptc_init_acquisition_module+0x36>
    1506:	41 15       	cp	r20, r1
    1508:	51 05       	cpc	r21, r1
    150a:	61 05       	cpc	r22, r1
    150c:	71 05       	cpc	r23, r1
    150e:	09 f4       	brne	.+2      	; 0x1512 <qtm_ptc_init_acquisition_module+0x74>
    1510:	4b c0       	rjmp	.+150    	; 0x15a8 <qtm_ptc_init_acquisition_module+0x10a>
    1512:	e0 91 72 01 	lds	r30, 0x0172	; 0x800172 <touch_seq_lib_state>
    1516:	4a 01       	movw	r8, r20
    1518:	5b 01       	movw	r10, r22
    151a:	88 24       	eor	r8, r8
    151c:	aa 24       	eor	r10, r10
    151e:	bb 24       	eor	r11, r11
    1520:	6a 01       	movw	r12, r20
    1522:	7b 01       	movw	r14, r22
    1524:	cc 24       	eor	r12, r12
    1526:	dd 24       	eor	r13, r13
    1528:	ff 24       	eor	r15, r15
    152a:	87 2f       	mov	r24, r23
    152c:	99 27       	eor	r25, r25
    152e:	aa 27       	eor	r26, r26
    1530:	bb 27       	eor	r27, r27
    1532:	e1 11       	cpse	r30, r1
    1534:	17 c0       	rjmp	.+46     	; 0x1564 <qtm_ptc_init_acquisition_module+0xc6>
    1536:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    153a:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    153e:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1542:	89 2c       	mov	r8, r9
    1544:	9a 2c       	mov	r9, r10
    1546:	ab 2c       	mov	r10, r11
    1548:	bb 24       	eor	r11, r11
    154a:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    154e:	67 01       	movw	r12, r14
    1550:	ee 24       	eor	r14, r14
    1552:	ff 24       	eor	r15, r15
    1554:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1558:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    155c:	81 e0       	ldi	r24, 0x01	; 1
    155e:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <touch_seq_lib_state>
    1562:	1e c0       	rjmp	.+60     	; 0x15a0 <qtm_ptc_init_acquisition_module+0x102>
    1564:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1568:	2e 2b       	or	r18, r30
    156a:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    156e:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1572:	23 2b       	or	r18, r19
    1574:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1578:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    157c:	42 2b       	or	r20, r18
    157e:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1582:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1586:	29 29       	or	r18, r9
    1588:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    158c:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1590:	2e 29       	or	r18, r14
    1592:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1596:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    159a:	82 2b       	or	r24, r18
    159c:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    15a0:	80 e0       	ldi	r24, 0x00	; 0
    15a2:	03 c0       	rjmp	.+6      	; 0x15aa <qtm_ptc_init_acquisition_module+0x10c>
    15a4:	8b e0       	ldi	r24, 0x0B	; 11
    15a6:	01 c0       	rjmp	.+2      	; 0x15aa <qtm_ptc_init_acquisition_module+0x10c>
    15a8:	82 e0       	ldi	r24, 0x02	; 2
    15aa:	df 91       	pop	r29
    15ac:	cf 91       	pop	r28
    15ae:	ff 90       	pop	r15
    15b0:	ef 90       	pop	r14
    15b2:	df 90       	pop	r13
    15b4:	cf 90       	pop	r12
    15b6:	bf 90       	pop	r11
    15b8:	af 90       	pop	r10
    15ba:	9f 90       	pop	r9
    15bc:	8f 90       	pop	r8
    15be:	08 95       	ret

000015c0 <qtm_ptc_qtlib_assign_signal_memory>:
    15c0:	00 97       	sbiw	r24, 0x00	; 0
    15c2:	31 f0       	breq	.+12     	; 0x15d0 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    15c4:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <qtm_raw_data_measurements_ptr+0x1>
    15c8:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <qtm_raw_data_measurements_ptr>
    15cc:	80 e0       	ldi	r24, 0x00	; 0
    15ce:	08 95       	ret
    15d0:	8b e0       	ldi	r24, 0x0B	; 11
    15d2:	08 95       	ret

000015d4 <qtm_ptc_start_measurement_seq>:
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	00 d0       	rcall	.+0      	; 0x15da <qtm_ptc_start_measurement_seq+0x6>
    15da:	00 d0       	rcall	.+0      	; 0x15dc <qtm_ptc_start_measurement_seq+0x8>
    15dc:	cd b7       	in	r28, 0x3d	; 61
    15de:	de b7       	in	r29, 0x3e	; 62
    15e0:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <max_conversion_cycles>
    15e4:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <max_conversion_cycles+0x1>
    15e8:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <max_conversion_cycles+0x2>
    15ec:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <max_conversion_cycles+0x3>
    15f0:	61 15       	cp	r22, r1
    15f2:	71 05       	cpc	r23, r1
    15f4:	09 f4       	brne	.+2      	; 0x15f8 <qtm_ptc_start_measurement_seq+0x24>
    15f6:	db c0       	rjmp	.+438    	; 0x17ae <qtm_ptc_start_measurement_seq+0x1da>
    15f8:	00 97       	sbiw	r24, 0x00	; 0
    15fa:	09 f4       	brne	.+2      	; 0x15fe <qtm_ptc_start_measurement_seq+0x2a>
    15fc:	d8 c0       	rjmp	.+432    	; 0x17ae <qtm_ptc_start_measurement_seq+0x1da>
    15fe:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <touch_seq_lib_state>
    1602:	22 23       	and	r18, r18
    1604:	09 f4       	brne	.+2      	; 0x1608 <qtm_ptc_start_measurement_seq+0x34>
    1606:	d5 c0       	rjmp	.+426    	; 0x17b2 <qtm_ptc_start_measurement_seq+0x1de>
    1608:	24 30       	cpi	r18, 0x04	; 4
    160a:	09 f0       	breq	.+2      	; 0x160e <qtm_ptc_start_measurement_seq+0x3a>
    160c:	93 c0       	rjmp	.+294    	; 0x1734 <qtm_ptc_start_measurement_seq+0x160>
    160e:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <ptc_eoc_ok_flag>
    1612:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1616:	80 ff       	sbrs	r24, 0
    1618:	8b c0       	rjmp	.+278    	; 0x1730 <qtm_ptc_start_measurement_seq+0x15c>
    161a:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    161e:	30 e0       	ldi	r19, 0x00	; 0
    1620:	a6 e0       	ldi	r26, 0x06	; 6
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	0e 94 87 0c 	call	0x190e	; 0x190e <__umulhisi3>
    1628:	60 93 76 01 	sts	0x0176, r22	; 0x800176 <max_conversion_cycles>
    162c:	70 93 77 01 	sts	0x0177, r23	; 0x800177 <max_conversion_cycles+0x1>
    1630:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <max_conversion_cycles+0x2>
    1634:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <max_conversion_cycles+0x3>
    1638:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    163c:	2f 70       	andi	r18, 0x0F	; 15
    163e:	dc 01       	movw	r26, r24
    1640:	cb 01       	movw	r24, r22
    1642:	82 0f       	add	r24, r18
    1644:	91 1d       	adc	r25, r1
    1646:	a1 1d       	adc	r26, r1
    1648:	b1 1d       	adc	r27, r1
    164a:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <max_conversion_cycles>
    164e:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <max_conversion_cycles+0x1>
    1652:	a0 93 78 01 	sts	0x0178, r26	; 0x800178 <max_conversion_cycles+0x2>
    1656:	b0 93 79 01 	sts	0x0179, r27	; 0x800179 <max_conversion_cycles+0x3>
    165a:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    165e:	27 70       	andi	r18, 0x07	; 7
    1660:	04 c0       	rjmp	.+8      	; 0x166a <qtm_ptc_start_measurement_seq+0x96>
    1662:	88 0f       	add	r24, r24
    1664:	99 1f       	adc	r25, r25
    1666:	aa 1f       	adc	r26, r26
    1668:	bb 1f       	adc	r27, r27
    166a:	2a 95       	dec	r18
    166c:	d2 f7       	brpl	.-12     	; 0x1662 <qtm_ptc_start_measurement_seq+0x8e>
    166e:	0e 96       	adiw	r24, 0x0e	; 14
    1670:	a1 1d       	adc	r26, r1
    1672:	b1 1d       	adc	r27, r1
    1674:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <max_conversion_cycles>
    1678:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <max_conversion_cycles+0x1>
    167c:	a0 93 78 01 	sts	0x0178, r26	; 0x800178 <max_conversion_cycles+0x2>
    1680:	b0 93 79 01 	sts	0x0179, r27	; 0x800179 <max_conversion_cycles+0x3>
    1684:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    1688:	23 70       	andi	r18, 0x03	; 3
    168a:	04 c0       	rjmp	.+8      	; 0x1694 <qtm_ptc_start_measurement_seq+0xc0>
    168c:	88 0f       	add	r24, r24
    168e:	99 1f       	adc	r25, r25
    1690:	aa 1f       	adc	r26, r26
    1692:	bb 1f       	adc	r27, r27
    1694:	2a 95       	dec	r18
    1696:	d2 f7       	brpl	.-12     	; 0x168c <qtm_ptc_start_measurement_seq+0xb8>
    1698:	22 e0       	ldi	r18, 0x02	; 2
    169a:	b6 95       	lsr	r27
    169c:	a7 95       	ror	r26
    169e:	97 95       	ror	r25
    16a0:	87 95       	ror	r24
    16a2:	2a 95       	dec	r18
    16a4:	d1 f7       	brne	.-12     	; 0x169a <qtm_ptc_start_measurement_seq+0xc6>
    16a6:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <max_conversion_cycles>
    16aa:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <max_conversion_cycles+0x1>
    16ae:	a0 93 78 01 	sts	0x0178, r26	; 0x800178 <max_conversion_cycles+0x2>
    16b2:	b0 93 79 01 	sts	0x0179, r27	; 0x800179 <max_conversion_cycles+0x3>
    16b6:	19 82       	std	Y+1, r1	; 0x01
    16b8:	1a 82       	std	Y+2, r1	; 0x02
    16ba:	1b 82       	std	Y+3, r1	; 0x03
    16bc:	1c 82       	std	Y+4, r1	; 0x04
    16be:	21 e0       	ldi	r18, 0x01	; 1
    16c0:	49 81       	ldd	r20, Y+1	; 0x01
    16c2:	5a 81       	ldd	r21, Y+2	; 0x02
    16c4:	6b 81       	ldd	r22, Y+3	; 0x03
    16c6:	7c 81       	ldd	r23, Y+4	; 0x04
    16c8:	48 17       	cp	r20, r24
    16ca:	59 07       	cpc	r21, r25
    16cc:	6a 07       	cpc	r22, r26
    16ce:	7b 07       	cpc	r23, r27
    16d0:	b0 f4       	brcc	.+44     	; 0x16fe <qtm_ptc_start_measurement_seq+0x12a>
    16d2:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <ptc_eoc_ok_flag>
    16d6:	33 23       	and	r19, r19
    16d8:	29 f0       	breq	.+10     	; 0x16e4 <qtm_ptc_start_measurement_seq+0x110>
    16da:	89 83       	std	Y+1, r24	; 0x01
    16dc:	9a 83       	std	Y+2, r25	; 0x02
    16de:	ab 83       	std	Y+3, r26	; 0x03
    16e0:	bc 83       	std	Y+4, r27	; 0x04
    16e2:	20 e0       	ldi	r18, 0x00	; 0
    16e4:	49 81       	ldd	r20, Y+1	; 0x01
    16e6:	5a 81       	ldd	r21, Y+2	; 0x02
    16e8:	6b 81       	ldd	r22, Y+3	; 0x03
    16ea:	7c 81       	ldd	r23, Y+4	; 0x04
    16ec:	4f 5f       	subi	r20, 0xFF	; 255
    16ee:	5f 4f       	sbci	r21, 0xFF	; 255
    16f0:	6f 4f       	sbci	r22, 0xFF	; 255
    16f2:	7f 4f       	sbci	r23, 0xFF	; 255
    16f4:	49 83       	std	Y+1, r20	; 0x01
    16f6:	5a 83       	std	Y+2, r21	; 0x02
    16f8:	6b 83       	std	Y+3, r22	; 0x03
    16fa:	7c 83       	std	Y+4, r23	; 0x04
    16fc:	e1 cf       	rjmp	.-62     	; 0x16c0 <qtm_ptc_start_measurement_seq+0xec>
    16fe:	22 23       	and	r18, r18
    1700:	b9 f0       	breq	.+46     	; 0x1730 <qtm_ptc_start_measurement_seq+0x15c>
    1702:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1706:	80 ff       	sbrs	r24, 0
    1708:	13 c0       	rjmp	.+38     	; 0x1730 <qtm_ptc_start_measurement_seq+0x15c>
    170a:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    170e:	00 00       	nop
    1710:	82 e1       	ldi	r24, 0x12	; 18
    1712:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1716:	00 00       	nop
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    171e:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <ptc_lockups>
    1722:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <ptc_lockups+0x1>
    1726:	01 96       	adiw	r24, 0x01	; 1
    1728:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <ptc_lockups+0x1>
    172c:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <ptc_lockups>
    1730:	81 e0       	ldi	r24, 0x01	; 1
    1732:	42 c0       	rjmp	.+132    	; 0x17b8 <qtm_ptc_start_measurement_seq+0x1e4>
    1734:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    1738:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    173c:	70 93 6d 01 	sts	0x016D, r23	; 0x80016d <ptc_seq_measure_complete_pointer+0x1>
    1740:	60 93 6c 01 	sts	0x016C, r22	; 0x80016c <ptc_seq_measure_complete_pointer>
    1744:	dc 01       	movw	r26, r24
    1746:	ed 91       	ld	r30, X+
    1748:	fc 91       	ld	r31, X
    174a:	82 81       	ldd	r24, Z+2	; 0x02
    174c:	80 34       	cpi	r24, 0x40	; 64
    174e:	11 f4       	brne	.+4      	; 0x1754 <qtm_ptc_start_measurement_seq+0x180>
    1750:	88 e0       	ldi	r24, 0x08	; 8
    1752:	03 c0       	rjmp	.+6      	; 0x175a <qtm_ptc_start_measurement_seq+0x186>
    1754:	80 38       	cpi	r24, 0x80	; 128
    1756:	79 f5       	brne	.+94     	; 0x17b6 <qtm_ptc_start_measurement_seq+0x1e2>
    1758:	8a e0       	ldi	r24, 0x0A	; 10
    175a:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    175e:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <qtm_acquisition_control_working_set_ptr>
    1762:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <qtm_acquisition_control_working_set_ptr+0x1>
    1766:	01 90       	ld	r0, Z+
    1768:	f0 81       	ld	r31, Z
    176a:	e0 2d       	mov	r30, r0
    176c:	84 81       	ldd	r24, Z+4	; 0x04
    176e:	80 31       	cpi	r24, 0x10	; 16
    1770:	08 f0       	brcs	.+2      	; 0x1774 <qtm_ptc_start_measurement_seq+0x1a0>
    1772:	80 e1       	ldi	r24, 0x10	; 16
    1774:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    1778:	81 e0       	ldi	r24, 0x01	; 1
    177a:	84 bf       	out	0x34, r24	; 52
    177c:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    1780:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <current_measure_channel+0x1>
    1784:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <current_measure_channel>
    1788:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <select_next_channel_to_measure>
    178c:	81 11       	cpse	r24, r1
    178e:	0b c0       	rjmp	.+22     	; 0x17a6 <qtm_ptc_start_measurement_seq+0x1d2>
    1790:	84 e0       	ldi	r24, 0x04	; 4
    1792:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <touch_seq_lib_state>
    1796:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <current_measure_channel>
    179a:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <current_measure_channel+0x1>
    179e:	0e 94 14 08 	call	0x1028	; 0x1028 <qtm_measure_node>
    17a2:	80 e0       	ldi	r24, 0x00	; 0
    17a4:	09 c0       	rjmp	.+18     	; 0x17b8 <qtm_ptc_start_measurement_seq+0x1e4>
    17a6:	82 e0       	ldi	r24, 0x02	; 2
    17a8:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <touch_seq_lib_state>
    17ac:	05 c0       	rjmp	.+10     	; 0x17b8 <qtm_ptc_start_measurement_seq+0x1e4>
    17ae:	8b e0       	ldi	r24, 0x0B	; 11
    17b0:	03 c0       	rjmp	.+6      	; 0x17b8 <qtm_ptc_start_measurement_seq+0x1e4>
    17b2:	83 e0       	ldi	r24, 0x03	; 3
    17b4:	01 c0       	rjmp	.+2      	; 0x17b8 <qtm_ptc_start_measurement_seq+0x1e4>
    17b6:	82 e0       	ldi	r24, 0x02	; 2
    17b8:	0f 90       	pop	r0
    17ba:	0f 90       	pop	r0
    17bc:	0f 90       	pop	r0
    17be:	0f 90       	pop	r0
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	08 95       	ret

000017c6 <qtm_enable_sensor_node>:
    17c6:	00 97       	sbiw	r24, 0x00	; 0
    17c8:	c9 f0       	breq	.+50     	; 0x17fc <qtm_enable_sensor_node+0x36>
    17ca:	dc 01       	movw	r26, r24
    17cc:	ed 91       	ld	r30, X+
    17ce:	fc 91       	ld	r31, X
    17d0:	11 97       	sbiw	r26, 0x01	; 1
    17d2:	20 81       	ld	r18, Z
    17d4:	31 81       	ldd	r19, Z+1	; 0x01
    17d6:	26 17       	cp	r18, r22
    17d8:	37 07       	cpc	r19, r23
    17da:	90 f0       	brcs	.+36     	; 0x1800 <qtm_enable_sensor_node+0x3a>
    17dc:	45 e0       	ldi	r20, 0x05	; 5
    17de:	46 9f       	mul	r20, r22
    17e0:	90 01       	movw	r18, r0
    17e2:	47 9f       	mul	r20, r23
    17e4:	30 0d       	add	r19, r0
    17e6:	11 24       	eor	r1, r1
    17e8:	14 96       	adiw	r26, 0x04	; 4
    17ea:	ed 91       	ld	r30, X+
    17ec:	fc 91       	ld	r31, X
    17ee:	15 97       	sbiw	r26, 0x05	; 5
    17f0:	e2 0f       	add	r30, r18
    17f2:	f3 1f       	adc	r31, r19
    17f4:	81 e0       	ldi	r24, 0x01	; 1
    17f6:	80 83       	st	Z, r24
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	08 95       	ret
    17fc:	8b e0       	ldi	r24, 0x0B	; 11
    17fe:	08 95       	ret
    1800:	82 e0       	ldi	r24, 0x02	; 2
    1802:	08 95       	ret

00001804 <qtm_calibrate_sensor_node>:
    1804:	00 97       	sbiw	r24, 0x00	; 0
    1806:	d1 f1       	breq	.+116    	; 0x187c <qtm_calibrate_sensor_node+0x78>
    1808:	dc 01       	movw	r26, r24
    180a:	ed 91       	ld	r30, X+
    180c:	fc 91       	ld	r31, X
    180e:	11 97       	sbiw	r26, 0x01	; 1
    1810:	20 81       	ld	r18, Z
    1812:	31 81       	ldd	r19, Z+1	; 0x01
    1814:	26 17       	cp	r18, r22
    1816:	37 07       	cpc	r19, r23
    1818:	98 f1       	brcs	.+102    	; 0x1880 <qtm_calibrate_sensor_node+0x7c>
    181a:	22 81       	ldd	r18, Z+2	; 0x02
    181c:	14 96       	adiw	r26, 0x04	; 4
    181e:	ed 91       	ld	r30, X+
    1820:	fc 91       	ld	r31, X
    1822:	15 97       	sbiw	r26, 0x05	; 5
    1824:	20 34       	cpi	r18, 0x40	; 64
    1826:	59 f4       	brne	.+22     	; 0x183e <qtm_calibrate_sensor_node+0x3a>
    1828:	85 e0       	ldi	r24, 0x05	; 5
    182a:	86 9f       	mul	r24, r22
    182c:	d0 01       	movw	r26, r0
    182e:	87 9f       	mul	r24, r23
    1830:	b0 0d       	add	r27, r0
    1832:	11 24       	eor	r1, r1
    1834:	ae 0f       	add	r26, r30
    1836:	bf 1f       	adc	r27, r31
    1838:	84 e3       	ldi	r24, 0x34	; 52
    183a:	92 e0       	ldi	r25, 0x02	; 2
    183c:	0c c0       	rjmp	.+24     	; 0x1856 <qtm_calibrate_sensor_node+0x52>
    183e:	20 38       	cpi	r18, 0x80	; 128
    1840:	81 f4       	brne	.+32     	; 0x1862 <qtm_calibrate_sensor_node+0x5e>
    1842:	85 e0       	ldi	r24, 0x05	; 5
    1844:	86 9f       	mul	r24, r22
    1846:	d0 01       	movw	r26, r0
    1848:	87 9f       	mul	r24, r23
    184a:	b0 0d       	add	r27, r0
    184c:	11 24       	eor	r1, r1
    184e:	ae 0f       	add	r26, r30
    1850:	bf 1f       	adc	r27, r31
    1852:	87 e6       	ldi	r24, 0x67	; 103
    1854:	95 e0       	ldi	r25, 0x05	; 5
    1856:	14 96       	adiw	r26, 0x04	; 4
    1858:	9c 93       	st	X, r25
    185a:	8e 93       	st	-X, r24
    185c:	13 97       	sbiw	r26, 0x03	; 3
    185e:	80 e0       	ldi	r24, 0x00	; 0
    1860:	01 c0       	rjmp	.+2      	; 0x1864 <qtm_calibrate_sensor_node+0x60>
    1862:	82 e0       	ldi	r24, 0x02	; 2
    1864:	95 e0       	ldi	r25, 0x05	; 5
    1866:	96 9f       	mul	r25, r22
    1868:	90 01       	movw	r18, r0
    186a:	97 9f       	mul	r25, r23
    186c:	30 0d       	add	r19, r0
    186e:	11 24       	eor	r1, r1
    1870:	e2 0f       	add	r30, r18
    1872:	f3 1f       	adc	r31, r19
    1874:	90 81       	ld	r25, Z
    1876:	92 60       	ori	r25, 0x02	; 2
    1878:	90 83       	st	Z, r25
    187a:	08 95       	ret
    187c:	8b e0       	ldi	r24, 0x0B	; 11
    187e:	08 95       	ret
    1880:	82 e0       	ldi	r24, 0x02	; 2
    1882:	08 95       	ret

00001884 <qtm_m324pb_ptc_handler_eoc>:
    1884:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1888:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    188c:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    1890:	e0 91 73 01 	lds	r30, 0x0173	; 0x800173 <current_measure_channel>
    1894:	f0 91 74 01 	lds	r31, 0x0174	; 0x800174 <current_measure_channel+0x1>
    1898:	ee 0f       	add	r30, r30
    189a:	ff 1f       	adc	r31, r31
    189c:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <qtm_raw_data_measurements_ptr>
    18a0:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <qtm_raw_data_measurements_ptr+0x1>
    18a4:	e4 0f       	add	r30, r20
    18a6:	f5 1f       	adc	r31, r21
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	92 2b       	or	r25, r18
    18ac:	91 83       	std	Z+1, r25	; 0x01
    18ae:	80 83       	st	Z, r24
    18b0:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <good_eocs>
    18b4:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <good_eocs+0x1>
    18b8:	01 96       	adiw	r24, 0x01	; 1
    18ba:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <good_eocs+0x1>
    18be:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <good_eocs>
    18c2:	89 2b       	or	r24, r25
    18c4:	21 f4       	brne	.+8      	; 0x18ce <qtm_m324pb_ptc_handler_eoc+0x4a>
    18c6:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <ptc_lockups+0x1>
    18ca:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <ptc_lockups>
    18ce:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <current_measure_channel>
    18d2:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <current_measure_channel+0x1>
    18d6:	01 96       	adiw	r24, 0x01	; 1
    18d8:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <current_measure_channel+0x1>
    18dc:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <current_measure_channel>
    18e0:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <select_next_channel_to_measure>
    18e4:	81 11       	cpse	r24, r1
    18e6:	0a c0       	rjmp	.+20     	; 0x18fc <qtm_m324pb_ptc_handler_eoc+0x78>
    18e8:	84 e0       	ldi	r24, 0x04	; 4
    18ea:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <touch_seq_lib_state>
    18ee:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <current_measure_channel>
    18f2:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <current_measure_channel+0x1>
    18f6:	0e 94 14 08 	call	0x1028	; 0x1028 <qtm_measure_node>
    18fa:	05 c0       	rjmp	.+10     	; 0x1906 <qtm_m324pb_ptc_handler_eoc+0x82>
    18fc:	e0 91 6c 01 	lds	r30, 0x016C	; 0x80016c <ptc_seq_measure_complete_pointer>
    1900:	f0 91 6d 01 	lds	r31, 0x016D	; 0x80016d <ptc_seq_measure_complete_pointer+0x1>
    1904:	09 95       	icall
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <ptc_eoc_ok_flag>
    190c:	08 95       	ret

0000190e <__umulhisi3>:
    190e:	a2 9f       	mul	r26, r18
    1910:	b0 01       	movw	r22, r0
    1912:	b3 9f       	mul	r27, r19
    1914:	c0 01       	movw	r24, r0
    1916:	a3 9f       	mul	r26, r19
    1918:	70 0d       	add	r23, r0
    191a:	81 1d       	adc	r24, r1
    191c:	11 24       	eor	r1, r1
    191e:	91 1d       	adc	r25, r1
    1920:	b2 9f       	mul	r27, r18
    1922:	70 0d       	add	r23, r0
    1924:	81 1d       	adc	r24, r1
    1926:	11 24       	eor	r1, r1
    1928:	91 1d       	adc	r25, r1
    192a:	08 95       	ret

0000192c <_exit>:
    192c:	f8 94       	cli

0000192e <__stop_program>:
    192e:	ff cf       	rjmp	.-2      	; 0x192e <__stop_program>
