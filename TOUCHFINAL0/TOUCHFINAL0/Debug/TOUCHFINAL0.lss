
TOUCHFINAL0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00001a78  00001b0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000088  00800196  00800196  00001ba2  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001ba2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e0  00000000  00000000  00001c48  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000326f  00000000  00000000  00001f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013d0  00000000  00000000  00005197  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000152d  00000000  00000000  00006567  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000005cc  00000000  00000000  00007a94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000018e5  00000000  00000000  00008060  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bea  00000000  00000000  00009945  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  0000a52f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 c1 03 	jmp	0x782	; 0x782 <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 4a 03 	jmp	0x694	; 0x694 <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	e8 e7       	ldi	r30, 0x78	; 120
      e0:	fa e1       	ldi	r31, 0x1A	; 26
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a6 39       	cpi	r26, 0x96	; 150
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	a6 e9       	ldi	r26, 0x96	; 150
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	ae 31       	cpi	r26, 0x1E	; 30
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 cb 01 	call	0x396	; 0x396 <main>
     102:	0c 94 3a 0d 	jmp	0x1a74	; 0x1a74 <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     10a:	0e 94 7e 03 	call	0x6fc	; 0x6fc <system_init>

	touch_init();
     10e:	0e 94 7d 02 	call	0x4fa	; 0x4fa <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31

	mega_touch_timer();
     136:	0e 94 fd 02 	call	0x5fa	; 0x5fa <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     13a:	a8 9a       	sbi	0x15, 0	; 21
}
     13c:	ff 91       	pop	r31
     13e:	ef 91       	pop	r30
     140:	bf 91       	pop	r27
     142:	af 91       	pop	r26
     144:	9f 91       	pop	r25
     146:	8f 91       	pop	r24
     148:	7f 91       	pop	r23
     14a:	6f 91       	pop	r22
     14c:	5f 91       	pop	r21
     14e:	4f 91       	pop	r20
     150:	3f 91       	pop	r19
     152:	2f 91       	pop	r18
     154:	0f 90       	pop	r0
     156:	0f be       	out	0x3f, r0	; 63
     158:	0f 90       	pop	r0
     15a:	1f 90       	pop	r1
     15c:	18 95       	reti

0000015e <SPI_MasterInit>:
uint8_t previous_key_status_6 = 0;
uint8_t touch_counter_6 = 0;
void SPI_MasterInit()
{
	// Set SS, MOSI, and SCK as outputs
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     15e:	84 b1       	in	r24, 0x04	; 4
     160:	80 6b       	ori	r24, 0xB0	; 176
     162:	84 b9       	out	0x04, r24	; 4
	// Enable SPI, Set as Master
	SPCR0 = (1 << SPE) | (1 << MSTR);
     164:	80 e5       	ldi	r24, 0x50	; 80
     166:	8c bd       	out	0x2c, r24	; 44
	// Set SS pin high (inactive)
	PORTB |= (1 << SPI_SS_PIN);
     168:	2c 9a       	sbi	0x05, 4	; 5
     16a:	08 95       	ret

0000016c <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(uint8_t data)
{
	// Set SS pin low (activate slave)
	PORTB &= ~(1 << SPI_SS_PIN);
     16c:	2c 98       	cbi	0x05, 4	; 5
	// Start transmission
	SPDR0 = data;
     16e:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission to complete
	while (!(SPSR0 & (1 << SPIF)))
     170:	0d b4       	in	r0, 0x2d	; 45
     172:	07 fe       	sbrs	r0, 7
     174:	fd cf       	rjmp	.-6      	; 0x170 <SPI_MasterTransmit+0x4>
	{
		// Add timeout or error handling if necessary
	}
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
     176:	2c 9a       	sbi	0x05, 4	; 5
     178:	08 95       	ret

0000017a <SPI_MasterTransmitString>:
		}
	}
}

// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
     17a:	cf 93       	push	r28
     17c:	df 93       	push	r29
     17e:	ec 01       	movw	r28, r24
	for (int i = 0; str[i] != '\0'; i++) {
     180:	88 81       	ld	r24, Y
     182:	88 23       	and	r24, r24
     184:	61 f0       	breq	.+24     	; 0x19e <SPI_MasterTransmitString+0x24>
     186:	21 96       	adiw	r28, 0x01	; 1
		SPI_MasterTransmit(str[i]);
     188:	0e 94 b6 00 	call	0x16c	; 0x16c <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18c:	87 ea       	ldi	r24, 0xA7	; 167
     18e:	91 e6       	ldi	r25, 0x61	; 97
     190:	01 97       	sbiw	r24, 0x01	; 1
     192:	f1 f7       	brne	.-4      	; 0x190 <SPI_MasterTransmitString+0x16>
     194:	00 c0       	rjmp	.+0      	; 0x196 <SPI_MasterTransmitString+0x1c>
     196:	00 00       	nop
	}
}

// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     198:	89 91       	ld	r24, Y+
     19a:	81 11       	cpse	r24, r1
     19c:	f5 cf       	rjmp	.-22     	; 0x188 <SPI_MasterTransmitString+0xe>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
     19e:	df 91       	pop	r29
     1a0:	cf 91       	pop	r28
     1a2:	08 95       	ret

000001a4 <touchpin1>:
	}
	return 0;
}
void touchpin1() {
	// Get the status of the first touch sensor
	previous_key_status_1 = key_status_1;
     1a4:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <key_status_1>
     1a8:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1ac:	80 e0       	ldi	r24, 0x00	; 0
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
     1b4:	80 78       	andi	r24, 0x80	; 128
     1b6:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1ba:	88 23       	and	r24, r24
     1bc:	c1 f0       	breq	.+48     	; 0x1ee <touchpin1+0x4a>
     1be:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <previous_key_status_1>
     1c2:	81 11       	cpse	r24, r1
     1c4:	14 c0       	rjmp	.+40     	; 0x1ee <touchpin1+0x4a>
		touch_counter_1++;
     1c6:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <touch_counter_1>
     1ca:	8f 5f       	subi	r24, 0xFF	; 255
     1cc:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <touch_counter_1>
		if (touch_counter_1 == 1) {
     1d0:	81 30       	cpi	r24, 0x01	; 1
     1d2:	29 f4       	brne	.+10     	; 0x1de <touchpin1+0x3a>
			SPI_MasterTransmitString("L1");
     1d4:	8e e7       	ldi	r24, 0x7E	; 126
     1d6:	91 e0       	ldi	r25, 0x01	; 1
     1d8:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     1dc:	08 95       	ret
		}
		else if (touch_counter_1 == 2) {
     1de:	82 30       	cpi	r24, 0x02	; 2
     1e0:	31 f4       	brne	.+12     	; 0x1ee <touchpin1+0x4a>
			SPI_MasterTransmitString("L1");
     1e2:	8e e7       	ldi	r24, 0x7E	; 126
     1e4:	91 e0       	ldi	r25, 0x01	; 1
     1e6:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_1 = 0;
     1ea:	10 92 a5 01 	sts	0x01A5, r1	; 0x8001a5 <touch_counter_1>
     1ee:	08 95       	ret

000001f0 <touchpin2>:
		}
	}
}
void touchpin2() {
	// Get the status of the first touch sensor
	previous_key_status_2 = key_status_2;
     1f0:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <key_status_2>
     1f4:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
     200:	80 78       	andi	r24, 0x80	; 128
     202:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <key_status_2>
	if (key_status_2 && !previous_key_status_2) {
     206:	88 23       	and	r24, r24
     208:	c1 f0       	breq	.+48     	; 0x23a <touchpin2+0x4a>
     20a:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <previous_key_status_2>
     20e:	81 11       	cpse	r24, r1
     210:	14 c0       	rjmp	.+40     	; 0x23a <touchpin2+0x4a>
		touch_counter_2++;
     212:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <touch_counter_2>
     216:	8f 5f       	subi	r24, 0xFF	; 255
     218:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <touch_counter_2>
		if (touch_counter_2 == 1) {
     21c:	81 30       	cpi	r24, 0x01	; 1
     21e:	29 f4       	brne	.+10     	; 0x22a <touchpin2+0x3a>
			SPI_MasterTransmitString("L2");
     220:	81 e8       	ldi	r24, 0x81	; 129
     222:	91 e0       	ldi	r25, 0x01	; 1
     224:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     228:	08 95       	ret
		}
		else if (touch_counter_2 == 2) {
     22a:	82 30       	cpi	r24, 0x02	; 2
     22c:	31 f4       	brne	.+12     	; 0x23a <touchpin2+0x4a>
			SPI_MasterTransmitString("L2");
     22e:	81 e8       	ldi	r24, 0x81	; 129
     230:	91 e0       	ldi	r25, 0x01	; 1
     232:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_2 = 0;
     236:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <touch_counter_2>
     23a:	08 95       	ret

0000023c <touchpin3>:
		}
	}
}
void touchpin3() {
	// Get the status of the first touch sensor
	previous_key_status_3 = key_status_3;
     23c:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <key_status_3>
     240:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <previous_key_status_3>
	key_status_3 = get_sensor_state(2) & 0x80;
     244:	82 e0       	ldi	r24, 0x02	; 2
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
     24c:	80 78       	andi	r24, 0x80	; 128
     24e:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <key_status_3>
	if (key_status_3 && !previous_key_status_3) {
     252:	88 23       	and	r24, r24
     254:	c1 f0       	breq	.+48     	; 0x286 <touchpin3+0x4a>
     256:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <previous_key_status_3>
     25a:	81 11       	cpse	r24, r1
     25c:	14 c0       	rjmp	.+40     	; 0x286 <touchpin3+0x4a>
		touch_counter_3++;
     25e:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <touch_counter_3>
     262:	8f 5f       	subi	r24, 0xFF	; 255
     264:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <touch_counter_3>
		if (touch_counter_3 == 1) {
     268:	81 30       	cpi	r24, 0x01	; 1
     26a:	29 f4       	brne	.+10     	; 0x276 <touchpin3+0x3a>
			SPI_MasterTransmitString("L3");
     26c:	84 e8       	ldi	r24, 0x84	; 132
     26e:	91 e0       	ldi	r25, 0x01	; 1
     270:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     274:	08 95       	ret
		}
		else if (touch_counter_3 == 2) {
     276:	82 30       	cpi	r24, 0x02	; 2
     278:	31 f4       	brne	.+12     	; 0x286 <touchpin3+0x4a>
			SPI_MasterTransmitString("L3");
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_3 = 0;
     282:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <touch_counter_3>
     286:	08 95       	ret

00000288 <touchpin4>:
		}
	}
}
void touchpin4() {
	// Get the status of the first touch sensor
	previous_key_status_4 = key_status_4;
     288:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <key_status_4>
     28c:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     290:	83 e0       	ldi	r24, 0x03	; 3
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
     298:	80 78       	andi	r24, 0x80	; 128
     29a:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <key_status_4>
	if (key_status_4 && !previous_key_status_4) {
     29e:	88 23       	and	r24, r24
     2a0:	c1 f0       	breq	.+48     	; 0x2d2 <touchpin4+0x4a>
     2a2:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <previous_key_status_4>
     2a6:	81 11       	cpse	r24, r1
     2a8:	14 c0       	rjmp	.+40     	; 0x2d2 <touchpin4+0x4a>
		touch_counter_4++;
     2aa:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <touch_counter_4>
     2ae:	8f 5f       	subi	r24, 0xFF	; 255
     2b0:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <touch_counter_4>
		if (touch_counter_4 == 1) {
     2b4:	81 30       	cpi	r24, 0x01	; 1
     2b6:	29 f4       	brne	.+10     	; 0x2c2 <touchpin4+0x3a>
			SPI_MasterTransmitString("F1");
     2b8:	87 e8       	ldi	r24, 0x87	; 135
     2ba:	91 e0       	ldi	r25, 0x01	; 1
     2bc:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     2c0:	08 95       	ret
		}
		else if (touch_counter_4 == 2) {
     2c2:	82 30       	cpi	r24, 0x02	; 2
     2c4:	31 f4       	brne	.+12     	; 0x2d2 <touchpin4+0x4a>
			SPI_MasterTransmitString("F1");
     2c6:	87 e8       	ldi	r24, 0x87	; 135
     2c8:	91 e0       	ldi	r25, 0x01	; 1
     2ca:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_4 = 0;
     2ce:	10 92 9c 01 	sts	0x019C, r1	; 0x80019c <touch_counter_4>
     2d2:	08 95       	ret

000002d4 <touchpin5>:
		}
	}
}
void touchpin5() {
	// Get the status of the first touch sensor
	previous_key_status_5 = key_status_5;
     2d4:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <key_status_5>
     2d8:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <previous_key_status_5>
	key_status_5 = get_sensor_state(4) & 0x80;
     2dc:	84 e0       	ldi	r24, 0x04	; 4
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
     2e4:	80 78       	andi	r24, 0x80	; 128
     2e6:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <key_status_5>
	if (key_status_5 && !previous_key_status_5) {
     2ea:	88 23       	and	r24, r24
     2ec:	c1 f0       	breq	.+48     	; 0x31e <touchpin5+0x4a>
     2ee:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <previous_key_status_5>
     2f2:	81 11       	cpse	r24, r1
     2f4:	14 c0       	rjmp	.+40     	; 0x31e <touchpin5+0x4a>
		touch_counter_5++;
     2f6:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <touch_counter_5>
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <touch_counter_5>
		if (touch_counter_5 == 1) {
     300:	81 30       	cpi	r24, 0x01	; 1
     302:	29 f4       	brne	.+10     	; 0x30e <touchpin5+0x3a>
			SPI_MasterTransmitString("U1");
     304:	8a e8       	ldi	r24, 0x8A	; 138
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     30c:	08 95       	ret
		}
		else if (touch_counter_5 == 2) {
     30e:	82 30       	cpi	r24, 0x02	; 2
     310:	31 f4       	brne	.+12     	; 0x31e <touchpin5+0x4a>
			SPI_MasterTransmitString("U1");
     312:	8a e8       	ldi	r24, 0x8A	; 138
     314:	91 e0       	ldi	r25, 0x01	; 1
     316:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_5 = 0;
     31a:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <touch_counter_5>
     31e:	08 95       	ret

00000320 <touchpin6>:
		}
	}
}
void touchpin6() {
	// Get the status of the first touch sensor
	previous_key_status_6 = key_status_6;
     320:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <key_status_6>
     324:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <previous_key_status_6>
	key_status_6 = get_sensor_state(5) & 0x80;
     328:	85 e0       	ldi	r24, 0x05	; 5
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
     330:	80 78       	andi	r24, 0x80	; 128
     332:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <key_status_6>
	if (key_status_6 && !previous_key_status_6) {
     336:	88 23       	and	r24, r24
     338:	c1 f0       	breq	.+48     	; 0x36a <touchpin6+0x4a>
     33a:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <previous_key_status_6>
     33e:	81 11       	cpse	r24, r1
     340:	14 c0       	rjmp	.+40     	; 0x36a <touchpin6+0x4a>
		touch_counter_6++;
     342:	80 91 96 01 	lds	r24, 0x0196	; 0x800196 <__data_end>
     346:	8f 5f       	subi	r24, 0xFF	; 255
     348:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <__data_end>
		if (touch_counter_6 == 1) {
     34c:	81 30       	cpi	r24, 0x01	; 1
     34e:	29 f4       	brne	.+10     	; 0x35a <touchpin6+0x3a>
			SPI_MasterTransmitString("D1");
     350:	8d e8       	ldi	r24, 0x8D	; 141
     352:	91 e0       	ldi	r25, 0x01	; 1
     354:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
     358:	08 95       	ret
		}
		else if (touch_counter_6 == 2) {
     35a:	82 30       	cpi	r24, 0x02	; 2
     35c:	31 f4       	brne	.+12     	; 0x36a <touchpin6+0x4a>
			SPI_MasterTransmitString("D1");
     35e:	8d e8       	ldi	r24, 0x8D	; 141
     360:	91 e0       	ldi	r25, 0x01	; 1
     362:	0e 94 bd 00 	call	0x17a	; 0x17a <SPI_MasterTransmitString>
			
			touch_counter_6 = 0;
     366:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <__data_end>
     36a:	08 95       	ret

0000036c <loop>:
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
}
void loop()
{
	touch_process();
     36c:	0e 94 bb 02 	call	0x576	; 0x576 <touch_process>
	// Check if touch measurement is done
	if (measurement_done_touch == 1)
     370:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <measurement_done_touch>
     374:	81 30       	cpi	r24, 0x01	; 1
     376:	71 f4       	brne	.+28     	; 0x394 <loop+0x28>
	{
		measurement_done_touch = 0;
     378:	10 92 ac 01 	sts	0x01AC, r1	; 0x8001ac <measurement_done_touch>
		touchpin1();
     37c:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <touchpin1>
		touchpin2();
     380:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <touchpin2>
		touchpin3();
     384:	0e 94 1e 01 	call	0x23c	; 0x23c <touchpin3>
		touchpin4();
     388:	0e 94 44 01 	call	0x288	; 0x288 <touchpin4>
		touchpin5();
     38c:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <touchpin5>
		touchpin6();
     390:	0e 94 90 01 	call	0x320	; 0x320 <touchpin6>
     394:	08 95       	ret

00000396 <main>:
	}
}
int main(void)
{
	/* Initializes MCU, drivers, and middleware */
	atmel_start_init();
     396:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	/* Enable interrupts */
	cpu_irq_enable();
     39a:	78 94       	sei
	// Initialize SPI as master
	SPI_MasterInit();
     39c:	0e 94 af 00 	call	0x15e	; 0x15e <SPI_MasterInit>
	while (1)
	{
		loop();
     3a0:	0e 94 b6 01 	call	0x36c	; 0x36c <loop>
     3a4:	fd cf       	rjmp	.-6      	; 0x3a0 <main+0xa>

000003a6 <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     3a6:	08 95       	ret

000003a8 <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     3a8:	cf 93       	push	r28
     3aa:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     3ac:	0e 94 35 04 	call	0x86a	; 0x86a <USART_is_tx_ready>
     3b0:	88 23       	and	r24, r24
     3b2:	e1 f3       	breq	.-8      	; 0x3ac <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     3b4:	8c 2f       	mov	r24, r28
     3b6:	0e 94 43 04 	call	0x886	; 0x886 <USART_write>

	while (USART_is_tx_busy())
     3ba:	0e 94 3b 04 	call	0x876	; 0x876 <USART_is_tx_busy>
     3be:	81 11       	cpse	r24, r1
     3c0:	fc cf       	rjmp	.-8      	; 0x3ba <datastreamer_transmit+0x12>
		;
}
     3c2:	cf 91       	pop	r28
     3c4:	08 95       	ret

000003c6 <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     3c6:	ef 92       	push	r14
     3c8:	ff 92       	push	r15
     3ca:	0f 93       	push	r16
     3cc:	1f 93       	push	r17
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	00 d0       	rcall	.+0      	; 0x3d4 <datastreamer_output+0xe>
     3d4:	cd b7       	in	r28, 0x3d	; 61
     3d6:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     3d8:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <sequence.2511>
     3dc:	8f 70       	andi	r24, 0x0F	; 15
     3de:	81 f4       	brne	.+32     	; 0x400 <__EEPROM_REGION_LENGTH__>
     3e0:	00 e0       	ldi	r16, 0x00	; 0
     3e2:	11 e0       	ldi	r17, 0x01	; 1
     3e4:	0f 2e       	mov	r0, r31
     3e6:	f3 e1       	ldi	r31, 0x13	; 19
     3e8:	ef 2e       	mov	r14, r31
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	ff 2e       	mov	r15, r31
     3ee:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     3f0:	f8 01       	movw	r30, r16
     3f2:	81 91       	ld	r24, Z+
     3f4:	8f 01       	movw	r16, r30
     3f6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     3fa:	e0 16       	cp	r14, r16
     3fc:	f1 06       	cpc	r15, r17
     3fe:	c1 f7       	brne	.-16     	; 0x3f0 <datastreamer_output+0x2a>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     400:	85 e5       	ldi	r24, 0x55	; 85
     402:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     406:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <sequence.2511>
     40a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     40e:	1a 82       	std	Y+2, r1	; 0x02
     410:	19 82       	std	Y+1, r1	; 0x01
     412:	89 81       	ldd	r24, Y+1	; 0x01
     414:	9a 81       	ldd	r25, Y+2	; 0x02
     416:	06 97       	sbiw	r24, 0x06	; 6
     418:	08 f0       	brcs	.+2      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
     41a:	53 c0       	rjmp	.+166    	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	9a 81       	ldd	r25, Y+2	; 0x02
     420:	0e 94 14 03 	call	0x628	; 0x628 <get_sensor_node_signal>
     424:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     426:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     42a:	81 2f       	mov	r24, r17
     42c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     430:	89 81       	ldd	r24, Y+1	; 0x01
     432:	9a 81       	ldd	r25, Y+2	; 0x02
     434:	0e 94 21 03 	call	0x642	; 0x642 <get_sensor_node_reference>
     438:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     43a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     43e:	81 2f       	mov	r24, r17
     440:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     444:	89 81       	ldd	r24, Y+1	; 0x01
     446:	9a 81       	ldd	r25, Y+2	; 0x02
     448:	0e 94 14 03 	call	0x628	; 0x628 <get_sensor_node_signal>
     44c:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     44e:	89 81       	ldd	r24, Y+1	; 0x01
     450:	9a 81       	ldd	r25, Y+2	; 0x02
     452:	0e 94 21 03 	call	0x642	; 0x642 <get_sensor_node_reference>
     456:	08 1b       	sub	r16, r24
     458:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     45a:	80 2f       	mov	r24, r16
     45c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     460:	81 2f       	mov	r24, r17
     462:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     466:	89 81       	ldd	r24, Y+1	; 0x01
     468:	9a 81       	ldd	r25, Y+2	; 0x02
     46a:	0e 94 2e 03 	call	0x65c	; 0x65c <get_sensor_cc_val>
     46e:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     470:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     474:	81 2f       	mov	r24, r17
     476:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     47a:	89 81       	ldd	r24, Y+1	; 0x01
     47c:	9a 81       	ldd	r25, Y+2	; 0x02
     47e:	0e 94 3b 03 	call	0x676	; 0x676 <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     482:	88 23       	and	r24, r24
     484:	24 f4       	brge	.+8      	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
			datastreamer_transmit(0x01);
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
     48c:	03 c0       	rjmp	.+6      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
		} else {
			datastreamer_transmit(0x00);
     48e:	80 e0       	ldi	r24, 0x00	; 0
     490:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     494:	89 81       	ldd	r24, Y+1	; 0x01
     496:	9a 81       	ldd	r25, Y+2	; 0x02
     498:	fc 01       	movw	r30, r24
     49a:	ee 0f       	add	r30, r30
     49c:	ff 1f       	adc	r31, r31
     49e:	8e 0f       	add	r24, r30
     4a0:	9f 1f       	adc	r25, r31
     4a2:	fc 01       	movw	r30, r24
     4a4:	e5 5e       	subi	r30, 0xE5	; 229
     4a6:	fe 4f       	sbci	r31, 0xFE	; 254
     4a8:	80 81       	ld	r24, Z
     4aa:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     4ae:	89 81       	ldd	r24, Y+1	; 0x01
     4b0:	9a 81       	ldd	r25, Y+2	; 0x02
     4b2:	01 96       	adiw	r24, 0x01	; 1
     4b4:	9a 83       	std	Y+2, r25	; 0x02
     4b6:	89 83       	std	Y+1, r24	; 0x01
     4b8:	89 81       	ldd	r24, Y+1	; 0x01
     4ba:	9a 81       	ldd	r25, Y+2	; 0x02
     4bc:	06 97       	sbiw	r24, 0x06	; 6
     4be:	08 f4       	brcc	.+2      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
     4c0:	ad cf       	rjmp	.-166    	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     4c2:	80 91 ab 01 	lds	r24, 0x01AB	; 0x8001ab <module_error_code>
     4c6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     4ca:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <sequence.2511>
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	98 0f       	add	r25, r24
     4d2:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <sequence.2511>
     4d6:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     4da:	8a ea       	ldi	r24, 0xAA	; 170
     4dc:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <datastreamer_transmit>
}
     4e0:	0f 90       	pop	r0
     4e2:	0f 90       	pop	r0
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	0f 91       	pop	r16
     4ec:	ff 90       	pop	r15
     4ee:	ef 90       	pop	r14
     4f0:	08 95       	ret

000004f2 <qtm_measure_complete_callback>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <touch_postprocess_request>
     4f8:	08 95       	ret

000004fa <touch_init>:
     4fa:	0f 93       	push	r16
     4fc:	1f 93       	push	r17
     4fe:	cf 93       	push	r28
     500:	df 93       	push	r29
     502:	88 e0       	ldi	r24, 0x08	; 8
     504:	87 bd       	out	0x27, r24	; 39
     506:	e3 e6       	ldi	r30, 0x63	; 99
     508:	f0 e0       	ldi	r31, 0x00	; 0
     50a:	80 81       	ld	r24, Z
     50c:	87 7f       	andi	r24, 0xF7	; 247
     50e:	80 83       	st	Z, r24
     510:	12 98       	cbi	0x02, 2	; 2
     512:	13 98       	cbi	0x02, 3	; 2
     514:	14 98       	cbi	0x02, 4	; 2
     516:	11 98       	cbi	0x02, 1	; 2
     518:	10 98       	cbi	0x02, 0	; 2
     51a:	15 98       	cbi	0x02, 5	; 2
     51c:	87 e3       	ldi	r24, 0x37	; 55
     51e:	91 e0       	ldi	r25, 0x01	; 1
     520:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <qtm_ptc_init_acquisition_module>
     524:	8a ee       	ldi	r24, 0xEA	; 234
     526:	91 e0       	ldi	r25, 0x01	; 1
     528:	0e 94 84 0b 	call	0x1708	; 0x1708 <qtm_ptc_qtlib_assign_signal_memory>
     52c:	c0 e0       	ldi	r28, 0x00	; 0
     52e:	d0 e0       	ldi	r29, 0x00	; 0
     530:	be 01       	movw	r22, r28
     532:	87 e3       	ldi	r24, 0x37	; 55
     534:	91 e0       	ldi	r25, 0x01	; 1
     536:	0e 94 87 0c 	call	0x190e	; 0x190e <qtm_enable_sensor_node>
     53a:	be 01       	movw	r22, r28
     53c:	87 e3       	ldi	r24, 0x37	; 55
     53e:	91 e0       	ldi	r25, 0x01	; 1
     540:	0e 94 a6 0c 	call	0x194c	; 0x194c <qtm_calibrate_sensor_node>
     544:	21 96       	adiw	r28, 0x01	; 1
     546:	c6 30       	cpi	r28, 0x06	; 6
     548:	d1 05       	cpc	r29, r1
     54a:	91 f7       	brne	.-28     	; 0x530 <touch_init+0x36>
     54c:	0c ec       	ldi	r16, 0xCC	; 204
     54e:	11 e0       	ldi	r17, 0x01	; 1
     550:	c0 e0       	ldi	r28, 0x00	; 0
     552:	a8 01       	movw	r20, r16
     554:	6c 2f       	mov	r22, r28
     556:	83 e1       	ldi	r24, 0x13	; 19
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	0e 94 bf 04 	call	0x97e	; 0x97e <qtm_init_sensor_key>
     55e:	cf 5f       	subi	r28, 0xFF	; 255
     560:	0b 5f       	subi	r16, 0xFB	; 251
     562:	1f 4f       	sbci	r17, 0xFF	; 255
     564:	c6 30       	cpi	r28, 0x06	; 6
     566:	a9 f7       	brne	.-22     	; 0x552 <touch_init+0x58>
     568:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <datastreamer_init>
     56c:	df 91       	pop	r29
     56e:	cf 91       	pop	r28
     570:	1f 91       	pop	r17
     572:	0f 91       	pop	r16
     574:	08 95       	ret

00000576 <touch_process>:
     576:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <time_to_measure_touch_flag>
     57a:	81 30       	cpi	r24, 0x01	; 1
     57c:	51 f4       	brne	.+20     	; 0x592 <touch_process+0x1c>
     57e:	69 e7       	ldi	r22, 0x79	; 121
     580:	72 e0       	ldi	r23, 0x02	; 2
     582:	87 e3       	ldi	r24, 0x37	; 55
     584:	91 e0       	ldi	r25, 0x01	; 1
     586:	0e 94 8e 0b 	call	0x171c	; 0x171c <qtm_ptc_start_measurement_seq>
     58a:	81 11       	cpse	r24, r1
     58c:	02 c0       	rjmp	.+4      	; 0x592 <touch_process+0x1c>
     58e:	10 92 ae 01 	sts	0x01AE, r1	; 0x8001ae <time_to_measure_touch_flag>
     592:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <touch_postprocess_request>
     596:	81 30       	cpi	r24, 0x01	; 1
     598:	39 f5       	brne	.+78     	; 0x5e8 <touch_process+0x72>
     59a:	10 92 ad 01 	sts	0x01AD, r1	; 0x8001ad <touch_postprocess_request>
     59e:	0e 94 8c 09 	call	0x1318	; 0x1318 <qtm_acquisition_process>
     5a2:	81 11       	cpse	r24, r1
     5a4:	0c c0       	rjmp	.+24     	; 0x5be <touch_process+0x48>
     5a6:	83 e1       	ldi	r24, 0x13	; 19
     5a8:	91 e0       	ldi	r25, 0x01	; 1
     5aa:	0e 94 de 04 	call	0x9bc	; 0x9bc <qtm_key_sensors_process>
     5ae:	88 23       	and	r24, r24
     5b0:	59 f0       	breq	.+22     	; 0x5c8 <touch_process+0x52>
     5b2:	82 e0       	ldi	r24, 0x02	; 2
     5b4:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <module_error_code>
     5b8:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <datastreamer_output>
     5bc:	05 c0       	rjmp	.+10     	; 0x5c8 <touch_process+0x52>
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <module_error_code>
     5c4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <datastreamer_output>
     5c8:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     5cc:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     5d0:	80 81       	ld	r24, Z
     5d2:	88 23       	and	r24, r24
     5d4:	24 f4       	brge	.+8      	; 0x5de <touch_process+0x68>
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <time_to_measure_touch_flag>
     5dc:	03 c0       	rjmp	.+6      	; 0x5e4 <touch_process+0x6e>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <measurement_done_touch>
     5e4:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <datastreamer_output>
     5e8:	08 95       	ret

000005ea <touch_timer_handler>:
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <time_to_measure_touch_flag>
     5f0:	84 e1       	ldi	r24, 0x14	; 20
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	0e 94 b4 04 	call	0x968	; 0x968 <qtm_update_qtlib_timer>
     5f8:	08 95       	ret

000005fa <mega_touch_timer>:
     5fa:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <touch_time_counter.2335>
     5fe:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <touch_time_counter.2335+0x1>
     602:	44 97       	sbiw	r24, 0x14	; 20
     604:	39 f4       	brne	.+14     	; 0x614 <mega_touch_timer+0x1a>
     606:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <touch_time_counter.2335+0x1>
     60a:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <touch_time_counter.2335>
     60e:	0e 94 f5 02 	call	0x5ea	; 0x5ea <touch_timer_handler>
     612:	08 95       	ret
     614:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <touch_time_counter.2335>
     618:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <touch_time_counter.2335+0x1>
     61c:	01 96       	adiw	r24, 0x01	; 1
     61e:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <touch_time_counter.2335+0x1>
     622:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <touch_time_counter.2335>
     626:	08 95       	ret

00000628 <get_sensor_node_signal>:
     628:	9c 01       	movw	r18, r24
     62a:	22 0f       	add	r18, r18
     62c:	33 1f       	adc	r19, r19
     62e:	22 0f       	add	r18, r18
     630:	33 1f       	adc	r19, r19
     632:	82 0f       	add	r24, r18
     634:	93 1f       	adc	r25, r19
     636:	fc 01       	movw	r30, r24
     638:	e4 53       	subi	r30, 0x34	; 52
     63a:	fe 4f       	sbci	r31, 0xFE	; 254
     63c:	81 81       	ldd	r24, Z+1	; 0x01
     63e:	92 81       	ldd	r25, Z+2	; 0x02
     640:	08 95       	ret

00000642 <get_sensor_node_reference>:
     642:	9c 01       	movw	r18, r24
     644:	22 0f       	add	r18, r18
     646:	33 1f       	adc	r19, r19
     648:	82 0f       	add	r24, r18
     64a:	93 1f       	adc	r25, r19
     64c:	fc 01       	movw	r30, r24
     64e:	ee 0f       	add	r30, r30
     650:	ff 1f       	adc	r31, r31
     652:	ea 50       	subi	r30, 0x0A	; 10
     654:	fe 4f       	sbci	r31, 0xFE	; 254
     656:	84 81       	ldd	r24, Z+4	; 0x04
     658:	95 81       	ldd	r25, Z+5	; 0x05
     65a:	08 95       	ret

0000065c <get_sensor_cc_val>:
     65c:	9c 01       	movw	r18, r24
     65e:	22 0f       	add	r18, r18
     660:	33 1f       	adc	r19, r19
     662:	22 0f       	add	r18, r18
     664:	33 1f       	adc	r19, r19
     666:	82 0f       	add	r24, r18
     668:	93 1f       	adc	r25, r19
     66a:	fc 01       	movw	r30, r24
     66c:	e4 53       	subi	r30, 0x34	; 52
     66e:	fe 4f       	sbci	r31, 0xFE	; 254
     670:	83 81       	ldd	r24, Z+3	; 0x03
     672:	94 81       	ldd	r25, Z+4	; 0x04
     674:	08 95       	ret

00000676 <get_sensor_state>:
     676:	9c 01       	movw	r18, r24
     678:	22 0f       	add	r18, r18
     67a:	33 1f       	adc	r19, r19
     67c:	82 0f       	add	r24, r18
     67e:	93 1f       	adc	r25, r19
     680:	88 0f       	add	r24, r24
     682:	99 1f       	adc	r25, r25
     684:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     688:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     68c:	e8 0f       	add	r30, r24
     68e:	f9 1f       	adc	r31, r25
     690:	80 81       	ld	r24, Z
     692:	08 95       	ret

00000694 <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     694:	1f 92       	push	r1
     696:	0f 92       	push	r0
     698:	0f b6       	in	r0, 0x3f	; 63
     69a:	0f 92       	push	r0
     69c:	11 24       	eor	r1, r1
     69e:	2f 93       	push	r18
     6a0:	3f 93       	push	r19
     6a2:	4f 93       	push	r20
     6a4:	5f 93       	push	r21
     6a6:	6f 93       	push	r22
     6a8:	7f 93       	push	r23
     6aa:	8f 93       	push	r24
     6ac:	9f 93       	push	r25
     6ae:	af 93       	push	r26
     6b0:	bf 93       	push	r27
     6b2:	ef 93       	push	r30
     6b4:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     6b6:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <qtm_m324pb_ptc_handler_eoc>
}
     6ba:	ff 91       	pop	r31
     6bc:	ef 91       	pop	r30
     6be:	bf 91       	pop	r27
     6c0:	af 91       	pop	r26
     6c2:	9f 91       	pop	r25
     6c4:	8f 91       	pop	r24
     6c6:	7f 91       	pop	r23
     6c8:	6f 91       	pop	r22
     6ca:	5f 91       	pop	r21
     6cc:	4f 91       	pop	r20
     6ce:	3f 91       	pop	r19
     6d0:	2f 91       	pop	r18
     6d2:	0f 90       	pop	r0
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	0f 90       	pop	r0
     6d8:	1f 90       	pop	r1
     6da:	18 95       	reti

000006dc <SPI_0_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     6dc:	26 98       	cbi	0x04, 6	; 4
     6de:	2e 98       	cbi	0x05, 6	; 5
     6e0:	25 9a       	sbi	0x04, 5	; 4
     6e2:	2d 98       	cbi	0x05, 5	; 5
     6e4:	27 9a       	sbi	0x04, 7	; 4
     6e6:	2f 98       	cbi	0x05, 7	; 5
     6e8:	0e 94 b4 03 	call	0x768	; 0x768 <SPI_0_init>
     6ec:	08 95       	ret

000006ee <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     6ee:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     6f0:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     6f2:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     6f4:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     6f6:	0e 94 24 04 	call	0x848	; 0x848 <USART_init>
     6fa:	08 95       	ret

000006fc <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     6fc:	83 e0       	ldi	r24, 0x03	; 3
     6fe:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     702:	8f ef       	ldi	r24, 0xFF	; 255
     704:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     708:	9f e0       	ldi	r25, 0x0F	; 15
     70a:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     70e:	91 b1       	in	r25, 0x01	; 1
     710:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     712:	92 b1       	in	r25, 0x02	; 2
     714:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     716:	94 b1       	in	r25, 0x04	; 4
     718:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     71a:	95 b1       	in	r25, 0x05	; 5
     71c:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     71e:	97 b1       	in	r25, 0x07	; 7
     720:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     722:	98 b1       	in	r25, 0x08	; 8
     724:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     726:	9a b1       	in	r25, 0x0a	; 10
     728:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     72a:	9b b1       	in	r25, 0x0b	; 11
     72c:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     72e:	8d b1       	in	r24, 0x0d	; 13
     730:	80 78       	andi	r24, 0x80	; 128
     732:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     734:	8e b1       	in	r24, 0x0e	; 14
     736:	8f 67       	ori	r24, 0x7F	; 127
     738:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     73a:	40 e0       	ldi	r20, 0x00	; 0
     73c:	60 e8       	ldi	r22, 0x80	; 128
     73e:	81 e6       	ldi	r24, 0x61	; 97
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 ad 03 	call	0x75a	; 0x75a <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     746:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     748:	15 be       	out	0x35, r1	; 53

	ENABLE_INTERRUPTS();
     74a:	78 94       	sei
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     74c:	0e 94 6e 03 	call	0x6dc	; 0x6dc <SPI_0_initialization>
}

void Timer_initialization(void)
{

	Timer_init();
     750:	0e 94 17 04 	call	0x82e	; 0x82e <Timer_init>

	SPI_0_initialization();

	Timer_initialization();

	USART_initialization();
     754:	0e 94 77 03 	call	0x6ee	; 0x6ee <USART_initialization>
     758:	08 95       	ret

0000075a <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     75a:	2f b7       	in	r18, 0x3f	; 63
	cli
     75c:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     75e:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     760:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     762:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     764:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     766:	08 95       	ret

00000768 <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     768:	e4 e6       	ldi	r30, 0x64	; 100
     76a:	f0 e0       	ldi	r31, 0x00	; 0
     76c:	80 81       	ld	r24, Z
     76e:	8b 7f       	andi	r24, 0xFB	; 251
     770:	80 83       	st	Z, r24
     772:	80 ed       	ldi	r24, 0xD0	; 208
     774:	8c bd       	out	0x2c, r24	; 44
     776:	ef ea       	ldi	r30, 0xAF	; 175
     778:	f1 e0       	ldi	r31, 0x01	; 1
     77a:	10 82       	st	Z, r1
     77c:	16 82       	std	Z+6, r1	; 0x06
     77e:	15 82       	std	Z+5, r1	; 0x05
     780:	08 95       	ret

00000782 <__vector_19>:
}

ISR(SPI0_STC_vect)
{
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	2f 93       	push	r18
     78e:	3f 93       	push	r19
     790:	4f 93       	push	r20
     792:	5f 93       	push	r21
     794:	6f 93       	push	r22
     796:	7f 93       	push	r23
     798:	8f 93       	push	r24
     79a:	9f 93       	push	r25
     79c:	af 93       	push	r26
     79e:	bf 93       	push	r27
     7a0:	cf 93       	push	r28
     7a2:	df 93       	push	r29
     7a4:	ef 93       	push	r30
     7a6:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
     7a8:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
     7aa:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <SPI_0_desc+0x4>
     7ae:	82 30       	cpi	r24, 0x02	; 2
     7b0:	11 f1       	breq	.+68     	; 0x7f6 <__vector_19+0x74>
		*SPI_0_desc.data = rdata;
     7b2:	cf ea       	ldi	r28, 0xAF	; 175
     7b4:	d1 e0       	ldi	r29, 0x01	; 1
     7b6:	a9 81       	ldd	r26, Y+1	; 0x01
     7b8:	ba 81       	ldd	r27, Y+2	; 0x02
     7ba:	fd 01       	movw	r30, r26
     7bc:	91 93       	st	Z+, r25
	}

	SPI_0_desc.data++;
     7be:	fa 83       	std	Y+2, r31	; 0x02
     7c0:	e9 83       	std	Y+1, r30	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     7c2:	81 30       	cpi	r24, 0x01	; 1
     7c4:	19 f0       	breq	.+6      	; 0x7cc <__vector_19+0x4a>
		wdata = *SPI_0_desc.data;
     7c6:	11 96       	adiw	r26, 0x01	; 1
     7c8:	9c 91       	ld	r25, X
     7ca:	01 c0       	rjmp	.+2      	; 0x7ce <__vector_19+0x4c>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
	uint8_t wdata = 0;
     7cc:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     7ce:	ef ea       	ldi	r30, 0xAF	; 175
     7d0:	f1 e0       	ldi	r31, 0x01	; 1
     7d2:	83 81       	ldd	r24, Z+3	; 0x03
     7d4:	81 50       	subi	r24, 0x01	; 1
     7d6:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     7d8:	88 23       	and	r24, r24
     7da:	11 f0       	breq	.+4      	; 0x7e0 <__vector_19+0x5e>
		// more data to send, send a byte
		SPDR0 = wdata;
     7dc:	9e bd       	out	0x2e, r25	; 46
     7de:	14 c0       	rjmp	.+40     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     7e0:	ef ea       	ldi	r30, 0xAF	; 175
     7e2:	f1 e0       	ldi	r31, 0x01	; 1
     7e4:	83 e0       	ldi	r24, 0x03	; 3
     7e6:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     7e8:	05 80       	ldd	r0, Z+5	; 0x05
     7ea:	f6 81       	ldd	r31, Z+6	; 0x06
     7ec:	e0 2d       	mov	r30, r0
     7ee:	30 97       	sbiw	r30, 0x00	; 0
     7f0:	59 f0       	breq	.+22     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
			SPI_0_desc.cb();
     7f2:	09 95       	icall
		}
	}
}
     7f4:	09 c0       	rjmp	.+18     	; 0x808 <__DATA_REGION_LENGTH__+0x8>

	if (SPI_0_desc.type != SPI_WRITE) {
		*SPI_0_desc.data = rdata;
	}

	SPI_0_desc.data++;
     7f6:	ef ea       	ldi	r30, 0xAF	; 175
     7f8:	f1 e0       	ldi	r31, 0x01	; 1
     7fa:	a1 81       	ldd	r26, Z+1	; 0x01
     7fc:	b2 81       	ldd	r27, Z+2	; 0x02
     7fe:	cd 01       	movw	r24, r26
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	92 83       	std	Z+2, r25	; 0x02
     804:	81 83       	std	Z+1, r24	; 0x01
     806:	df cf       	rjmp	.-66     	; 0x7c6 <__vector_19+0x44>
		SPI_0_desc.status = SPI_DONE;
		if (SPI_0_desc.cb != NULL) {
			SPI_0_desc.cb();
		}
	}
}
     808:	ff 91       	pop	r31
     80a:	ef 91       	pop	r30
     80c:	df 91       	pop	r29
     80e:	cf 91       	pop	r28
     810:	bf 91       	pop	r27
     812:	af 91       	pop	r26
     814:	9f 91       	pop	r25
     816:	8f 91       	pop	r24
     818:	7f 91       	pop	r23
     81a:	6f 91       	pop	r22
     81c:	5f 91       	pop	r21
     81e:	4f 91       	pop	r20
     820:	3f 91       	pop	r19
     822:	2f 91       	pop	r18
     824:	0f 90       	pop	r0
     826:	0f be       	out	0x3f, r0	; 63
     828:	0f 90       	pop	r0
     82a:	1f 90       	pop	r1
     82c:	18 95       	reti

0000082e <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     82e:	e4 e6       	ldi	r30, 0x64	; 100
     830:	f0 e0       	ldi	r31, 0x00	; 0
     832:	80 81       	ld	r24, Z
     834:	8f 7d       	andi	r24, 0xDF	; 223
     836:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     838:	82 e0       	ldi	r24, 0x02	; 2
     83a:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     83c:	95 e0       	ldi	r25, 0x05	; 5
     83e:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     840:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	08 95       	ret

00000848 <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     848:	e4 e6       	ldi	r30, 0x64	; 100
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	80 81       	ld	r24, Z
     84e:	8d 7f       	andi	r24, 0xFD	; 253
     850:	80 83       	st	Z, r24
     852:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     856:	8c e0       	ldi	r24, 0x0C	; 12
     858:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     85c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     860:	88 e0       	ldi	r24, 0x08	; 8
     862:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	08 95       	ret

0000086a <USART_is_tx_ready>:
     86a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     86e:	85 fb       	bst	r24, 5
     870:	88 27       	eor	r24, r24
     872:	80 f9       	bld	r24, 0
     874:	08 95       	ret

00000876 <USART_is_tx_busy>:
     876:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     87a:	86 fb       	bst	r24, 6
     87c:	88 27       	eor	r24, r24
     87e:	80 f9       	bld	r24, 0
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	89 27       	eor	r24, r25
     884:	08 95       	ret

00000886 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     886:	e0 ec       	ldi	r30, 0xC0	; 192
     888:	f0 e0       	ldi	r31, 0x00	; 0
     88a:	90 81       	ld	r25, Z
     88c:	95 ff       	sbrs	r25, 5
     88e:	fd cf       	rjmp	.-6      	; 0x88a <USART_write+0x4>
		;
	UDR0 = data;
     890:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     894:	08 95       	ret

00000896 <check_for_aks_block>:
     896:	cf 92       	push	r12
     898:	df 92       	push	r13
     89a:	ff 92       	push	r15
     89c:	0f 93       	push	r16
     89e:	1f 93       	push	r17
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	ec 01       	movw	r28, r24
     8a6:	ae 81       	ldd	r26, Y+6	; 0x06
     8a8:	bf 81       	ldd	r27, Y+7	; 0x07
     8aa:	eb 01       	movw	r28, r22
     8ac:	cc 0f       	add	r28, r28
     8ae:	dd 1f       	adc	r29, r29
     8b0:	c6 0f       	add	r28, r22
     8b2:	d7 1f       	adc	r29, r23
     8b4:	ca 0f       	add	r28, r26
     8b6:	db 1f       	adc	r29, r27
     8b8:	fa 80       	ldd	r15, Y+2	; 0x02
     8ba:	fc 01       	movw	r30, r24
     8bc:	44 81       	ldd	r20, Z+4	; 0x04
     8be:	55 81       	ldd	r21, Z+5	; 0x05
     8c0:	e6 e0       	ldi	r30, 0x06	; 6
     8c2:	e6 9f       	mul	r30, r22
     8c4:	90 01       	movw	r18, r0
     8c6:	e7 9f       	mul	r30, r23
     8c8:	30 0d       	add	r19, r0
     8ca:	11 24       	eor	r1, r1
     8cc:	8a 01       	movw	r16, r20
     8ce:	02 0f       	add	r16, r18
     8d0:	13 1f       	adc	r17, r19
     8d2:	f8 01       	movw	r30, r16
     8d4:	22 81       	ldd	r18, Z+2	; 0x02
     8d6:	33 81       	ldd	r19, Z+3	; 0x03
     8d8:	f9 01       	movw	r30, r18
     8da:	21 81       	ldd	r18, Z+1	; 0x01
     8dc:	32 81       	ldd	r19, Z+2	; 0x02
     8de:	f8 01       	movw	r30, r16
     8e0:	04 81       	ldd	r16, Z+4	; 0x04
     8e2:	15 81       	ldd	r17, Z+5	; 0x05
     8e4:	20 1b       	sub	r18, r16
     8e6:	31 0b       	sbc	r19, r17
     8e8:	e8 81       	ld	r30, Y
     8ea:	2e 1b       	sub	r18, r30
     8ec:	31 09       	sbc	r19, r1
     8ee:	ec 01       	movw	r28, r24
     8f0:	ea 81       	ldd	r30, Y+2	; 0x02
     8f2:	fb 81       	ldd	r31, Y+3	; 0x03
     8f4:	00 81       	ld	r16, Z
     8f6:	11 81       	ldd	r17, Z+1	; 0x01
     8f8:	fa 01       	movw	r30, r20
     8fa:	40 e0       	ldi	r20, 0x00	; 0
     8fc:	50 e0       	ldi	r21, 0x00	; 0
     8fe:	40 17       	cp	r20, r16
     900:	51 07       	cpc	r21, r17
     902:	39 f1       	breq	.+78     	; 0x952 <__stack+0x53>
     904:	46 17       	cp	r20, r22
     906:	57 07       	cpc	r21, r23
     908:	f9 f0       	breq	.+62     	; 0x948 <__stack+0x49>
     90a:	12 96       	adiw	r26, 0x02	; 2
     90c:	8c 91       	ld	r24, X
     90e:	12 97       	sbiw	r26, 0x02	; 2
     910:	f8 12       	cpse	r15, r24
     912:	1a c0       	rjmp	.+52     	; 0x948 <__stack+0x49>
     914:	80 81       	ld	r24, Z
     916:	85 58       	subi	r24, 0x85	; 133
     918:	82 30       	cpi	r24, 0x02	; 2
     91a:	e8 f0       	brcs	.+58     	; 0x956 <__stack+0x57>
     91c:	c4 80       	ldd	r12, Z+4	; 0x04
     91e:	d5 80       	ldd	r13, Z+5	; 0x05
     920:	82 81       	ldd	r24, Z+2	; 0x02
     922:	93 81       	ldd	r25, Z+3	; 0x03
     924:	ec 01       	movw	r28, r24
     926:	89 81       	ldd	r24, Y+1	; 0x01
     928:	9a 81       	ldd	r25, Y+2	; 0x02
     92a:	c8 16       	cp	r12, r24
     92c:	d9 06       	cpc	r13, r25
     92e:	60 f4       	brcc	.+24     	; 0x948 <__stack+0x49>
     930:	8c 19       	sub	r24, r12
     932:	9d 09       	sbc	r25, r13
     934:	cc 91       	ld	r28, X
     936:	d0 e0       	ldi	r29, 0x00	; 0
     938:	c8 17       	cp	r28, r24
     93a:	d9 07       	cpc	r29, r25
     93c:	28 f4       	brcc	.+10     	; 0x948 <__stack+0x49>
     93e:	8c 1b       	sub	r24, r28
     940:	9d 0b       	sbc	r25, r29
     942:	28 17       	cp	r18, r24
     944:	39 07       	cpc	r19, r25
     946:	38 f0       	brcs	.+14     	; 0x956 <__stack+0x57>
     948:	4f 5f       	subi	r20, 0xFF	; 255
     94a:	5f 4f       	sbci	r21, 0xFF	; 255
     94c:	13 96       	adiw	r26, 0x03	; 3
     94e:	36 96       	adiw	r30, 0x06	; 6
     950:	d6 cf       	rjmp	.-84     	; 0x8fe <check_for_aks_block+0x68>
     952:	80 e0       	ldi	r24, 0x00	; 0
     954:	01 c0       	rjmp	.+2      	; 0x958 <__stack+0x59>
     956:	81 e0       	ldi	r24, 0x01	; 1
     958:	df 91       	pop	r29
     95a:	cf 91       	pop	r28
     95c:	1f 91       	pop	r17
     95e:	0f 91       	pop	r16
     960:	ff 90       	pop	r15
     962:	df 90       	pop	r13
     964:	cf 90       	pop	r12
     966:	08 95       	ret

00000968 <qtm_update_qtlib_timer>:
     968:	20 91 b6 01 	lds	r18, 0x01B6	; 0x8001b6 <qtm_local_ms_timecount>
     96c:	30 91 b7 01 	lds	r19, 0x01B7	; 0x8001b7 <qtm_local_ms_timecount+0x1>
     970:	82 0f       	add	r24, r18
     972:	93 1f       	adc	r25, r19
     974:	90 93 b7 01 	sts	0x01B7, r25	; 0x8001b7 <qtm_local_ms_timecount+0x1>
     978:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <qtm_local_ms_timecount>
     97c:	08 95       	ret

0000097e <qtm_init_sensor_key>:
     97e:	00 97       	sbiw	r24, 0x00	; 0
     980:	d9 f0       	breq	.+54     	; 0x9b8 <qtm_init_sensor_key+0x3a>
     982:	41 15       	cp	r20, r1
     984:	51 05       	cpc	r21, r1
     986:	c1 f0       	breq	.+48     	; 0x9b8 <qtm_init_sensor_key+0x3a>
     988:	26 e0       	ldi	r18, 0x06	; 6
     98a:	62 9f       	mul	r22, r18
     98c:	b0 01       	movw	r22, r0
     98e:	11 24       	eor	r1, r1
     990:	dc 01       	movw	r26, r24
     992:	14 96       	adiw	r26, 0x04	; 4
     994:	ed 91       	ld	r30, X+
     996:	fc 91       	ld	r31, X
     998:	15 97       	sbiw	r26, 0x05	; 5
     99a:	e6 0f       	add	r30, r22
     99c:	f7 1f       	adc	r31, r23
     99e:	21 e0       	ldi	r18, 0x01	; 1
     9a0:	20 83       	st	Z, r18
     9a2:	14 96       	adiw	r26, 0x04	; 4
     9a4:	8d 91       	ld	r24, X+
     9a6:	9c 91       	ld	r25, X
     9a8:	15 97       	sbiw	r26, 0x05	; 5
     9aa:	fc 01       	movw	r30, r24
     9ac:	e6 0f       	add	r30, r22
     9ae:	f7 1f       	adc	r31, r23
     9b0:	53 83       	std	Z+3, r21	; 0x03
     9b2:	42 83       	std	Z+2, r20	; 0x02
     9b4:	80 e0       	ldi	r24, 0x00	; 0
     9b6:	08 95       	ret
     9b8:	8b e0       	ldi	r24, 0x0B	; 11
     9ba:	08 95       	ret

000009bc <qtm_key_sensors_process>:
     9bc:	2f 92       	push	r2
     9be:	3f 92       	push	r3
     9c0:	4f 92       	push	r4
     9c2:	5f 92       	push	r5
     9c4:	6f 92       	push	r6
     9c6:	7f 92       	push	r7
     9c8:	8f 92       	push	r8
     9ca:	9f 92       	push	r9
     9cc:	af 92       	push	r10
     9ce:	bf 92       	push	r11
     9d0:	cf 92       	push	r12
     9d2:	df 92       	push	r13
     9d4:	ef 92       	push	r14
     9d6:	ff 92       	push	r15
     9d8:	0f 93       	push	r16
     9da:	1f 93       	push	r17
     9dc:	cf 93       	push	r28
     9de:	df 93       	push	r29
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	09 f4       	brne	.+2      	; 0x9e6 <qtm_key_sensors_process+0x2a>
     9e4:	7e c3       	rjmp	.+1788   	; 0x10e2 <qtm_key_sensors_process+0x726>
     9e6:	ec 01       	movw	r28, r24
     9e8:	a1 2c       	mov	r10, r1
     9ea:	b1 2c       	mov	r11, r1
     9ec:	81 2c       	mov	r8, r1
     9ee:	91 2c       	mov	r9, r1
     9f0:	21 2c       	mov	r2, r1
     9f2:	d1 2c       	mov	r13, r1
     9f4:	55 24       	eor	r5, r5
     9f6:	53 94       	inc	r5
     9f8:	33 e0       	ldi	r19, 0x03	; 3
     9fa:	c3 2e       	mov	r12, r19
     9fc:	45 e8       	ldi	r20, 0x85	; 133
     9fe:	64 2e       	mov	r6, r20
     a00:	56 e8       	ldi	r21, 0x86	; 134
     a02:	75 2e       	mov	r7, r21
     a04:	62 e0       	ldi	r22, 0x02	; 2
     a06:	36 2e       	mov	r3, r22
     a08:	78 e0       	ldi	r23, 0x08	; 8
     a0a:	47 2e       	mov	r4, r23
     a0c:	ea 81       	ldd	r30, Y+2	; 0x02
     a0e:	fb 81       	ldd	r31, Y+3	; 0x03
     a10:	80 81       	ld	r24, Z
     a12:	91 81       	ldd	r25, Z+1	; 0x01
     a14:	88 16       	cp	r8, r24
     a16:	99 06       	cpc	r9, r25
     a18:	08 f0       	brcs	.+2      	; 0xa1c <qtm_key_sensors_process+0x60>
     a1a:	a6 c1       	rjmp	.+844    	; 0xd68 <qtm_key_sensors_process+0x3ac>
     a1c:	75 01       	movw	r14, r10
     a1e:	ee 0c       	add	r14, r14
     a20:	ff 1c       	adc	r15, r15
     a22:	ec 81       	ldd	r30, Y+4	; 0x04
     a24:	fd 81       	ldd	r31, Y+5	; 0x05
     a26:	ee 0d       	add	r30, r14
     a28:	ff 1d       	adc	r31, r15
     a2a:	a2 81       	ldd	r26, Z+2	; 0x02
     a2c:	b3 81       	ldd	r27, Z+3	; 0x03
     a2e:	9c 91       	ld	r25, X
     a30:	9e 71       	andi	r25, 0x1E	; 30
     a32:	09 f0       	breq	.+2      	; 0xa36 <qtm_key_sensors_process+0x7a>
     a34:	50 82       	st	Z, r5
     a36:	0c 81       	ldd	r16, Y+4	; 0x04
     a38:	1d 81       	ldd	r17, Y+5	; 0x05
     a3a:	0e 0d       	add	r16, r14
     a3c:	1f 1d       	adc	r17, r15
     a3e:	d8 01       	movw	r26, r16
     a40:	8c 91       	ld	r24, X
     a42:	84 30       	cpi	r24, 0x04	; 4
     a44:	09 f4       	brne	.+2      	; 0xa48 <qtm_key_sensors_process+0x8c>
     a46:	9e c0       	rjmp	.+316    	; 0xb84 <qtm_key_sensors_process+0x1c8>
     a48:	38 f4       	brcc	.+14     	; 0xa58 <qtm_key_sensors_process+0x9c>
     a4a:	82 30       	cpi	r24, 0x02	; 2
     a4c:	d1 f0       	breq	.+52     	; 0xa82 <qtm_key_sensors_process+0xc6>
     a4e:	08 f0       	brcs	.+2      	; 0xa52 <qtm_key_sensors_process+0x96>
     a50:	45 c0       	rjmp	.+138    	; 0xadc <qtm_key_sensors_process+0x120>
     a52:	81 30       	cpi	r24, 0x01	; 1
     a54:	59 f0       	breq	.+22     	; 0xa6c <qtm_key_sensors_process+0xb0>
     a56:	81 c1       	rjmp	.+770    	; 0xd5a <qtm_key_sensors_process+0x39e>
     a58:	85 38       	cpi	r24, 0x85	; 133
     a5a:	09 f4       	brne	.+2      	; 0xa5e <qtm_key_sensors_process+0xa2>
     a5c:	bf c0       	rjmp	.+382    	; 0xbdc <qtm_key_sensors_process+0x220>
     a5e:	86 38       	cpi	r24, 0x86	; 134
     a60:	09 f4       	brne	.+2      	; 0xa64 <qtm_key_sensors_process+0xa8>
     a62:	f5 c0       	rjmp	.+490    	; 0xc4e <qtm_key_sensors_process+0x292>
     a64:	87 30       	cpi	r24, 0x07	; 7
     a66:	09 f0       	breq	.+2      	; 0xa6a <qtm_key_sensors_process+0xae>
     a68:	78 c1       	rjmp	.+752    	; 0xd5a <qtm_key_sensors_process+0x39e>
     a6a:	36 c1       	rjmp	.+620    	; 0xcd8 <qtm_key_sensors_process+0x31c>
     a6c:	91 11       	cpse	r25, r1
     a6e:	67 c1       	rjmp	.+718    	; 0xd3e <qtm_key_sensors_process+0x382>
     a70:	f8 01       	movw	r30, r16
     a72:	30 82       	st	Z, r3
     a74:	8c 81       	ldd	r24, Y+4	; 0x04
     a76:	9d 81       	ldd	r25, Y+5	; 0x05
     a78:	fc 01       	movw	r30, r24
     a7a:	ee 0d       	add	r30, r14
     a7c:	ff 1d       	adc	r31, r15
     a7e:	41 82       	std	Z+1, r4	; 0x01
     a80:	5e c1       	rjmp	.+700    	; 0xd3e <qtm_key_sensors_process+0x382>
     a82:	d8 01       	movw	r26, r16
     a84:	11 96       	adiw	r26, 0x01	; 1
     a86:	2c 91       	ld	r18, X
     a88:	11 97       	sbiw	r26, 0x01	; 1
     a8a:	22 23       	and	r18, r18
     a8c:	29 f1       	breq	.+74     	; 0xad8 <qtm_key_sensors_process+0x11c>
     a8e:	12 96       	adiw	r26, 0x02	; 2
     a90:	ed 91       	ld	r30, X+
     a92:	fc 91       	ld	r31, X
     a94:	13 97       	sbiw	r26, 0x03	; 3
     a96:	25 30       	cpi	r18, 0x05	; 5
     a98:	18 f0       	brcs	.+6      	; 0xaa0 <qtm_key_sensors_process+0xe4>
     a9a:	81 81       	ldd	r24, Z+1	; 0x01
     a9c:	92 81       	ldd	r25, Z+2	; 0x02
     a9e:	0e c0       	rjmp	.+28     	; 0xabc <qtm_key_sensors_process+0x100>
     aa0:	d8 01       	movw	r26, r16
     aa2:	14 96       	adiw	r26, 0x04	; 4
     aa4:	8d 91       	ld	r24, X+
     aa6:	9c 91       	ld	r25, X
     aa8:	15 97       	sbiw	r26, 0x05	; 5
     aaa:	41 81       	ldd	r20, Z+1	; 0x01
     aac:	52 81       	ldd	r21, Z+2	; 0x02
     aae:	84 17       	cp	r24, r20
     ab0:	95 07       	cpc	r25, r21
     ab2:	69 f0       	breq	.+26     	; 0xace <qtm_key_sensors_process+0x112>
     ab4:	48 17       	cp	r20, r24
     ab6:	59 07       	cpc	r21, r25
     ab8:	30 f4       	brcc	.+12     	; 0xac6 <qtm_key_sensors_process+0x10a>
     aba:	01 97       	sbiw	r24, 0x01	; 1
     abc:	15 96       	adiw	r26, 0x05	; 5
     abe:	9c 93       	st	X, r25
     ac0:	8e 93       	st	-X, r24
     ac2:	14 97       	sbiw	r26, 0x04	; 4
     ac4:	04 c0       	rjmp	.+8      	; 0xace <qtm_key_sensors_process+0x112>
     ac6:	01 96       	adiw	r24, 0x01	; 1
     ac8:	f8 01       	movw	r30, r16
     aca:	95 83       	std	Z+5, r25	; 0x05
     acc:	84 83       	std	Z+4, r24	; 0x04
     ace:	21 50       	subi	r18, 0x01	; 1
     ad0:	d8 01       	movw	r26, r16
     ad2:	11 96       	adiw	r26, 0x01	; 1
     ad4:	2c 93       	st	X, r18
     ad6:	33 c1       	rjmp	.+614    	; 0xd3e <qtm_key_sensors_process+0x382>
     ad8:	f8 01       	movw	r30, r16
     ada:	2d c1       	rjmp	.+602    	; 0xd36 <qtm_key_sensors_process+0x37a>
     adc:	d8 01       	movw	r26, r16
     ade:	14 96       	adiw	r26, 0x04	; 4
     ae0:	2d 91       	ld	r18, X+
     ae2:	3c 91       	ld	r19, X
     ae4:	15 97       	sbiw	r26, 0x05	; 5
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	ed 91       	ld	r30, X+
     aea:	fc 91       	ld	r31, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	41 81       	ldd	r20, Z+1	; 0x01
     af0:	52 81       	ldd	r21, Z+2	; 0x02
     af2:	24 17       	cp	r18, r20
     af4:	35 07       	cpc	r19, r21
     af6:	09 f4       	brne	.+2      	; 0xafa <qtm_key_sensors_process+0x13e>
     af8:	30 c1       	rjmp	.+608    	; 0xd5a <qtm_key_sensors_process+0x39e>
     afa:	8e 81       	ldd	r24, Y+6	; 0x06
     afc:	9f 81       	ldd	r25, Y+7	; 0x07
     afe:	42 17       	cp	r20, r18
     b00:	53 07       	cpc	r21, r19
     b02:	f8 f4       	brcc	.+62     	; 0xb42 <qtm_key_sensors_process+0x186>
     b04:	ea 81       	ldd	r30, Y+2	; 0x02
     b06:	fb 81       	ldd	r31, Y+3	; 0x03
     b08:	24 1b       	sub	r18, r20
     b0a:	35 0b       	sbc	r19, r21
     b0c:	dc 01       	movw	r26, r24
     b0e:	aa 0d       	add	r26, r10
     b10:	bb 1d       	adc	r27, r11
     b12:	8c 91       	ld	r24, X
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	05 80       	ldd	r0, Z+5	; 0x05
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <qtm_key_sensors_process+0x162>
     b1a:	95 95       	asr	r25
     b1c:	87 95       	ror	r24
     b1e:	0a 94       	dec	r0
     b20:	e2 f7       	brpl	.-8      	; 0xb1a <qtm_key_sensors_process+0x15e>
     b22:	99 27       	eor	r25, r25
     b24:	28 17       	cp	r18, r24
     b26:	39 07       	cpc	r19, r25
     b28:	08 f4       	brcc	.+2      	; 0xb2c <qtm_key_sensors_process+0x170>
     b2a:	17 c1       	rjmp	.+558    	; 0xd5a <qtm_key_sensors_process+0x39e>
     b2c:	84 81       	ldd	r24, Z+4	; 0x04
     b2e:	88 23       	and	r24, r24
     b30:	09 f4       	brne	.+2      	; 0xb34 <qtm_key_sensors_process+0x178>
     b32:	13 c1       	rjmp	.+550    	; 0xd5a <qtm_key_sensors_process+0x39e>
     b34:	87 e0       	ldi	r24, 0x07	; 7
     b36:	f8 01       	movw	r30, r16
     b38:	80 83       	st	Z, r24
     b3a:	ea 81       	ldd	r30, Y+2	; 0x02
     b3c:	fb 81       	ldd	r31, Y+3	; 0x03
     b3e:	24 81       	ldd	r18, Z+4	; 0x04
     b40:	1a c0       	rjmp	.+52     	; 0xb76 <qtm_key_sensors_process+0x1ba>
     b42:	fc 01       	movw	r30, r24
     b44:	ea 0d       	add	r30, r10
     b46:	fb 1d       	adc	r31, r11
     b48:	42 1b       	sub	r20, r18
     b4a:	53 0b       	sbc	r21, r19
     b4c:	80 81       	ld	r24, Z
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	48 17       	cp	r20, r24
     b52:	59 07       	cpc	r21, r25
     b54:	08 f4       	brcc	.+2      	; 0xb58 <qtm_key_sensors_process+0x19c>
     b56:	01 c1       	rjmp	.+514    	; 0xd5a <qtm_key_sensors_process+0x39e>
     b58:	82 81       	ldd	r24, Z+2	; 0x02
     b5a:	88 23       	and	r24, r24
     b5c:	31 f0       	breq	.+12     	; 0xb6a <qtm_key_sensors_process+0x1ae>
     b5e:	b4 01       	movw	r22, r8
     b60:	ce 01       	movw	r24, r28
     b62:	0e 94 4b 04 	call	0x896	; 0x896 <check_for_aks_block>
     b66:	81 11       	cpse	r24, r1
     b68:	f8 c0       	rjmp	.+496    	; 0xd5a <qtm_key_sensors_process+0x39e>
     b6a:	e4 e0       	ldi	r30, 0x04	; 4
     b6c:	d8 01       	movw	r26, r16
     b6e:	ec 93       	st	X, r30
     b70:	ea 81       	ldd	r30, Y+2	; 0x02
     b72:	fb 81       	ldd	r31, Y+3	; 0x03
     b74:	22 81       	ldd	r18, Z+2	; 0x02
     b76:	8c 81       	ldd	r24, Y+4	; 0x04
     b78:	9d 81       	ldd	r25, Y+5	; 0x05
     b7a:	fc 01       	movw	r30, r24
     b7c:	ee 0d       	add	r30, r14
     b7e:	ff 1d       	adc	r31, r15
     b80:	21 83       	std	Z+1, r18	; 0x01
     b82:	dd c0       	rjmp	.+442    	; 0xd3e <qtm_key_sensors_process+0x382>
     b84:	d8 01       	movw	r26, r16
     b86:	14 96       	adiw	r26, 0x04	; 4
     b88:	2d 91       	ld	r18, X+
     b8a:	3c 91       	ld	r19, X
     b8c:	15 97       	sbiw	r26, 0x05	; 5
     b8e:	12 96       	adiw	r26, 0x02	; 2
     b90:	ed 91       	ld	r30, X+
     b92:	fc 91       	ld	r31, X
     b94:	13 97       	sbiw	r26, 0x03	; 3
     b96:	81 81       	ldd	r24, Z+1	; 0x01
     b98:	92 81       	ldd	r25, Z+2	; 0x02
     b9a:	82 17       	cp	r24, r18
     b9c:	93 07       	cpc	r25, r19
     b9e:	08 f4       	brcc	.+2      	; 0xba2 <qtm_key_sensors_process+0x1e6>
     ba0:	bb c0       	rjmp	.+374    	; 0xd18 <qtm_key_sensors_process+0x35c>
     ba2:	ee 81       	ldd	r30, Y+6	; 0x06
     ba4:	ff 81       	ldd	r31, Y+7	; 0x07
     ba6:	ea 0d       	add	r30, r10
     ba8:	fb 1d       	adc	r31, r11
     baa:	82 1b       	sub	r24, r18
     bac:	93 0b       	sbc	r25, r19
     bae:	20 81       	ld	r18, Z
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	28 17       	cp	r18, r24
     bb4:	39 07       	cpc	r19, r25
     bb6:	08 f0       	brcs	.+2      	; 0xbba <qtm_key_sensors_process+0x1fe>
     bb8:	c5 c0       	rjmp	.+394    	; 0xd44 <qtm_key_sensors_process+0x388>
     bba:	82 81       	ldd	r24, Z+2	; 0x02
     bbc:	88 23       	and	r24, r24
     bbe:	31 f0       	breq	.+12     	; 0xbcc <qtm_key_sensors_process+0x210>
     bc0:	b4 01       	movw	r22, r8
     bc2:	ce 01       	movw	r24, r28
     bc4:	0e 94 4b 04 	call	0x896	; 0x896 <check_for_aks_block>
     bc8:	81 11       	cpse	r24, r1
     bca:	c7 c0       	rjmp	.+398    	; 0xd5a <qtm_key_sensors_process+0x39e>
     bcc:	f8 01       	movw	r30, r16
     bce:	81 81       	ldd	r24, Z+1	; 0x01
     bd0:	88 23       	and	r24, r24
     bd2:	09 f4       	brne	.+2      	; 0xbd6 <qtm_key_sensors_process+0x21a>
     bd4:	6a c0       	rjmp	.+212    	; 0xcaa <qtm_key_sensors_process+0x2ee>
     bd6:	81 50       	subi	r24, 0x01	; 1
     bd8:	81 83       	std	Z+1, r24	; 0x01
     bda:	b1 c0       	rjmp	.+354    	; 0xd3e <qtm_key_sensors_process+0x382>
     bdc:	e8 81       	ld	r30, Y
     bde:	f9 81       	ldd	r31, Y+1	; 0x01
     be0:	aa 81       	ldd	r26, Y+2	; 0x02
     be2:	bb 81       	ldd	r27, Y+3	; 0x03
     be4:	18 96       	adiw	r26, 0x08	; 8
     be6:	8c 91       	ld	r24, X
     be8:	83 83       	std	Z+3, r24	; 0x03
     bea:	ec 81       	ldd	r30, Y+4	; 0x04
     bec:	fd 81       	ldd	r31, Y+5	; 0x05
     bee:	ee 0d       	add	r30, r14
     bf0:	ff 1d       	adc	r31, r15
     bf2:	44 81       	ldd	r20, Z+4	; 0x04
     bf4:	55 81       	ldd	r21, Z+5	; 0x05
     bf6:	a2 81       	ldd	r26, Z+2	; 0x02
     bf8:	b3 81       	ldd	r27, Z+3	; 0x03
     bfa:	11 96       	adiw	r26, 0x01	; 1
     bfc:	8d 91       	ld	r24, X+
     bfe:	9c 91       	ld	r25, X
     c00:	12 97       	sbiw	r26, 0x02	; 2
     c02:	84 17       	cp	r24, r20
     c04:	95 07       	cpc	r25, r21
     c06:	c0 f0       	brcs	.+48     	; 0xc38 <qtm_key_sensors_process+0x27c>
     c08:	ae 81       	ldd	r26, Y+6	; 0x06
     c0a:	bf 81       	ldd	r27, Y+7	; 0x07
     c0c:	aa 0d       	add	r26, r10
     c0e:	bb 1d       	adc	r27, r11
     c10:	6c 91       	ld	r22, X
     c12:	26 2f       	mov	r18, r22
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	11 96       	adiw	r26, 0x01	; 1
     c18:	7c 91       	ld	r23, X
     c1a:	7f 5f       	subi	r23, 0xFF	; 255
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <qtm_key_sensors_process+0x266>
     c1e:	35 95       	asr	r19
     c20:	27 95       	ror	r18
     c22:	7a 95       	dec	r23
     c24:	e2 f7       	brpl	.-8      	; 0xc1e <qtm_key_sensors_process+0x262>
     c26:	84 1b       	sub	r24, r20
     c28:	95 0b       	sbc	r25, r21
     c2a:	62 1b       	sub	r22, r18
     c2c:	26 2f       	mov	r18, r22
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	28 17       	cp	r18, r24
     c32:	39 07       	cpc	r19, r25
     c34:	08 f4       	brcc	.+2      	; 0xc38 <qtm_key_sensors_process+0x27c>
     c36:	8f c0       	rjmp	.+286    	; 0xd56 <qtm_key_sensors_process+0x39a>
     c38:	70 82       	st	Z, r7
     c3a:	ea 81       	ldd	r30, Y+2	; 0x02
     c3c:	fb 81       	ldd	r31, Y+3	; 0x03
     c3e:	22 81       	ldd	r18, Z+2	; 0x02
     c40:	8c 81       	ldd	r24, Y+4	; 0x04
     c42:	9d 81       	ldd	r25, Y+5	; 0x05
     c44:	fc 01       	movw	r30, r24
     c46:	ee 0d       	add	r30, r14
     c48:	ff 1d       	adc	r31, r15
     c4a:	21 83       	std	Z+1, r18	; 0x01
     c4c:	42 c0       	rjmp	.+132    	; 0xcd2 <qtm_key_sensors_process+0x316>
     c4e:	d8 01       	movw	r26, r16
     c50:	14 96       	adiw	r26, 0x04	; 4
     c52:	6d 91       	ld	r22, X+
     c54:	7c 91       	ld	r23, X
     c56:	15 97       	sbiw	r26, 0x05	; 5
     c58:	12 96       	adiw	r26, 0x02	; 2
     c5a:	ed 91       	ld	r30, X+
     c5c:	fc 91       	ld	r31, X
     c5e:	13 97       	sbiw	r26, 0x03	; 3
     c60:	21 81       	ldd	r18, Z+1	; 0x01
     c62:	32 81       	ldd	r19, Z+2	; 0x02
     c64:	26 17       	cp	r18, r22
     c66:	37 07       	cpc	r19, r23
     c68:	58 f4       	brcc	.+22     	; 0xc80 <qtm_key_sensors_process+0x2c4>
     c6a:	11 96       	adiw	r26, 0x01	; 1
     c6c:	8c 91       	ld	r24, X
     c6e:	11 97       	sbiw	r26, 0x01	; 1
     c70:	81 11       	cpse	r24, r1
     c72:	02 c0       	rjmp	.+4      	; 0xc78 <qtm_key_sensors_process+0x2bc>
     c74:	cc 92       	st	X, r12
     c76:	6f c0       	rjmp	.+222    	; 0xd56 <qtm_key_sensors_process+0x39a>
     c78:	81 50       	subi	r24, 0x01	; 1
     c7a:	f8 01       	movw	r30, r16
     c7c:	81 83       	std	Z+1, r24	; 0x01
     c7e:	6b c0       	rjmp	.+214    	; 0xd56 <qtm_key_sensors_process+0x39a>
     c80:	ee 81       	ldd	r30, Y+6	; 0x06
     c82:	ff 81       	ldd	r31, Y+7	; 0x07
     c84:	ea 0d       	add	r30, r10
     c86:	fb 1d       	adc	r31, r11
     c88:	80 81       	ld	r24, Z
     c8a:	48 2f       	mov	r20, r24
     c8c:	50 e0       	ldi	r21, 0x00	; 0
     c8e:	91 81       	ldd	r25, Z+1	; 0x01
     c90:	9f 5f       	subi	r25, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <qtm_key_sensors_process+0x2dc>
     c94:	55 95       	asr	r21
     c96:	47 95       	ror	r20
     c98:	9a 95       	dec	r25
     c9a:	e2 f7       	brpl	.-8      	; 0xc94 <qtm_key_sensors_process+0x2d8>
     c9c:	26 1b       	sub	r18, r22
     c9e:	37 0b       	sbc	r19, r23
     ca0:	84 1b       	sub	r24, r20
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	82 17       	cp	r24, r18
     ca6:	93 07       	cpc	r25, r19
     ca8:	60 f4       	brcc	.+24     	; 0xcc2 <qtm_key_sensors_process+0x306>
     caa:	d8 01       	movw	r26, r16
     cac:	6c 92       	st	X, r6
     cae:	ea 81       	ldd	r30, Y+2	; 0x02
     cb0:	fb 81       	ldd	r31, Y+3	; 0x03
     cb2:	23 81       	ldd	r18, Z+3	; 0x03
     cb4:	8c 81       	ldd	r24, Y+4	; 0x04
     cb6:	9d 81       	ldd	r25, Y+5	; 0x05
     cb8:	fc 01       	movw	r30, r24
     cba:	ee 0d       	add	r30, r14
     cbc:	ff 1d       	adc	r31, r15
     cbe:	21 83       	std	Z+1, r18	; 0x01
     cc0:	4a c0       	rjmp	.+148    	; 0xd56 <qtm_key_sensors_process+0x39a>
     cc2:	f8 01       	movw	r30, r16
     cc4:	81 81       	ldd	r24, Z+1	; 0x01
     cc6:	81 11       	cpse	r24, r1
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <qtm_key_sensors_process+0x312>
     cca:	c0 82       	st	Z, r12
     ccc:	44 c0       	rjmp	.+136    	; 0xd56 <qtm_key_sensors_process+0x39a>
     cce:	81 50       	subi	r24, 0x01	; 1
     cd0:	81 83       	std	Z+1, r24	; 0x01
     cd2:	22 24       	eor	r2, r2
     cd4:	23 94       	inc	r2
     cd6:	33 c0       	rjmp	.+102    	; 0xd3e <qtm_key_sensors_process+0x382>
     cd8:	f8 01       	movw	r30, r16
     cda:	24 81       	ldd	r18, Z+4	; 0x04
     cdc:	35 81       	ldd	r19, Z+5	; 0x05
     cde:	02 80       	ldd	r0, Z+2	; 0x02
     ce0:	f3 81       	ldd	r31, Z+3	; 0x03
     ce2:	e0 2d       	mov	r30, r0
     ce4:	81 81       	ldd	r24, Z+1	; 0x01
     ce6:	92 81       	ldd	r25, Z+2	; 0x02
     ce8:	82 17       	cp	r24, r18
     cea:	93 07       	cpc	r25, r19
     cec:	58 f5       	brcc	.+86     	; 0xd44 <qtm_key_sensors_process+0x388>
     cee:	28 1b       	sub	r18, r24
     cf0:	39 0b       	sbc	r19, r25
     cf2:	ee 81       	ldd	r30, Y+6	; 0x06
     cf4:	ff 81       	ldd	r31, Y+7	; 0x07
     cf6:	ea 0d       	add	r30, r10
     cf8:	fb 1d       	adc	r31, r11
     cfa:	80 81       	ld	r24, Z
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	ea 81       	ldd	r30, Y+2	; 0x02
     d00:	fb 81       	ldd	r31, Y+3	; 0x03
     d02:	05 80       	ldd	r0, Z+5	; 0x05
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <qtm_key_sensors_process+0x34e>
     d06:	95 95       	asr	r25
     d08:	87 95       	ror	r24
     d0a:	0a 94       	dec	r0
     d0c:	e2 f7       	brpl	.-8      	; 0xd06 <qtm_key_sensors_process+0x34a>
     d0e:	99 27       	eor	r25, r25
     d10:	28 17       	cp	r18, r24
     d12:	39 07       	cpc	r19, r25
     d14:	18 f4       	brcc	.+6      	; 0xd1c <qtm_key_sensors_process+0x360>
     d16:	d8 01       	movw	r26, r16
     d18:	cc 92       	st	X, r12
     d1a:	16 c0       	rjmp	.+44     	; 0xd48 <qtm_key_sensors_process+0x38c>
     d1c:	f8 01       	movw	r30, r16
     d1e:	81 81       	ldd	r24, Z+1	; 0x01
     d20:	81 11       	cpse	r24, r1
     d22:	0b c0       	rjmp	.+22     	; 0xd3a <qtm_key_sensors_process+0x37e>
     d24:	50 82       	st	Z, r5
     d26:	8c 81       	ldd	r24, Y+4	; 0x04
     d28:	9d 81       	ldd	r25, Y+5	; 0x05
     d2a:	fc 01       	movw	r30, r24
     d2c:	ee 0d       	add	r30, r14
     d2e:	ff 1d       	adc	r31, r15
     d30:	02 80       	ldd	r0, Z+2	; 0x02
     d32:	f3 81       	ldd	r31, Z+3	; 0x03
     d34:	e0 2d       	mov	r30, r0
     d36:	c0 82       	st	Z, r12
     d38:	10 c0       	rjmp	.+32     	; 0xd5a <qtm_key_sensors_process+0x39e>
     d3a:	81 50       	subi	r24, 0x01	; 1
     d3c:	81 83       	std	Z+1, r24	; 0x01
     d3e:	dd 24       	eor	r13, r13
     d40:	d3 94       	inc	r13
     d42:	0b c0       	rjmp	.+22     	; 0xd5a <qtm_key_sensors_process+0x39e>
     d44:	f8 01       	movw	r30, r16
     d46:	c0 82       	st	Z, r12
     d48:	8c 81       	ldd	r24, Y+4	; 0x04
     d4a:	9d 81       	ldd	r25, Y+5	; 0x05
     d4c:	fc 01       	movw	r30, r24
     d4e:	ee 0d       	add	r30, r14
     d50:	ff 1d       	adc	r31, r15
     d52:	11 82       	std	Z+1, r1	; 0x01
     d54:	02 c0       	rjmp	.+4      	; 0xd5a <qtm_key_sensors_process+0x39e>
     d56:	22 24       	eor	r2, r2
     d58:	23 94       	inc	r2
     d5a:	ff ef       	ldi	r31, 0xFF	; 255
     d5c:	8f 1a       	sub	r8, r31
     d5e:	9f 0a       	sbc	r9, r31
     d60:	83 e0       	ldi	r24, 0x03	; 3
     d62:	a8 0e       	add	r10, r24
     d64:	b1 1c       	adc	r11, r1
     d66:	52 ce       	rjmp	.-860    	; 0xa0c <qtm_key_sensors_process+0x50>
     d68:	e8 81       	ld	r30, Y
     d6a:	f9 81       	ldd	r31, Y+1	; 0x01
     d6c:	80 81       	ld	r24, Z
     d6e:	87 ff       	sbrs	r24, 7
     d70:	23 c0       	rjmp	.+70     	; 0xdb8 <qtm_key_sensors_process+0x3fc>
     d72:	40 e0       	ldi	r20, 0x00	; 0
     d74:	50 e0       	ldi	r21, 0x00	; 0
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	30 e0       	ldi	r19, 0x00	; 0
     d7a:	ea 81       	ldd	r30, Y+2	; 0x02
     d7c:	fb 81       	ldd	r31, Y+3	; 0x03
     d7e:	80 81       	ld	r24, Z
     d80:	91 81       	ldd	r25, Z+1	; 0x01
     d82:	28 17       	cp	r18, r24
     d84:	39 07       	cpc	r19, r25
     d86:	98 f4       	brcc	.+38     	; 0xdae <qtm_key_sensors_process+0x3f2>
     d88:	ec 81       	ldd	r30, Y+4	; 0x04
     d8a:	fd 81       	ldd	r31, Y+5	; 0x05
     d8c:	e4 0f       	add	r30, r20
     d8e:	f5 1f       	adc	r31, r21
     d90:	a2 81       	ldd	r26, Z+2	; 0x02
     d92:	b3 81       	ldd	r27, Z+3	; 0x03
     d94:	8c 91       	ld	r24, X
     d96:	80 fd       	sbrc	r24, 0
     d98:	05 c0       	rjmp	.+10     	; 0xda4 <qtm_key_sensors_process+0x3e8>
     d9a:	90 81       	ld	r25, Z
     d9c:	97 7f       	andi	r25, 0xF7	; 247
     d9e:	11 f0       	breq	.+4      	; 0xda4 <qtm_key_sensors_process+0x3e8>
     da0:	81 60       	ori	r24, 0x01	; 1
     da2:	8c 93       	st	X, r24
     da4:	2f 5f       	subi	r18, 0xFF	; 255
     da6:	3f 4f       	sbci	r19, 0xFF	; 255
     da8:	4a 5f       	subi	r20, 0xFA	; 250
     daa:	5f 4f       	sbci	r21, 0xFF	; 255
     dac:	e6 cf       	rjmp	.-52     	; 0xd7a <qtm_key_sensors_process+0x3be>
     dae:	e8 81       	ld	r30, Y
     db0:	f9 81       	ldd	r31, Y+1	; 0x01
     db2:	80 81       	ld	r24, Z
     db4:	8f 77       	andi	r24, 0x7F	; 127
     db6:	80 83       	st	Z, r24
     db8:	d1 10       	cpse	r13, r1
     dba:	07 c0       	rjmp	.+14     	; 0xdca <qtm_key_sensors_process+0x40e>
     dbc:	e8 81       	ld	r30, Y
     dbe:	f9 81       	ldd	r31, Y+1	; 0x01
     dc0:	21 10       	cpse	r2, r1
     dc2:	6f c0       	rjmp	.+222    	; 0xea2 <qtm_key_sensors_process+0x4e6>
     dc4:	80 81       	ld	r24, Z
     dc6:	8e 7f       	andi	r24, 0xFE	; 254
     dc8:	6e c0       	rjmp	.+220    	; 0xea6 <qtm_key_sensors_process+0x4ea>
     dca:	ea 81       	ldd	r30, Y+2	; 0x02
     dcc:	fb 81       	ldd	r31, Y+3	; 0x03
     dce:	81 85       	ldd	r24, Z+9	; 0x09
     dd0:	88 23       	and	r24, r24
     dd2:	a1 f3       	breq	.-24     	; 0xdbc <qtm_key_sensors_process+0x400>
     dd4:	e8 81       	ld	r30, Y
     dd6:	f9 81       	ldd	r31, Y+1	; 0x01
     dd8:	80 81       	ld	r24, Z
     dda:	80 68       	ori	r24, 0x80	; 128
     ddc:	80 83       	st	Z, r24
     dde:	ea 81       	ldd	r30, Y+2	; 0x02
     de0:	fb 81       	ldd	r31, Y+3	; 0x03
     de2:	81 85       	ldd	r24, Z+9	; 0x09
     de4:	81 30       	cpi	r24, 0x01	; 1
     de6:	51 f7       	brne	.-44     	; 0xdbc <qtm_key_sensors_process+0x400>
     de8:	40 e0       	ldi	r20, 0x00	; 0
     dea:	50 e0       	ldi	r21, 0x00	; 0
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	30 e0       	ldi	r19, 0x00	; 0
     df0:	96 e0       	ldi	r25, 0x06	; 6
     df2:	d9 2e       	mov	r13, r25
     df4:	ea 81       	ldd	r30, Y+2	; 0x02
     df6:	fb 81       	ldd	r31, Y+3	; 0x03
     df8:	60 81       	ld	r22, Z
     dfa:	71 81       	ldd	r23, Z+1	; 0x01
     dfc:	26 17       	cp	r18, r22
     dfe:	37 07       	cpc	r19, r23
     e00:	e8 f6       	brcc	.-70     	; 0xdbc <qtm_key_sensors_process+0x400>
     e02:	0c 81       	ldd	r16, Y+4	; 0x04
     e04:	1d 81       	ldd	r17, Y+5	; 0x05
     e06:	fa 01       	movw	r30, r20
     e08:	ee 0f       	add	r30, r30
     e0a:	ff 1f       	adc	r31, r31
     e0c:	e0 0f       	add	r30, r16
     e0e:	f1 1f       	adc	r31, r17
     e10:	80 81       	ld	r24, Z
     e12:	98 2f       	mov	r25, r24
     e14:	97 7f       	andi	r25, 0xF7	; 247
     e16:	a1 f1       	breq	.+104    	; 0xe80 <qtm_key_sensors_process+0x4c4>
     e18:	85 38       	cpi	r24, 0x85	; 133
     e1a:	11 f0       	breq	.+4      	; 0xe20 <qtm_key_sensors_process+0x464>
     e1c:	83 30       	cpi	r24, 0x03	; 3
     e1e:	b1 f5       	brne	.+108    	; 0xe8c <qtm_key_sensors_process+0x4d0>
     e20:	ee 80       	ldd	r14, Y+6	; 0x06
     e22:	ff 80       	ldd	r15, Y+7	; 0x07
     e24:	d7 01       	movw	r26, r14
     e26:	a4 0f       	add	r26, r20
     e28:	b5 1f       	adc	r27, r21
     e2a:	12 96       	adiw	r26, 0x02	; 2
     e2c:	bc 90       	ld	r11, X
     e2e:	bb 20       	and	r11, r11
     e30:	39 f1       	breq	.+78     	; 0xe80 <qtm_key_sensors_process+0x4c4>
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	c1 2c       	mov	r12, r1
     e38:	86 17       	cp	r24, r22
     e3a:	97 07       	cpc	r25, r23
     e3c:	f8 f4       	brcc	.+62     	; 0xe7c <qtm_key_sensors_process+0x4c0>
     e3e:	28 17       	cp	r18, r24
     e40:	39 07       	cpc	r19, r25
     e42:	d1 f0       	breq	.+52     	; 0xe78 <qtm_key_sensors_process+0x4bc>
     e44:	d8 9e       	mul	r13, r24
     e46:	d0 01       	movw	r26, r0
     e48:	d9 9e       	mul	r13, r25
     e4a:	b0 0d       	add	r27, r0
     e4c:	11 24       	eor	r1, r1
     e4e:	a0 0f       	add	r26, r16
     e50:	b1 1f       	adc	r27, r17
     e52:	ac 91       	ld	r26, X
     e54:	a4 30       	cpi	r26, 0x04	; 4
     e56:	11 f0       	breq	.+4      	; 0xe5c <qtm_key_sensors_process+0x4a0>
     e58:	a6 38       	cpi	r26, 0x86	; 134
     e5a:	71 f4       	brne	.+28     	; 0xe78 <qtm_key_sensors_process+0x4bc>
     e5c:	dc 01       	movw	r26, r24
     e5e:	aa 0f       	add	r26, r26
     e60:	bb 1f       	adc	r27, r27
     e62:	a8 0f       	add	r26, r24
     e64:	b9 1f       	adc	r27, r25
     e66:	ae 0d       	add	r26, r14
     e68:	bf 1d       	adc	r27, r15
     e6a:	12 96       	adiw	r26, 0x02	; 2
     e6c:	ac 91       	ld	r26, X
     e6e:	ba 12       	cpse	r11, r26
     e70:	03 c0       	rjmp	.+6      	; 0xe78 <qtm_key_sensors_process+0x4bc>
     e72:	cb 01       	movw	r24, r22
     e74:	cc 24       	eor	r12, r12
     e76:	c3 94       	inc	r12
     e78:	01 96       	adiw	r24, 0x01	; 1
     e7a:	de cf       	rjmp	.-68     	; 0xe38 <qtm_key_sensors_process+0x47c>
     e7c:	c1 10       	cpse	r12, r1
     e7e:	06 c0       	rjmp	.+12     	; 0xe8c <qtm_key_sensors_process+0x4d0>
     e80:	02 80       	ldd	r0, Z+2	; 0x02
     e82:	f3 81       	ldd	r31, Z+3	; 0x03
     e84:	e0 2d       	mov	r30, r0
     e86:	80 81       	ld	r24, Z
     e88:	8e 7f       	andi	r24, 0xFE	; 254
     e8a:	05 c0       	rjmp	.+10     	; 0xe96 <qtm_key_sensors_process+0x4da>
     e8c:	02 80       	ldd	r0, Z+2	; 0x02
     e8e:	f3 81       	ldd	r31, Z+3	; 0x03
     e90:	e0 2d       	mov	r30, r0
     e92:	80 81       	ld	r24, Z
     e94:	81 60       	ori	r24, 0x01	; 1
     e96:	80 83       	st	Z, r24
     e98:	2f 5f       	subi	r18, 0xFF	; 255
     e9a:	3f 4f       	sbci	r19, 0xFF	; 255
     e9c:	4d 5f       	subi	r20, 0xFD	; 253
     e9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ea0:	a9 cf       	rjmp	.-174    	; 0xdf4 <qtm_key_sensors_process+0x438>
     ea2:	80 81       	ld	r24, Z
     ea4:	81 60       	ori	r24, 0x01	; 1
     ea6:	80 83       	st	Z, r24
     ea8:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <qtm_local_ms_timecount>
     eac:	90 91 b7 01 	lds	r25, 0x01B7	; 0x8001b7 <qtm_local_ms_timecount+0x1>
     eb0:	e8 81       	ld	r30, Y
     eb2:	f9 81       	ldd	r31, Y+1	; 0x01
     eb4:	21 81       	ldd	r18, Z+1	; 0x01
     eb6:	32 81       	ldd	r19, Z+2	; 0x02
     eb8:	a9 01       	movw	r20, r18
     eba:	48 53       	subi	r20, 0x38	; 56
     ebc:	5f 4f       	sbci	r21, 0xFF	; 255
     ebe:	48 17       	cp	r20, r24
     ec0:	59 07       	cpc	r21, r25
     ec2:	38 f4       	brcc	.+14     	; 0xed2 <qtm_key_sensors_process+0x516>
     ec4:	82 1b       	sub	r24, r18
     ec6:	93 0b       	sbc	r25, r19
     ec8:	aa 24       	eor	r10, r10
     eca:	a3 94       	inc	r10
     ecc:	a3 e0       	ldi	r26, 0x03	; 3
     ece:	ba 2e       	mov	r11, r26
     ed0:	44 c0       	rjmp	.+136    	; 0xf5a <qtm_key_sensors_process+0x59e>
     ed2:	82 17       	cp	r24, r18
     ed4:	93 07       	cpc	r25, r19
     ed6:	10 f0       	brcs	.+4      	; 0xedc <qtm_key_sensors_process+0x520>
     ed8:	80 e0       	ldi	r24, 0x00	; 0
     eda:	04 c1       	rjmp	.+520    	; 0x10e4 <qtm_key_sensors_process+0x728>
     edc:	82 1b       	sub	r24, r18
     ede:	93 0b       	sbc	r25, r19
     ee0:	01 97       	sbiw	r24, 0x01	; 1
     ee2:	89 3c       	cpi	r24, 0xC9	; 201
     ee4:	91 05       	cpc	r25, r1
     ee6:	c0 f3       	brcs	.-16     	; 0xed8 <qtm_key_sensors_process+0x51c>
     ee8:	ef cf       	rjmp	.-34     	; 0xec8 <qtm_key_sensors_process+0x50c>
     eea:	88 5c       	subi	r24, 0xC8	; 200
     eec:	91 09       	sbc	r25, r1
     eee:	e8 81       	ld	r30, Y
     ef0:	f9 81       	ldd	r31, Y+1	; 0x01
     ef2:	21 81       	ldd	r18, Z+1	; 0x01
     ef4:	32 81       	ldd	r19, Z+2	; 0x02
     ef6:	28 53       	subi	r18, 0x38	; 56
     ef8:	3f 4f       	sbci	r19, 0xFF	; 255
     efa:	32 83       	std	Z+2, r19	; 0x02
     efc:	21 83       	std	Z+1, r18	; 0x01
     efe:	23 81       	ldd	r18, Z+3	; 0x03
     f00:	21 11       	cpse	r18, r1
     f02:	96 c0       	rjmp	.+300    	; 0x1030 <qtm_key_sensors_process+0x674>
     f04:	24 81       	ldd	r18, Z+4	; 0x04
     f06:	22 23       	and	r18, r18
     f08:	11 f0       	breq	.+4      	; 0xf0e <qtm_key_sensors_process+0x552>
     f0a:	21 50       	subi	r18, 0x01	; 1
     f0c:	24 83       	std	Z+4, r18	; 0x04
     f0e:	e8 81       	ld	r30, Y
     f10:	f9 81       	ldd	r31, Y+1	; 0x01
     f12:	25 81       	ldd	r18, Z+5	; 0x05
     f14:	22 23       	and	r18, r18
     f16:	11 f0       	breq	.+4      	; 0xf1c <qtm_key_sensors_process+0x560>
     f18:	21 50       	subi	r18, 0x01	; 1
     f1a:	25 83       	std	Z+5, r18	; 0x05
     f1c:	8a 80       	ldd	r8, Y+2	; 0x02
     f1e:	9b 80       	ldd	r9, Y+3	; 0x03
     f20:	d4 01       	movw	r26, r8
     f22:	16 96       	adiw	r26, 0x06	; 6
     f24:	2c 91       	ld	r18, X
     f26:	16 97       	sbiw	r26, 0x06	; 6
     f28:	21 11       	cpse	r18, r1
     f2a:	1b c0       	rjmp	.+54     	; 0xf62 <qtm_key_sensors_process+0x5a6>
     f2c:	8a 80       	ldd	r8, Y+2	; 0x02
     f2e:	9b 80       	ldd	r9, Y+3	; 0x03
     f30:	f4 01       	movw	r30, r8
     f32:	27 81       	ldd	r18, Z+7	; 0x07
     f34:	21 11       	cpse	r18, r1
     f36:	48 c0       	rjmp	.+144    	; 0xfc8 <qtm_key_sensors_process+0x60c>
     f38:	ea 81       	ldd	r30, Y+2	; 0x02
     f3a:	fb 81       	ldd	r31, Y+3	; 0x03
     f3c:	23 81       	ldd	r18, Z+3	; 0x03
     f3e:	22 23       	and	r18, r18
     f40:	61 f0       	breq	.+24     	; 0xf5a <qtm_key_sensors_process+0x59e>
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	a0 e0       	ldi	r26, 0x00	; 0
     f48:	b0 e0       	ldi	r27, 0x00	; 0
     f4a:	ea 81       	ldd	r30, Y+2	; 0x02
     f4c:	fb 81       	ldd	r31, Y+3	; 0x03
     f4e:	40 81       	ld	r20, Z
     f50:	51 81       	ldd	r21, Z+1	; 0x01
     f52:	a4 17       	cp	r26, r20
     f54:	b5 07       	cpc	r27, r21
     f56:	08 f4       	brcc	.+2      	; 0xf5a <qtm_key_sensors_process+0x59e>
     f58:	6e c0       	rjmp	.+220    	; 0x1036 <qtm_key_sensors_process+0x67a>
     f5a:	89 3c       	cpi	r24, 0xC9	; 201
     f5c:	91 05       	cpc	r25, r1
     f5e:	28 f6       	brcc	.-118    	; 0xeea <qtm_key_sensors_process+0x52e>
     f60:	bb cf       	rjmp	.-138    	; 0xed8 <qtm_key_sensors_process+0x51c>
     f62:	08 81       	ld	r16, Y
     f64:	19 81       	ldd	r17, Y+1	; 0x01
     f66:	f8 01       	movw	r30, r16
     f68:	24 81       	ldd	r18, Z+4	; 0x04
     f6a:	21 11       	cpse	r18, r1
     f6c:	df cf       	rjmp	.-66     	; 0xf2c <qtm_key_sensors_process+0x570>
     f6e:	ed 90       	ld	r14, X+
     f70:	fc 90       	ld	r15, X
     f72:	60 e0       	ldi	r22, 0x00	; 0
     f74:	70 e0       	ldi	r23, 0x00	; 0
     f76:	40 e0       	ldi	r20, 0x00	; 0
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	4e 15       	cp	r20, r14
     f7c:	5f 05       	cpc	r21, r15
     f7e:	f1 f0       	breq	.+60     	; 0xfbc <qtm_key_sensors_process+0x600>
     f80:	ec 81       	ldd	r30, Y+4	; 0x04
     f82:	fd 81       	ldd	r31, Y+5	; 0x05
     f84:	e6 0f       	add	r30, r22
     f86:	f7 1f       	adc	r31, r23
     f88:	20 81       	ld	r18, Z
     f8a:	23 30       	cpi	r18, 0x03	; 3
     f8c:	11 f0       	breq	.+4      	; 0xf92 <qtm_key_sensors_process+0x5d6>
     f8e:	28 30       	cpi	r18, 0x08	; 8
     f90:	81 f4       	brne	.+32     	; 0xfb2 <qtm_key_sensors_process+0x5f6>
     f92:	24 81       	ldd	r18, Z+4	; 0x04
     f94:	35 81       	ldd	r19, Z+5	; 0x05
     f96:	c2 80       	ldd	r12, Z+2	; 0x02
     f98:	d3 80       	ldd	r13, Z+3	; 0x03
     f9a:	d6 01       	movw	r26, r12
     f9c:	11 96       	adiw	r26, 0x01	; 1
     f9e:	cd 90       	ld	r12, X+
     fa0:	dc 90       	ld	r13, X
     fa2:	12 97       	sbiw	r26, 0x02	; 2
     fa4:	2c 15       	cp	r18, r12
     fa6:	3d 05       	cpc	r19, r13
     fa8:	20 f4       	brcc	.+8      	; 0xfb2 <qtm_key_sensors_process+0x5f6>
     faa:	2f 5f       	subi	r18, 0xFF	; 255
     fac:	3f 4f       	sbci	r19, 0xFF	; 255
     fae:	35 83       	std	Z+5, r19	; 0x05
     fb0:	24 83       	std	Z+4, r18	; 0x04
     fb2:	4f 5f       	subi	r20, 0xFF	; 255
     fb4:	5f 4f       	sbci	r21, 0xFF	; 255
     fb6:	6a 5f       	subi	r22, 0xFA	; 250
     fb8:	7f 4f       	sbci	r23, 0xFF	; 255
     fba:	df cf       	rjmp	.-66     	; 0xf7a <qtm_key_sensors_process+0x5be>
     fbc:	f4 01       	movw	r30, r8
     fbe:	26 81       	ldd	r18, Z+6	; 0x06
     fc0:	d8 01       	movw	r26, r16
     fc2:	14 96       	adiw	r26, 0x04	; 4
     fc4:	2c 93       	st	X, r18
     fc6:	b2 cf       	rjmp	.-156    	; 0xf2c <qtm_key_sensors_process+0x570>
     fc8:	08 81       	ld	r16, Y
     fca:	19 81       	ldd	r17, Y+1	; 0x01
     fcc:	d8 01       	movw	r26, r16
     fce:	15 96       	adiw	r26, 0x05	; 5
     fd0:	2c 91       	ld	r18, X
     fd2:	21 11       	cpse	r18, r1
     fd4:	b1 cf       	rjmp	.-158    	; 0xf38 <qtm_key_sensors_process+0x57c>
     fd6:	e0 80       	ld	r14, Z
     fd8:	f1 80       	ldd	r15, Z+1	; 0x01
     fda:	60 e0       	ldi	r22, 0x00	; 0
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	40 e0       	ldi	r20, 0x00	; 0
     fe0:	50 e0       	ldi	r21, 0x00	; 0
     fe2:	4e 15       	cp	r20, r14
     fe4:	5f 05       	cpc	r21, r15
     fe6:	f1 f0       	breq	.+60     	; 0x1024 <qtm_key_sensors_process+0x668>
     fe8:	ec 81       	ldd	r30, Y+4	; 0x04
     fea:	fd 81       	ldd	r31, Y+5	; 0x05
     fec:	e6 0f       	add	r30, r22
     fee:	f7 1f       	adc	r31, r23
     ff0:	20 81       	ld	r18, Z
     ff2:	23 30       	cpi	r18, 0x03	; 3
     ff4:	11 f0       	breq	.+4      	; 0xffa <qtm_key_sensors_process+0x63e>
     ff6:	28 30       	cpi	r18, 0x08	; 8
     ff8:	81 f4       	brne	.+32     	; 0x101a <qtm_key_sensors_process+0x65e>
     ffa:	24 81       	ldd	r18, Z+4	; 0x04
     ffc:	35 81       	ldd	r19, Z+5	; 0x05
     ffe:	c2 80       	ldd	r12, Z+2	; 0x02
    1000:	d3 80       	ldd	r13, Z+3	; 0x03
    1002:	d6 01       	movw	r26, r12
    1004:	11 96       	adiw	r26, 0x01	; 1
    1006:	cd 90       	ld	r12, X+
    1008:	dc 90       	ld	r13, X
    100a:	12 97       	sbiw	r26, 0x02	; 2
    100c:	c2 16       	cp	r12, r18
    100e:	d3 06       	cpc	r13, r19
    1010:	20 f4       	brcc	.+8      	; 0x101a <qtm_key_sensors_process+0x65e>
    1012:	21 50       	subi	r18, 0x01	; 1
    1014:	31 09       	sbc	r19, r1
    1016:	35 83       	std	Z+5, r19	; 0x05
    1018:	24 83       	std	Z+4, r18	; 0x04
    101a:	4f 5f       	subi	r20, 0xFF	; 255
    101c:	5f 4f       	sbci	r21, 0xFF	; 255
    101e:	6a 5f       	subi	r22, 0xFA	; 250
    1020:	7f 4f       	sbci	r23, 0xFF	; 255
    1022:	df cf       	rjmp	.-66     	; 0xfe2 <qtm_key_sensors_process+0x626>
    1024:	f4 01       	movw	r30, r8
    1026:	27 81       	ldd	r18, Z+7	; 0x07
    1028:	d8 01       	movw	r26, r16
    102a:	15 96       	adiw	r26, 0x05	; 5
    102c:	2c 93       	st	X, r18
    102e:	84 cf       	rjmp	.-248    	; 0xf38 <qtm_key_sensors_process+0x57c>
    1030:	21 50       	subi	r18, 0x01	; 1
    1032:	23 83       	std	Z+3, r18	; 0x03
    1034:	81 cf       	rjmp	.-254    	; 0xf38 <qtm_key_sensors_process+0x57c>
    1036:	a9 01       	movw	r20, r18
    1038:	44 0f       	add	r20, r20
    103a:	55 1f       	adc	r21, r21
    103c:	ec 81       	ldd	r30, Y+4	; 0x04
    103e:	fd 81       	ldd	r31, Y+5	; 0x05
    1040:	e4 0f       	add	r30, r20
    1042:	f5 1f       	adc	r31, r21
    1044:	60 81       	ld	r22, Z
    1046:	65 38       	cpi	r22, 0x85	; 133
    1048:	09 f0       	breq	.+2      	; 0x104c <qtm_key_sensors_process+0x690>
    104a:	47 c0       	rjmp	.+142    	; 0x10da <qtm_key_sensors_process+0x71e>
    104c:	61 81       	ldd	r22, Z+1	; 0x01
    104e:	66 23       	and	r22, r22
    1050:	19 f0       	breq	.+6      	; 0x1058 <qtm_key_sensors_process+0x69c>
    1052:	61 50       	subi	r22, 0x01	; 1
    1054:	61 83       	std	Z+1, r22	; 0x01
    1056:	41 c0       	rjmp	.+130    	; 0x10da <qtm_key_sensors_process+0x71e>
    1058:	a0 82       	st	Z, r10
    105a:	6c 81       	ldd	r22, Y+4	; 0x04
    105c:	7d 81       	ldd	r23, Y+5	; 0x05
    105e:	fb 01       	movw	r30, r22
    1060:	e4 0f       	add	r30, r20
    1062:	f5 1f       	adc	r31, r21
    1064:	02 80       	ldd	r0, Z+2	; 0x02
    1066:	f3 81       	ldd	r31, Z+3	; 0x03
    1068:	e0 2d       	mov	r30, r0
    106a:	b0 82       	st	Z, r11
    106c:	ee 81       	ldd	r30, Y+6	; 0x06
    106e:	ff 81       	ldd	r31, Y+7	; 0x07
    1070:	e2 0f       	add	r30, r18
    1072:	f3 1f       	adc	r31, r19
    1074:	d2 80       	ldd	r13, Z+2	; 0x02
    1076:	dd 20       	and	r13, r13
    1078:	81 f1       	breq	.+96     	; 0x10da <qtm_key_sensors_process+0x71e>
    107a:	40 e0       	ldi	r20, 0x00	; 0
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	00 e0       	ldi	r16, 0x00	; 0
    1080:	10 e0       	ldi	r17, 0x00	; 0
    1082:	ea 81       	ldd	r30, Y+2	; 0x02
    1084:	fb 81       	ldd	r31, Y+3	; 0x03
    1086:	60 81       	ld	r22, Z
    1088:	71 81       	ldd	r23, Z+1	; 0x01
    108a:	06 17       	cp	r16, r22
    108c:	17 07       	cpc	r17, r23
    108e:	28 f5       	brcc	.+74     	; 0x10da <qtm_key_sensors_process+0x71e>
    1090:	ee 81       	ldd	r30, Y+6	; 0x06
    1092:	ff 81       	ldd	r31, Y+7	; 0x07
    1094:	e4 0f       	add	r30, r20
    1096:	f5 1f       	adc	r31, r21
    1098:	62 81       	ldd	r22, Z+2	; 0x02
    109a:	d6 12       	cpse	r13, r22
    109c:	19 c0       	rjmp	.+50     	; 0x10d0 <qtm_key_sensors_process+0x714>
    109e:	ba 01       	movw	r22, r20
    10a0:	66 0f       	add	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	ec 81       	ldd	r30, Y+4	; 0x04
    10a6:	fd 81       	ldd	r31, Y+5	; 0x05
    10a8:	4f 01       	movw	r8, r30
    10aa:	86 0e       	add	r8, r22
    10ac:	97 1e       	adc	r9, r23
    10ae:	f4 01       	movw	r30, r8
    10b0:	e2 80       	ldd	r14, Z+2	; 0x02
    10b2:	f3 80       	ldd	r15, Z+3	; 0x03
    10b4:	f7 01       	movw	r30, r14
    10b6:	f0 80       	ld	r15, Z
    10b8:	f0 fe       	sbrs	r15, 0
    10ba:	0a c0       	rjmp	.+20     	; 0x10d0 <qtm_key_sensors_process+0x714>
    10bc:	f4 01       	movw	r30, r8
    10be:	a0 82       	st	Z, r10
    10c0:	ec 81       	ldd	r30, Y+4	; 0x04
    10c2:	fd 81       	ldd	r31, Y+5	; 0x05
    10c4:	e6 0f       	add	r30, r22
    10c6:	f7 1f       	adc	r31, r23
    10c8:	02 80       	ldd	r0, Z+2	; 0x02
    10ca:	f3 81       	ldd	r31, Z+3	; 0x03
    10cc:	e0 2d       	mov	r30, r0
    10ce:	b0 82       	st	Z, r11
    10d0:	0f 5f       	subi	r16, 0xFF	; 255
    10d2:	1f 4f       	sbci	r17, 0xFF	; 255
    10d4:	4d 5f       	subi	r20, 0xFD	; 253
    10d6:	5f 4f       	sbci	r21, 0xFF	; 255
    10d8:	d4 cf       	rjmp	.-88     	; 0x1082 <qtm_key_sensors_process+0x6c6>
    10da:	11 96       	adiw	r26, 0x01	; 1
    10dc:	2d 5f       	subi	r18, 0xFD	; 253
    10de:	3f 4f       	sbci	r19, 0xFF	; 255
    10e0:	34 cf       	rjmp	.-408    	; 0xf4a <qtm_key_sensors_process+0x58e>
    10e2:	8b e0       	ldi	r24, 0x0B	; 11
    10e4:	df 91       	pop	r29
    10e6:	cf 91       	pop	r28
    10e8:	1f 91       	pop	r17
    10ea:	0f 91       	pop	r16
    10ec:	ff 90       	pop	r15
    10ee:	ef 90       	pop	r14
    10f0:	df 90       	pop	r13
    10f2:	cf 90       	pop	r12
    10f4:	bf 90       	pop	r11
    10f6:	af 90       	pop	r10
    10f8:	9f 90       	pop	r9
    10fa:	8f 90       	pop	r8
    10fc:	7f 90       	pop	r7
    10fe:	6f 90       	pop	r6
    1100:	5f 90       	pop	r5
    1102:	4f 90       	pop	r4
    1104:	3f 90       	pop	r3
    1106:	2f 90       	pop	r2
    1108:	08 95       	ret

0000110a <select_next_channel_to_measure>:
    110a:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <current_measure_channel>
    110e:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <current_measure_channel+0x1>
    1112:	a0 91 1a 02 	lds	r26, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1116:	b0 91 1b 02 	lds	r27, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    111a:	ed 91       	ld	r30, X+
    111c:	fc 91       	ld	r31, X
    111e:	11 97       	sbiw	r26, 0x01	; 1
    1120:	40 81       	ld	r20, Z
    1122:	51 81       	ldd	r21, Z+1	; 0x01
    1124:	25 e0       	ldi	r18, 0x05	; 5
    1126:	28 9f       	mul	r18, r24
    1128:	b0 01       	movw	r22, r0
    112a:	29 9f       	mul	r18, r25
    112c:	70 0d       	add	r23, r0
    112e:	11 24       	eor	r1, r1
    1130:	20 e0       	ldi	r18, 0x00	; 0
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	84 17       	cp	r24, r20
    1136:	95 07       	cpc	r25, r21
    1138:	a8 f4       	brcc	.+42     	; 0x1164 <select_next_channel_to_measure+0x5a>
    113a:	14 96       	adiw	r26, 0x04	; 4
    113c:	ed 91       	ld	r30, X+
    113e:	fc 91       	ld	r31, X
    1140:	15 97       	sbiw	r26, 0x05	; 5
    1142:	e2 0f       	add	r30, r18
    1144:	f3 1f       	adc	r31, r19
    1146:	e6 0f       	add	r30, r22
    1148:	f7 1f       	adc	r31, r23
    114a:	e0 81       	ld	r30, Z
    114c:	2b 5f       	subi	r18, 0xFB	; 251
    114e:	3f 4f       	sbci	r19, 0xFF	; 255
    1150:	e0 fd       	sbrc	r30, 0
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <select_next_channel_to_measure+0x4e>
    1154:	01 96       	adiw	r24, 0x01	; 1
    1156:	ee cf       	rjmp	.-36     	; 0x1134 <select_next_channel_to_measure+0x2a>
    1158:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <current_measure_channel+0x1>
    115c:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <current_measure_channel>
    1160:	80 e0       	ldi	r24, 0x00	; 0
    1162:	08 95       	ret
    1164:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <current_measure_channel+0x1>
    1168:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <current_measure_channel>
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	08 95       	ret

00001170 <qtm_measure_node>:
    1170:	4a e0       	ldi	r20, 0x0A	; 10
    1172:	48 9f       	mul	r20, r24
    1174:	90 01       	movw	r18, r0
    1176:	49 9f       	mul	r20, r25
    1178:	30 0d       	add	r19, r0
    117a:	11 24       	eor	r1, r1
    117c:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1180:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    1184:	02 80       	ldd	r0, Z+2	; 0x02
    1186:	f3 81       	ldd	r31, Z+3	; 0x03
    1188:	e0 2d       	mov	r30, r0
    118a:	e2 0f       	add	r30, r18
    118c:	f3 1f       	adc	r31, r19
    118e:	42 81       	ldd	r20, Z+2	; 0x02
    1190:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    1194:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1198:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    119c:	02 80       	ldd	r0, Z+2	; 0x02
    119e:	f3 81       	ldd	r31, Z+3	; 0x03
    11a0:	e0 2d       	mov	r30, r0
    11a2:	e2 0f       	add	r30, r18
    11a4:	f3 1f       	adc	r31, r19
    11a6:	43 81       	ldd	r20, Z+3	; 0x03
    11a8:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    11ac:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    11b0:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    11b4:	02 80       	ldd	r0, Z+2	; 0x02
    11b6:	f3 81       	ldd	r31, Z+3	; 0x03
    11b8:	e0 2d       	mov	r30, r0
    11ba:	e2 0f       	add	r30, r18
    11bc:	f3 1f       	adc	r31, r19
    11be:	44 81       	ldd	r20, Z+4	; 0x04
    11c0:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    11c4:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    11c8:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    11cc:	02 80       	ldd	r0, Z+2	; 0x02
    11ce:	f3 81       	ldd	r31, Z+3	; 0x03
    11d0:	e0 2d       	mov	r30, r0
    11d2:	e2 0f       	add	r30, r18
    11d4:	f3 1f       	adc	r31, r19
    11d6:	42 81       	ldd	r20, Z+2	; 0x02
    11d8:	53 81       	ldd	r21, Z+3	; 0x03
    11da:	64 81       	ldd	r22, Z+4	; 0x04
    11dc:	75 81       	ldd	r23, Z+5	; 0x05
    11de:	47 2f       	mov	r20, r23
    11e0:	55 27       	eor	r21, r21
    11e2:	66 27       	eor	r22, r22
    11e4:	77 27       	eor	r23, r23
    11e6:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    11ea:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    11ee:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    11f2:	02 80       	ldd	r0, Z+2	; 0x02
    11f4:	f3 81       	ldd	r31, Z+3	; 0x03
    11f6:	e0 2d       	mov	r30, r0
    11f8:	e2 0f       	add	r30, r18
    11fa:	f3 1f       	adc	r31, r19
    11fc:	40 81       	ld	r20, Z
    11fe:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    1202:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1206:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    120a:	02 80       	ldd	r0, Z+2	; 0x02
    120c:	f3 81       	ldd	r31, Z+3	; 0x03
    120e:	e0 2d       	mov	r30, r0
    1210:	e2 0f       	add	r30, r18
    1212:	f3 1f       	adc	r31, r19
    1214:	41 81       	ldd	r20, Z+1	; 0x01
    1216:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    121a:	65 e0       	ldi	r22, 0x05	; 5
    121c:	68 9f       	mul	r22, r24
    121e:	a0 01       	movw	r20, r0
    1220:	69 9f       	mul	r22, r25
    1222:	50 0d       	add	r21, r0
    1224:	11 24       	eor	r1, r1
    1226:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    122a:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    122e:	04 80       	ldd	r0, Z+4	; 0x04
    1230:	f5 81       	ldd	r31, Z+5	; 0x05
    1232:	e0 2d       	mov	r30, r0
    1234:	e4 0f       	add	r30, r20
    1236:	f5 1f       	adc	r31, r21
    1238:	83 81       	ldd	r24, Z+3	; 0x03
    123a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    123e:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1242:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    1246:	04 80       	ldd	r0, Z+4	; 0x04
    1248:	f5 81       	ldd	r31, Z+5	; 0x05
    124a:	e0 2d       	mov	r30, r0
    124c:	e4 0f       	add	r30, r20
    124e:	f5 1f       	adc	r31, r21
    1250:	83 81       	ldd	r24, Z+3	; 0x03
    1252:	94 81       	ldd	r25, Z+4	; 0x04
    1254:	88 27       	eor	r24, r24
    1256:	9f 73       	andi	r25, 0x3F	; 63
    1258:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    125c:	a0 91 1a 02 	lds	r26, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1260:	b0 91 1b 02 	lds	r27, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    1264:	14 96       	adiw	r26, 0x04	; 4
    1266:	ed 91       	ld	r30, X+
    1268:	fc 91       	ld	r31, X
    126a:	15 97       	sbiw	r26, 0x05	; 5
    126c:	e4 0f       	add	r30, r20
    126e:	f5 1f       	adc	r31, r21
    1270:	80 81       	ld	r24, Z
    1272:	81 fd       	sbrc	r24, 1
    1274:	60 83       	st	Z, r22
    1276:	14 96       	adiw	r26, 0x04	; 4
    1278:	8d 91       	ld	r24, X+
    127a:	9c 91       	ld	r25, X
    127c:	15 97       	sbiw	r26, 0x05	; 5
    127e:	fc 01       	movw	r30, r24
    1280:	e4 0f       	add	r30, r20
    1282:	f5 1f       	adc	r31, r21
    1284:	80 81       	ld	r24, Z
    1286:	8c 71       	andi	r24, 0x1C	; 28
    1288:	71 f4       	brne	.+28     	; 0x12a6 <qtm_measure_node+0x136>
    128a:	12 96       	adiw	r26, 0x02	; 2
    128c:	ed 91       	ld	r30, X+
    128e:	fc 91       	ld	r31, X
    1290:	13 97       	sbiw	r26, 0x03	; 3
    1292:	e2 0f       	add	r30, r18
    1294:	f3 1f       	adc	r31, r19
    1296:	e0 85       	ldd	r30, Z+8	; 0x08
    1298:	e2 95       	swap	r30
    129a:	ef 70       	andi	r30, 0x0F	; 15
    129c:	f0 e0       	ldi	r31, 0x00	; 0
    129e:	e0 57       	subi	r30, 0x70	; 112
    12a0:	fe 4f       	sbci	r31, 0xFE	; 254
    12a2:	80 81       	ld	r24, Z
    12a4:	01 c0       	rjmp	.+2      	; 0x12a8 <qtm_measure_node+0x138>
    12a6:	8f e3       	ldi	r24, 0x3F	; 63
    12a8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    12ac:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    12b0:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    12b4:	02 80       	ldd	r0, Z+2	; 0x02
    12b6:	f3 81       	ldd	r31, Z+3	; 0x03
    12b8:	e0 2d       	mov	r30, r0
    12ba:	e2 0f       	add	r30, r18
    12bc:	f3 1f       	adc	r31, r19
    12be:	86 81       	ldd	r24, Z+6	; 0x06
    12c0:	8b 3f       	cpi	r24, 0xFB	; 251
    12c2:	10 f4       	brcc	.+4      	; 0x12c8 <qtm_measure_node+0x158>
    12c4:	8c 5f       	subi	r24, 0xFC	; 252
    12c6:	01 c0       	rjmp	.+2      	; 0x12ca <qtm_measure_node+0x15a>
    12c8:	8f ef       	ldi	r24, 0xFF	; 255
    12ca:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    12ce:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    12d2:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    12d6:	02 80       	ldd	r0, Z+2	; 0x02
    12d8:	f3 81       	ldd	r31, Z+3	; 0x03
    12da:	e0 2d       	mov	r30, r0
    12dc:	e2 0f       	add	r30, r18
    12de:	f3 1f       	adc	r31, r19
    12e0:	87 81       	ldd	r24, Z+7	; 0x07
    12e2:	80 7f       	andi	r24, 0xF0	; 240
    12e4:	91 85       	ldd	r25, Z+9	; 0x09
    12e6:	89 2b       	or	r24, r25
    12e8:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    12ec:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    12f0:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    12f4:	82 81       	ldd	r24, Z+2	; 0x02
    12f6:	93 81       	ldd	r25, Z+3	; 0x03
    12f8:	fc 01       	movw	r30, r24
    12fa:	e2 0f       	add	r30, r18
    12fc:	f3 1f       	adc	r31, r19
    12fe:	87 81       	ldd	r24, Z+7	; 0x07
    1300:	8f 70       	andi	r24, 0x0F	; 15
    1302:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    1306:	82 e1       	ldi	r24, 0x12	; 18
    1308:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    130c:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1310:	81 60       	ori	r24, 0x01	; 1
    1312:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1316:	08 95       	ret

00001318 <qtm_acquisition_process>:
    1318:	4f 92       	push	r4
    131a:	5f 92       	push	r5
    131c:	6f 92       	push	r6
    131e:	7f 92       	push	r7
    1320:	8f 92       	push	r8
    1322:	9f 92       	push	r9
    1324:	af 92       	push	r10
    1326:	bf 92       	push	r11
    1328:	cf 92       	push	r12
    132a:	df 92       	push	r13
    132c:	ef 92       	push	r14
    132e:	ff 92       	push	r15
    1330:	0f 93       	push	r16
    1332:	1f 93       	push	r17
    1334:	cf 93       	push	r28
    1336:	df 93       	push	r29
    1338:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <touch_seq_lib_state>
    133c:	88 23       	and	r24, r24
    133e:	09 f4       	brne	.+2      	; 0x1342 <qtm_acquisition_process+0x2a>
    1340:	31 c1       	rjmp	.+610    	; 0x15a4 <qtm_acquisition_process+0x28c>
    1342:	a0 91 1a 02 	lds	r26, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1346:	b0 91 1b 02 	lds	r27, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    134a:	e0 90 1c 02 	lds	r14, 0x021C	; 0x80021c <qtm_raw_data_measurements_ptr>
    134e:	f0 90 1d 02 	lds	r15, 0x021D	; 0x80021d <qtm_raw_data_measurements_ptr+0x1>
    1352:	41 2c       	mov	r4, r1
    1354:	51 2c       	mov	r5, r1
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	70 e0       	ldi	r23, 0x00	; 0
    135a:	00 e0       	ldi	r16, 0x00	; 0
    135c:	10 e0       	ldi	r17, 0x00	; 0
    135e:	80 e0       	ldi	r24, 0x00	; 0
    1360:	66 24       	eor	r6, r6
    1362:	63 94       	inc	r6
    1364:	91 e8       	ldi	r25, 0x81	; 129
    1366:	79 2e       	mov	r7, r25
    1368:	aa 24       	eor	r10, r10
    136a:	aa 94       	dec	r10
    136c:	bb 24       	eor	r11, r11
    136e:	b3 94       	inc	r11
    1370:	cd 90       	ld	r12, X+
    1372:	dc 90       	ld	r13, X
    1374:	11 97       	sbiw	r26, 0x01	; 1
    1376:	f6 01       	movw	r30, r12
    1378:	20 81       	ld	r18, Z
    137a:	31 81       	ldd	r19, Z+1	; 0x01
    137c:	02 17       	cp	r16, r18
    137e:	13 07       	cpc	r17, r19
    1380:	08 f0       	brcs	.+2      	; 0x1384 <qtm_acquisition_process+0x6c>
    1382:	0c c1       	rjmp	.+536    	; 0x159c <qtm_acquisition_process+0x284>
    1384:	e7 01       	movw	r28, r14
    1386:	29 91       	ld	r18, Y+
    1388:	39 91       	ld	r19, Y+
    138a:	7e 01       	movw	r14, r28
    138c:	14 96       	adiw	r26, 0x04	; 4
    138e:	ed 91       	ld	r30, X+
    1390:	fc 91       	ld	r31, X
    1392:	15 97       	sbiw	r26, 0x05	; 5
    1394:	e6 0f       	add	r30, r22
    1396:	f7 1f       	adc	r31, r23
    1398:	40 81       	ld	r20, Z
    139a:	4c 71       	andi	r20, 0x1C	; 28
    139c:	50 e0       	ldi	r21, 0x00	; 0
    139e:	56 95       	lsr	r21
    13a0:	47 95       	ror	r20
    13a2:	56 95       	lsr	r21
    13a4:	47 95       	ror	r20
    13a6:	41 15       	cp	r20, r1
    13a8:	51 05       	cpc	r21, r1
    13aa:	21 f0       	breq	.+8      	; 0x13b4 <qtm_acquisition_process+0x9c>
    13ac:	41 30       	cpi	r20, 0x01	; 1
    13ae:	51 05       	cpc	r21, r1
    13b0:	c1 f0       	breq	.+48     	; 0x13e2 <qtm_acquisition_process+0xca>
    13b2:	eb c0       	rjmp	.+470    	; 0x158a <qtm_acquisition_process+0x272>
    13b4:	12 96       	adiw	r26, 0x02	; 2
    13b6:	4d 91       	ld	r20, X+
    13b8:	5c 91       	ld	r21, X
    13ba:	13 97       	sbiw	r26, 0x03	; 3
    13bc:	44 0d       	add	r20, r4
    13be:	55 1d       	adc	r21, r5
    13c0:	ea 01       	movw	r28, r20
    13c2:	98 85       	ldd	r25, Y+8	; 0x08
    13c4:	9f 70       	andi	r25, 0x0F	; 15
    13c6:	49 85       	ldd	r20, Y+9	; 0x09
    13c8:	94 17       	cp	r25, r20
    13ca:	10 f4       	brcc	.+4      	; 0x13d0 <qtm_acquisition_process+0xb8>
    13cc:	49 1b       	sub	r20, r25
    13ce:	01 c0       	rjmp	.+2      	; 0x13d2 <qtm_acquisition_process+0xba>
    13d0:	40 e0       	ldi	r20, 0x00	; 0
    13d2:	02 c0       	rjmp	.+4      	; 0x13d8 <qtm_acquisition_process+0xc0>
    13d4:	36 95       	lsr	r19
    13d6:	27 95       	ror	r18
    13d8:	4a 95       	dec	r20
    13da:	e2 f7       	brpl	.-8      	; 0x13d4 <qtm_acquisition_process+0xbc>
    13dc:	32 83       	std	Z+2, r19	; 0x02
    13de:	21 83       	std	Z+1, r18	; 0x01
    13e0:	d5 c0       	rjmp	.+426    	; 0x158c <qtm_acquisition_process+0x274>
    13e2:	12 96       	adiw	r26, 0x02	; 2
    13e4:	4d 91       	ld	r20, X+
    13e6:	5c 91       	ld	r21, X
    13e8:	13 97       	sbiw	r26, 0x03	; 3
    13ea:	44 0d       	add	r20, r4
    13ec:	55 1d       	adc	r21, r5
    13ee:	ea 01       	movw	r28, r20
    13f0:	09 84       	ldd	r0, Y+9	; 0x09
    13f2:	02 c0       	rjmp	.+4      	; 0x13f8 <qtm_acquisition_process+0xe0>
    13f4:	36 95       	lsr	r19
    13f6:	27 95       	ror	r18
    13f8:	0a 94       	dec	r0
    13fa:	e2 f7       	brpl	.-8      	; 0x13f4 <qtm_acquisition_process+0xdc>
    13fc:	32 83       	std	Z+2, r19	; 0x02
    13fe:	21 83       	std	Z+1, r18	; 0x01
    1400:	43 81       	ldd	r20, Z+3	; 0x03
    1402:	54 81       	ldd	r21, Z+4	; 0x04
    1404:	21 15       	cp	r18, r1
    1406:	d2 e0       	ldi	r29, 0x02	; 2
    1408:	3d 07       	cpc	r19, r29
    140a:	20 f0       	brcs	.+8      	; 0x1414 <qtm_acquisition_process+0xfc>
    140c:	2f 5f       	subi	r18, 0xFF	; 255
    140e:	31 40       	sbci	r19, 0x01	; 1
    1410:	91 e0       	ldi	r25, 0x01	; 1
    1412:	05 c0       	rjmp	.+10     	; 0x141e <qtm_acquisition_process+0x106>
    1414:	e5 01       	movw	r28, r10
    1416:	c2 1b       	sub	r28, r18
    1418:	d3 0b       	sbc	r29, r19
    141a:	9e 01       	movw	r18, r28
    141c:	90 e0       	ldi	r25, 0x00	; 0
    141e:	e6 01       	movw	r28, r12
    1420:	da 80       	ldd	r13, Y+2	; 0x02
    1422:	d0 e4       	ldi	r29, 0x40	; 64
    1424:	dd 12       	cpse	r13, r29
    1426:	05 c0       	rjmp	.+10     	; 0x1432 <qtm_acquisition_process+0x11a>
    1428:	36 95       	lsr	r19
    142a:	27 95       	ror	r18
    142c:	99 23       	and	r25, r25
    142e:	19 f0       	breq	.+6      	; 0x1436 <qtm_acquisition_process+0x11e>
    1430:	09 c0       	rjmp	.+18     	; 0x1444 <qtm_acquisition_process+0x12c>
    1432:	99 23       	and	r25, r25
    1434:	39 f0       	breq	.+14     	; 0x1444 <qtm_acquisition_process+0x12c>
    1436:	4f 3f       	cpi	r20, 0xFF	; 255
    1438:	9f e3       	ldi	r25, 0x3F	; 63
    143a:	59 07       	cpc	r21, r25
    143c:	31 f4       	brne	.+12     	; 0x144a <qtm_acquisition_process+0x132>
    143e:	70 82       	st	Z, r7
    1440:	8e e0       	ldi	r24, 0x0E	; 14
    1442:	07 c0       	rjmp	.+14     	; 0x1452 <qtm_acquisition_process+0x13a>
    1444:	88 24       	eor	r8, r8
    1446:	83 94       	inc	r8
    1448:	01 c0       	rjmp	.+2      	; 0x144c <qtm_acquisition_process+0x134>
    144a:	81 2c       	mov	r8, r1
    144c:	2a 30       	cpi	r18, 0x0A	; 10
    144e:	31 05       	cpc	r19, r1
    1450:	98 f4       	brcc	.+38     	; 0x1478 <qtm_acquisition_process+0x160>
    1452:	14 96       	adiw	r26, 0x04	; 4
    1454:	ed 91       	ld	r30, X+
    1456:	fc 91       	ld	r31, X
    1458:	15 97       	sbiw	r26, 0x05	; 5
    145a:	e6 0f       	add	r30, r22
    145c:	f7 1f       	adc	r31, r23
    145e:	20 81       	ld	r18, Z
    1460:	27 ff       	sbrs	r18, 7
    1462:	60 82       	st	Z, r6
    1464:	14 96       	adiw	r26, 0x04	; 4
    1466:	ed 91       	ld	r30, X+
    1468:	fc 91       	ld	r31, X
    146a:	15 97       	sbiw	r26, 0x05	; 5
    146c:	e6 0f       	add	r30, r22
    146e:	f7 1f       	adc	r31, r23
    1470:	5f 73       	andi	r21, 0x3F	; 63
    1472:	54 83       	std	Z+4, r21	; 0x04
    1474:	43 83       	std	Z+3, r20	; 0x03
    1476:	8a c0       	rjmp	.+276    	; 0x158c <qtm_acquisition_process+0x274>
    1478:	6a 01       	movw	r12, r20
    147a:	cc 24       	eor	r12, r12
    147c:	c0 e3       	ldi	r28, 0x30	; 48
    147e:	dc 22       	and	r13, r28
    1480:	9d 2c       	mov	r9, r13
    1482:	92 94       	swap	r9
    1484:	df e0       	ldi	r29, 0x0F	; 15
    1486:	9d 22       	and	r9, r29
    1488:	6a 01       	movw	r12, r20
    148a:	cc 24       	eor	r12, r12
    148c:	df e0       	ldi	r29, 0x0F	; 15
    148e:	dd 22       	and	r13, r29
    1490:	9d 2d       	mov	r25, r13
    1492:	6a 01       	movw	r12, r20
    1494:	c0 ef       	ldi	r28, 0xF0	; 240
    1496:	cc 22       	and	r12, r28
    1498:	dd 24       	eor	r13, r13
    149a:	54 e0       	ldi	r21, 0x04	; 4
    149c:	d6 94       	lsr	r13
    149e:	c7 94       	ror	r12
    14a0:	5a 95       	dec	r21
    14a2:	e1 f7       	brne	.-8      	; 0x149c <qtm_acquisition_process+0x184>
    14a4:	5c 2d       	mov	r21, r12
    14a6:	4f 70       	andi	r20, 0x0F	; 15
    14a8:	81 10       	cpse	r8, r1
    14aa:	32 c0       	rjmp	.+100    	; 0x1510 <qtm_acquisition_process+0x1f8>
    14ac:	20 3d       	cpi	r18, 0xD0	; 208
    14ae:	31 05       	cpc	r19, r1
    14b0:	60 f0       	brcs	.+24     	; 0x14ca <qtm_acquisition_process+0x1b2>
    14b2:	d3 e0       	ldi	r29, 0x03	; 3
    14b4:	9d 16       	cp	r9, r29
    14b6:	49 f0       	breq	.+18     	; 0x14ca <qtm_acquisition_process+0x1b2>
    14b8:	93 94       	inc	r9
    14ba:	2f 5c       	subi	r18, 0xCF	; 207
    14bc:	31 09       	sbc	r19, r1
    14be:	f6 cf       	rjmp	.-20     	; 0x14ac <qtm_acquisition_process+0x194>
    14c0:	9f 30       	cpi	r25, 0x0F	; 15
    14c2:	41 f0       	breq	.+16     	; 0x14d4 <qtm_acquisition_process+0x1bc>
    14c4:	9f 5f       	subi	r25, 0xFF	; 255
    14c6:	25 51       	subi	r18, 0x15	; 21
    14c8:	31 09       	sbc	r19, r1
    14ca:	26 31       	cpi	r18, 0x16	; 22
    14cc:	31 05       	cpc	r19, r1
    14ce:	c0 f7       	brcc	.-16     	; 0x14c0 <qtm_acquisition_process+0x1a8>
    14d0:	9f 30       	cpi	r25, 0x0F	; 15
    14d2:	69 f4       	brne	.+26     	; 0x14ee <qtm_acquisition_process+0x1d6>
    14d4:	93 e0       	ldi	r25, 0x03	; 3
    14d6:	99 12       	cpse	r9, r25
    14d8:	02 c0       	rjmp	.+4      	; 0x14de <qtm_acquisition_process+0x1c6>
    14da:	9f e0       	ldi	r25, 0x0F	; 15
    14dc:	08 c0       	rjmp	.+16     	; 0x14ee <qtm_acquisition_process+0x1d6>
    14de:	93 94       	inc	r9
    14e0:	95 e0       	ldi	r25, 0x05	; 5
    14e2:	05 c0       	rjmp	.+10     	; 0x14ee <qtm_acquisition_process+0x1d6>
    14e4:	5f 30       	cpi	r21, 0x0F	; 15
    14e6:	49 f0       	breq	.+18     	; 0x14fa <qtm_acquisition_process+0x1e2>
    14e8:	5f 5f       	subi	r21, 0xFF	; 255
    14ea:	22 50       	subi	r18, 0x02	; 2
    14ec:	31 09       	sbc	r19, r1
    14ee:	23 30       	cpi	r18, 0x03	; 3
    14f0:	31 05       	cpc	r19, r1
    14f2:	c0 f7       	brcc	.-16     	; 0x14e4 <qtm_acquisition_process+0x1cc>
    14f4:	5f 30       	cpi	r21, 0x0F	; 15
    14f6:	09 f0       	breq	.+2      	; 0x14fa <qtm_acquisition_process+0x1e2>
    14f8:	5b c0       	rjmp	.+182    	; 0x15b0 <qtm_acquisition_process+0x298>
    14fa:	9f 30       	cpi	r25, 0x0F	; 15
    14fc:	09 f4       	brne	.+2      	; 0x1500 <qtm_acquisition_process+0x1e8>
    14fe:	54 c0       	rjmp	.+168    	; 0x15a8 <qtm_acquisition_process+0x290>
    1500:	9f 5f       	subi	r25, 0xFF	; 255
    1502:	55 e0       	ldi	r21, 0x05	; 5
    1504:	55 c0       	rjmp	.+170    	; 0x15b0 <qtm_acquisition_process+0x298>
    1506:	99 20       	and	r9, r9
    1508:	61 f0       	breq	.+24     	; 0x1522 <qtm_acquisition_process+0x20a>
    150a:	9a 94       	dec	r9
    150c:	2f 5c       	subi	r18, 0xCF	; 207
    150e:	31 09       	sbc	r19, r1
    1510:	20 3d       	cpi	r18, 0xD0	; 208
    1512:	31 05       	cpc	r19, r1
    1514:	c0 f7       	brcc	.-16     	; 0x1506 <qtm_acquisition_process+0x1ee>
    1516:	05 c0       	rjmp	.+10     	; 0x1522 <qtm_acquisition_process+0x20a>
    1518:	99 23       	and	r25, r25
    151a:	41 f0       	breq	.+16     	; 0x152c <qtm_acquisition_process+0x214>
    151c:	91 50       	subi	r25, 0x01	; 1
    151e:	25 51       	subi	r18, 0x15	; 21
    1520:	31 09       	sbc	r19, r1
    1522:	26 31       	cpi	r18, 0x16	; 22
    1524:	31 05       	cpc	r19, r1
    1526:	c0 f7       	brcc	.-16     	; 0x1518 <qtm_acquisition_process+0x200>
    1528:	91 11       	cpse	r25, r1
    152a:	0c c0       	rjmp	.+24     	; 0x1544 <qtm_acquisition_process+0x22c>
    152c:	91 10       	cpse	r9, r1
    152e:	02 c0       	rjmp	.+4      	; 0x1534 <qtm_acquisition_process+0x21c>
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	08 c0       	rjmp	.+16     	; 0x1544 <qtm_acquisition_process+0x22c>
    1534:	9a 94       	dec	r9
    1536:	9a e0       	ldi	r25, 0x0A	; 10
    1538:	05 c0       	rjmp	.+10     	; 0x1544 <qtm_acquisition_process+0x22c>
    153a:	55 23       	and	r21, r21
    153c:	41 f0       	breq	.+16     	; 0x154e <qtm_acquisition_process+0x236>
    153e:	51 50       	subi	r21, 0x01	; 1
    1540:	22 50       	subi	r18, 0x02	; 2
    1542:	31 09       	sbc	r19, r1
    1544:	23 30       	cpi	r18, 0x03	; 3
    1546:	31 05       	cpc	r19, r1
    1548:	c0 f7       	brcc	.-16     	; 0x153a <qtm_acquisition_process+0x222>
    154a:	51 11       	cpse	r21, r1
    154c:	0d c0       	rjmp	.+26     	; 0x1568 <qtm_acquisition_process+0x250>
    154e:	99 23       	and	r25, r25
    1550:	b9 f1       	breq	.+110    	; 0x15c0 <qtm_acquisition_process+0x2a8>
    1552:	91 50       	subi	r25, 0x01	; 1
    1554:	5a e0       	ldi	r21, 0x0A	; 10
    1556:	23 30       	cpi	r18, 0x03	; 3
    1558:	31 05       	cpc	r19, r1
    155a:	d0 f6       	brcc	.-76     	; 0x1510 <qtm_acquisition_process+0x1f8>
    155c:	05 c0       	rjmp	.+10     	; 0x1568 <qtm_acquisition_process+0x250>
    155e:	23 30       	cpi	r18, 0x03	; 3
    1560:	31 05       	cpc	r19, r1
    1562:	58 f1       	brcs	.+86     	; 0x15ba <qtm_acquisition_process+0x2a2>
    1564:	4f e0       	ldi	r20, 0x0F	; 15
    1566:	5f e0       	ldi	r21, 0x0F	; 15
    1568:	29 2d       	mov	r18, r9
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	32 2f       	mov	r19, r18
    156e:	22 27       	eor	r18, r18
    1570:	32 95       	swap	r19
    1572:	30 7f       	andi	r19, 0xF0	; 240
    1574:	39 2b       	or	r19, r25
    1576:	24 2b       	or	r18, r20
    1578:	c0 e1       	ldi	r28, 0x10	; 16
    157a:	5c 9f       	mul	r21, r28
    157c:	60 01       	movw	r12, r0
    157e:	11 24       	eor	r1, r1
    1580:	c2 2a       	or	r12, r18
    1582:	d3 2a       	or	r13, r19
    1584:	d4 82       	std	Z+4, r13	; 0x04
    1586:	c3 82       	std	Z+3, r12	; 0x03
    1588:	01 c0       	rjmp	.+2      	; 0x158c <qtm_acquisition_process+0x274>
    158a:	ff cf       	rjmp	.-2      	; 0x158a <qtm_acquisition_process+0x272>
    158c:	0f 5f       	subi	r16, 0xFF	; 255
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	6b 5f       	subi	r22, 0xFB	; 251
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	da e0       	ldi	r29, 0x0A	; 10
    1596:	4d 0e       	add	r4, r29
    1598:	51 1c       	adc	r5, r1
    159a:	ea ce       	rjmp	.-556    	; 0x1370 <qtm_acquisition_process+0x58>
    159c:	92 e0       	ldi	r25, 0x02	; 2
    159e:	90 93 be 01 	sts	0x01BE, r25	; 0x8001be <touch_seq_lib_state>
    15a2:	10 c0       	rjmp	.+32     	; 0x15c4 <qtm_acquisition_process+0x2ac>
    15a4:	83 e0       	ldi	r24, 0x03	; 3
    15a6:	0e c0       	rjmp	.+28     	; 0x15c4 <qtm_acquisition_process+0x2ac>
    15a8:	53 e0       	ldi	r21, 0x03	; 3
    15aa:	95 16       	cp	r9, r21
    15ac:	c1 f2       	breq	.-80     	; 0x155e <qtm_acquisition_process+0x246>
    15ae:	5f e0       	ldi	r21, 0x0F	; 15
    15b0:	23 30       	cpi	r18, 0x03	; 3
    15b2:	31 05       	cpc	r19, r1
    15b4:	08 f0       	brcs	.+2      	; 0x15b8 <qtm_acquisition_process+0x2a0>
    15b6:	7a cf       	rjmp	.-268    	; 0x14ac <qtm_acquisition_process+0x194>
    15b8:	d7 cf       	rjmp	.-82     	; 0x1568 <qtm_acquisition_process+0x250>
    15ba:	5f e0       	ldi	r21, 0x0F	; 15
    15bc:	4f e0       	ldi	r20, 0x0F	; 15
    15be:	d4 cf       	rjmp	.-88     	; 0x1568 <qtm_acquisition_process+0x250>
    15c0:	50 e0       	ldi	r21, 0x00	; 0
    15c2:	d2 cf       	rjmp	.-92     	; 0x1568 <qtm_acquisition_process+0x250>
    15c4:	df 91       	pop	r29
    15c6:	cf 91       	pop	r28
    15c8:	1f 91       	pop	r17
    15ca:	0f 91       	pop	r16
    15cc:	ff 90       	pop	r15
    15ce:	ef 90       	pop	r14
    15d0:	df 90       	pop	r13
    15d2:	cf 90       	pop	r12
    15d4:	bf 90       	pop	r11
    15d6:	af 90       	pop	r10
    15d8:	9f 90       	pop	r9
    15da:	8f 90       	pop	r8
    15dc:	7f 90       	pop	r7
    15de:	6f 90       	pop	r6
    15e0:	5f 90       	pop	r5
    15e2:	4f 90       	pop	r4
    15e4:	08 95       	ret

000015e6 <qtm_ptc_init_acquisition_module>:
    15e6:	8f 92       	push	r8
    15e8:	9f 92       	push	r9
    15ea:	af 92       	push	r10
    15ec:	bf 92       	push	r11
    15ee:	cf 92       	push	r12
    15f0:	df 92       	push	r13
    15f2:	ef 92       	push	r14
    15f4:	ff 92       	push	r15
    15f6:	cf 93       	push	r28
    15f8:	df 93       	push	r29
    15fa:	00 97       	sbiw	r24, 0x00	; 0
    15fc:	09 f4       	brne	.+2      	; 0x1600 <qtm_ptc_init_acquisition_module+0x1a>
    15fe:	76 c0       	rjmp	.+236    	; 0x16ec <qtm_ptc_init_acquisition_module+0x106>
    1600:	dc 01       	movw	r26, r24
    1602:	ed 91       	ld	r30, X+
    1604:	fc 91       	ld	r31, X
    1606:	c0 80       	ld	r12, Z
    1608:	d1 80       	ldd	r13, Z+1	; 0x01
    160a:	e1 2c       	mov	r14, r1
    160c:	f1 2c       	mov	r15, r1
    160e:	a0 e0       	ldi	r26, 0x00	; 0
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	40 e0       	ldi	r20, 0x00	; 0
    1614:	50 e0       	ldi	r21, 0x00	; 0
    1616:	ba 01       	movw	r22, r20
    1618:	20 e0       	ldi	r18, 0x00	; 0
    161a:	30 e0       	ldi	r19, 0x00	; 0
    161c:	ac 15       	cp	r26, r12
    161e:	bd 05       	cpc	r27, r13
    1620:	b1 f0       	breq	.+44     	; 0x164e <qtm_ptc_init_acquisition_module+0x68>
    1622:	ec 01       	movw	r28, r24
    1624:	ea 81       	ldd	r30, Y+2	; 0x02
    1626:	fb 81       	ldd	r31, Y+3	; 0x03
    1628:	ee 0d       	add	r30, r14
    162a:	ff 1d       	adc	r31, r15
    162c:	a0 80       	ld	r10, Z
    162e:	b1 80       	ldd	r11, Z+1	; 0x01
    1630:	2a 29       	or	r18, r10
    1632:	3b 29       	or	r19, r11
    1634:	82 80       	ldd	r8, Z+2	; 0x02
    1636:	93 80       	ldd	r9, Z+3	; 0x03
    1638:	a4 80       	ldd	r10, Z+4	; 0x04
    163a:	b5 80       	ldd	r11, Z+5	; 0x05
    163c:	48 29       	or	r20, r8
    163e:	59 29       	or	r21, r9
    1640:	6a 29       	or	r22, r10
    1642:	7b 29       	or	r23, r11
    1644:	11 96       	adiw	r26, 0x01	; 1
    1646:	da e0       	ldi	r29, 0x0A	; 10
    1648:	ed 0e       	add	r14, r29
    164a:	f1 1c       	adc	r15, r1
    164c:	e7 cf       	rjmp	.-50     	; 0x161c <qtm_ptc_init_acquisition_module+0x36>
    164e:	41 15       	cp	r20, r1
    1650:	51 05       	cpc	r21, r1
    1652:	61 05       	cpc	r22, r1
    1654:	71 05       	cpc	r23, r1
    1656:	09 f4       	brne	.+2      	; 0x165a <qtm_ptc_init_acquisition_module+0x74>
    1658:	4b c0       	rjmp	.+150    	; 0x16f0 <qtm_ptc_init_acquisition_module+0x10a>
    165a:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <touch_seq_lib_state>
    165e:	4a 01       	movw	r8, r20
    1660:	5b 01       	movw	r10, r22
    1662:	88 24       	eor	r8, r8
    1664:	aa 24       	eor	r10, r10
    1666:	bb 24       	eor	r11, r11
    1668:	6a 01       	movw	r12, r20
    166a:	7b 01       	movw	r14, r22
    166c:	cc 24       	eor	r12, r12
    166e:	dd 24       	eor	r13, r13
    1670:	ff 24       	eor	r15, r15
    1672:	87 2f       	mov	r24, r23
    1674:	99 27       	eor	r25, r25
    1676:	aa 27       	eor	r26, r26
    1678:	bb 27       	eor	r27, r27
    167a:	e1 11       	cpse	r30, r1
    167c:	17 c0       	rjmp	.+46     	; 0x16ac <qtm_ptc_init_acquisition_module+0xc6>
    167e:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1682:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1686:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    168a:	89 2c       	mov	r8, r9
    168c:	9a 2c       	mov	r9, r10
    168e:	ab 2c       	mov	r10, r11
    1690:	bb 24       	eor	r11, r11
    1692:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1696:	67 01       	movw	r12, r14
    1698:	ee 24       	eor	r14, r14
    169a:	ff 24       	eor	r15, r15
    169c:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16a0:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16a4:	81 e0       	ldi	r24, 0x01	; 1
    16a6:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <touch_seq_lib_state>
    16aa:	1e c0       	rjmp	.+60     	; 0x16e8 <qtm_ptc_init_acquisition_module+0x102>
    16ac:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16b0:	2e 2b       	or	r18, r30
    16b2:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16b6:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16ba:	23 2b       	or	r18, r19
    16bc:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16c0:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    16c4:	42 2b       	or	r20, r18
    16c6:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    16ca:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    16ce:	29 29       	or	r18, r9
    16d0:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    16d4:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16d8:	2e 29       	or	r18, r14
    16da:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16de:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16e2:	82 2b       	or	r24, r18
    16e4:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16e8:	80 e0       	ldi	r24, 0x00	; 0
    16ea:	03 c0       	rjmp	.+6      	; 0x16f2 <qtm_ptc_init_acquisition_module+0x10c>
    16ec:	8b e0       	ldi	r24, 0x0B	; 11
    16ee:	01 c0       	rjmp	.+2      	; 0x16f2 <qtm_ptc_init_acquisition_module+0x10c>
    16f0:	82 e0       	ldi	r24, 0x02	; 2
    16f2:	df 91       	pop	r29
    16f4:	cf 91       	pop	r28
    16f6:	ff 90       	pop	r15
    16f8:	ef 90       	pop	r14
    16fa:	df 90       	pop	r13
    16fc:	cf 90       	pop	r12
    16fe:	bf 90       	pop	r11
    1700:	af 90       	pop	r10
    1702:	9f 90       	pop	r9
    1704:	8f 90       	pop	r8
    1706:	08 95       	ret

00001708 <qtm_ptc_qtlib_assign_signal_memory>:
    1708:	00 97       	sbiw	r24, 0x00	; 0
    170a:	31 f0       	breq	.+12     	; 0x1718 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    170c:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <qtm_raw_data_measurements_ptr+0x1>
    1710:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <qtm_raw_data_measurements_ptr>
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	08 95       	ret
    1718:	8b e0       	ldi	r24, 0x0B	; 11
    171a:	08 95       	ret

0000171c <qtm_ptc_start_measurement_seq>:
    171c:	cf 93       	push	r28
    171e:	df 93       	push	r29
    1720:	00 d0       	rcall	.+0      	; 0x1722 <qtm_ptc_start_measurement_seq+0x6>
    1722:	00 d0       	rcall	.+0      	; 0x1724 <qtm_ptc_start_measurement_seq+0x8>
    1724:	cd b7       	in	r28, 0x3d	; 61
    1726:	de b7       	in	r29, 0x3e	; 62
    1728:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <max_conversion_cycles>
    172c:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <max_conversion_cycles+0x1>
    1730:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <max_conversion_cycles+0x2>
    1734:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <max_conversion_cycles+0x3>
    1738:	61 15       	cp	r22, r1
    173a:	71 05       	cpc	r23, r1
    173c:	09 f4       	brne	.+2      	; 0x1740 <qtm_ptc_start_measurement_seq+0x24>
    173e:	db c0       	rjmp	.+438    	; 0x18f6 <qtm_ptc_start_measurement_seq+0x1da>
    1740:	00 97       	sbiw	r24, 0x00	; 0
    1742:	09 f4       	brne	.+2      	; 0x1746 <qtm_ptc_start_measurement_seq+0x2a>
    1744:	d8 c0       	rjmp	.+432    	; 0x18f6 <qtm_ptc_start_measurement_seq+0x1da>
    1746:	20 91 be 01 	lds	r18, 0x01BE	; 0x8001be <touch_seq_lib_state>
    174a:	22 23       	and	r18, r18
    174c:	09 f4       	brne	.+2      	; 0x1750 <qtm_ptc_start_measurement_seq+0x34>
    174e:	d5 c0       	rjmp	.+426    	; 0x18fa <qtm_ptc_start_measurement_seq+0x1de>
    1750:	24 30       	cpi	r18, 0x04	; 4
    1752:	09 f0       	breq	.+2      	; 0x1756 <qtm_ptc_start_measurement_seq+0x3a>
    1754:	93 c0       	rjmp	.+294    	; 0x187c <qtm_ptc_start_measurement_seq+0x160>
    1756:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <ptc_eoc_ok_flag>
    175a:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    175e:	80 ff       	sbrs	r24, 0
    1760:	8b c0       	rjmp	.+278    	; 0x1878 <qtm_ptc_start_measurement_seq+0x15c>
    1762:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	a6 e0       	ldi	r26, 0x06	; 6
    176a:	b0 e0       	ldi	r27, 0x00	; 0
    176c:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <__umulhisi3>
    1770:	60 93 c2 01 	sts	0x01C2, r22	; 0x8001c2 <max_conversion_cycles>
    1774:	70 93 c3 01 	sts	0x01C3, r23	; 0x8001c3 <max_conversion_cycles+0x1>
    1778:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <max_conversion_cycles+0x2>
    177c:	90 93 c5 01 	sts	0x01C5, r25	; 0x8001c5 <max_conversion_cycles+0x3>
    1780:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    1784:	2f 70       	andi	r18, 0x0F	; 15
    1786:	dc 01       	movw	r26, r24
    1788:	cb 01       	movw	r24, r22
    178a:	82 0f       	add	r24, r18
    178c:	91 1d       	adc	r25, r1
    178e:	a1 1d       	adc	r26, r1
    1790:	b1 1d       	adc	r27, r1
    1792:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <max_conversion_cycles>
    1796:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <max_conversion_cycles+0x1>
    179a:	a0 93 c4 01 	sts	0x01C4, r26	; 0x8001c4 <max_conversion_cycles+0x2>
    179e:	b0 93 c5 01 	sts	0x01C5, r27	; 0x8001c5 <max_conversion_cycles+0x3>
    17a2:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    17a6:	27 70       	andi	r18, 0x07	; 7
    17a8:	04 c0       	rjmp	.+8      	; 0x17b2 <qtm_ptc_start_measurement_seq+0x96>
    17aa:	88 0f       	add	r24, r24
    17ac:	99 1f       	adc	r25, r25
    17ae:	aa 1f       	adc	r26, r26
    17b0:	bb 1f       	adc	r27, r27
    17b2:	2a 95       	dec	r18
    17b4:	d2 f7       	brpl	.-12     	; 0x17aa <qtm_ptc_start_measurement_seq+0x8e>
    17b6:	0e 96       	adiw	r24, 0x0e	; 14
    17b8:	a1 1d       	adc	r26, r1
    17ba:	b1 1d       	adc	r27, r1
    17bc:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <max_conversion_cycles>
    17c0:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <max_conversion_cycles+0x1>
    17c4:	a0 93 c4 01 	sts	0x01C4, r26	; 0x8001c4 <max_conversion_cycles+0x2>
    17c8:	b0 93 c5 01 	sts	0x01C5, r27	; 0x8001c5 <max_conversion_cycles+0x3>
    17cc:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    17d0:	23 70       	andi	r18, 0x03	; 3
    17d2:	04 c0       	rjmp	.+8      	; 0x17dc <qtm_ptc_start_measurement_seq+0xc0>
    17d4:	88 0f       	add	r24, r24
    17d6:	99 1f       	adc	r25, r25
    17d8:	aa 1f       	adc	r26, r26
    17da:	bb 1f       	adc	r27, r27
    17dc:	2a 95       	dec	r18
    17de:	d2 f7       	brpl	.-12     	; 0x17d4 <qtm_ptc_start_measurement_seq+0xb8>
    17e0:	22 e0       	ldi	r18, 0x02	; 2
    17e2:	b6 95       	lsr	r27
    17e4:	a7 95       	ror	r26
    17e6:	97 95       	ror	r25
    17e8:	87 95       	ror	r24
    17ea:	2a 95       	dec	r18
    17ec:	d1 f7       	brne	.-12     	; 0x17e2 <qtm_ptc_start_measurement_seq+0xc6>
    17ee:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <max_conversion_cycles>
    17f2:	90 93 c3 01 	sts	0x01C3, r25	; 0x8001c3 <max_conversion_cycles+0x1>
    17f6:	a0 93 c4 01 	sts	0x01C4, r26	; 0x8001c4 <max_conversion_cycles+0x2>
    17fa:	b0 93 c5 01 	sts	0x01C5, r27	; 0x8001c5 <max_conversion_cycles+0x3>
    17fe:	19 82       	std	Y+1, r1	; 0x01
    1800:	1a 82       	std	Y+2, r1	; 0x02
    1802:	1b 82       	std	Y+3, r1	; 0x03
    1804:	1c 82       	std	Y+4, r1	; 0x04
    1806:	21 e0       	ldi	r18, 0x01	; 1
    1808:	49 81       	ldd	r20, Y+1	; 0x01
    180a:	5a 81       	ldd	r21, Y+2	; 0x02
    180c:	6b 81       	ldd	r22, Y+3	; 0x03
    180e:	7c 81       	ldd	r23, Y+4	; 0x04
    1810:	48 17       	cp	r20, r24
    1812:	59 07       	cpc	r21, r25
    1814:	6a 07       	cpc	r22, r26
    1816:	7b 07       	cpc	r23, r27
    1818:	b0 f4       	brcc	.+44     	; 0x1846 <qtm_ptc_start_measurement_seq+0x12a>
    181a:	30 91 c1 01 	lds	r19, 0x01C1	; 0x8001c1 <ptc_eoc_ok_flag>
    181e:	33 23       	and	r19, r19
    1820:	29 f0       	breq	.+10     	; 0x182c <qtm_ptc_start_measurement_seq+0x110>
    1822:	89 83       	std	Y+1, r24	; 0x01
    1824:	9a 83       	std	Y+2, r25	; 0x02
    1826:	ab 83       	std	Y+3, r26	; 0x03
    1828:	bc 83       	std	Y+4, r27	; 0x04
    182a:	20 e0       	ldi	r18, 0x00	; 0
    182c:	49 81       	ldd	r20, Y+1	; 0x01
    182e:	5a 81       	ldd	r21, Y+2	; 0x02
    1830:	6b 81       	ldd	r22, Y+3	; 0x03
    1832:	7c 81       	ldd	r23, Y+4	; 0x04
    1834:	4f 5f       	subi	r20, 0xFF	; 255
    1836:	5f 4f       	sbci	r21, 0xFF	; 255
    1838:	6f 4f       	sbci	r22, 0xFF	; 255
    183a:	7f 4f       	sbci	r23, 0xFF	; 255
    183c:	49 83       	std	Y+1, r20	; 0x01
    183e:	5a 83       	std	Y+2, r21	; 0x02
    1840:	6b 83       	std	Y+3, r22	; 0x03
    1842:	7c 83       	std	Y+4, r23	; 0x04
    1844:	e1 cf       	rjmp	.-62     	; 0x1808 <qtm_ptc_start_measurement_seq+0xec>
    1846:	22 23       	and	r18, r18
    1848:	b9 f0       	breq	.+46     	; 0x1878 <qtm_ptc_start_measurement_seq+0x15c>
    184a:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    184e:	80 ff       	sbrs	r24, 0
    1850:	13 c0       	rjmp	.+38     	; 0x1878 <qtm_ptc_start_measurement_seq+0x15c>
    1852:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1856:	00 00       	nop
    1858:	82 e1       	ldi	r24, 0x12	; 18
    185a:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    185e:	00 00       	nop
    1860:	81 e0       	ldi	r24, 0x01	; 1
    1862:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1866:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <ptc_lockups>
    186a:	90 91 bb 01 	lds	r25, 0x01BB	; 0x8001bb <ptc_lockups+0x1>
    186e:	01 96       	adiw	r24, 0x01	; 1
    1870:	90 93 bb 01 	sts	0x01BB, r25	; 0x8001bb <ptc_lockups+0x1>
    1874:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <ptc_lockups>
    1878:	81 e0       	ldi	r24, 0x01	; 1
    187a:	42 c0       	rjmp	.+132    	; 0x1900 <qtm_ptc_start_measurement_seq+0x1e4>
    187c:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    1880:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    1884:	70 93 b9 01 	sts	0x01B9, r23	; 0x8001b9 <ptc_seq_measure_complete_pointer+0x1>
    1888:	60 93 b8 01 	sts	0x01B8, r22	; 0x8001b8 <ptc_seq_measure_complete_pointer>
    188c:	dc 01       	movw	r26, r24
    188e:	ed 91       	ld	r30, X+
    1890:	fc 91       	ld	r31, X
    1892:	82 81       	ldd	r24, Z+2	; 0x02
    1894:	80 34       	cpi	r24, 0x40	; 64
    1896:	11 f4       	brne	.+4      	; 0x189c <qtm_ptc_start_measurement_seq+0x180>
    1898:	88 e0       	ldi	r24, 0x08	; 8
    189a:	03 c0       	rjmp	.+6      	; 0x18a2 <qtm_ptc_start_measurement_seq+0x186>
    189c:	80 38       	cpi	r24, 0x80	; 128
    189e:	79 f5       	brne	.+94     	; 0x18fe <qtm_ptc_start_measurement_seq+0x1e2>
    18a0:	8a e0       	ldi	r24, 0x0A	; 10
    18a2:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    18a6:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <qtm_acquisition_control_working_set_ptr>
    18aa:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <qtm_acquisition_control_working_set_ptr+0x1>
    18ae:	01 90       	ld	r0, Z+
    18b0:	f0 81       	ld	r31, Z
    18b2:	e0 2d       	mov	r30, r0
    18b4:	84 81       	ldd	r24, Z+4	; 0x04
    18b6:	80 31       	cpi	r24, 0x10	; 16
    18b8:	08 f0       	brcs	.+2      	; 0x18bc <qtm_ptc_start_measurement_seq+0x1a0>
    18ba:	80 e1       	ldi	r24, 0x10	; 16
    18bc:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    18c0:	81 e0       	ldi	r24, 0x01	; 1
    18c2:	84 bf       	out	0x34, r24	; 52
    18c4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    18c8:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <current_measure_channel+0x1>
    18cc:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <current_measure_channel>
    18d0:	0e 94 85 08 	call	0x110a	; 0x110a <select_next_channel_to_measure>
    18d4:	81 11       	cpse	r24, r1
    18d6:	0b c0       	rjmp	.+22     	; 0x18ee <qtm_ptc_start_measurement_seq+0x1d2>
    18d8:	84 e0       	ldi	r24, 0x04	; 4
    18da:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <touch_seq_lib_state>
    18de:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <current_measure_channel>
    18e2:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <current_measure_channel+0x1>
    18e6:	0e 94 b8 08 	call	0x1170	; 0x1170 <qtm_measure_node>
    18ea:	80 e0       	ldi	r24, 0x00	; 0
    18ec:	09 c0       	rjmp	.+18     	; 0x1900 <qtm_ptc_start_measurement_seq+0x1e4>
    18ee:	82 e0       	ldi	r24, 0x02	; 2
    18f0:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <touch_seq_lib_state>
    18f4:	05 c0       	rjmp	.+10     	; 0x1900 <qtm_ptc_start_measurement_seq+0x1e4>
    18f6:	8b e0       	ldi	r24, 0x0B	; 11
    18f8:	03 c0       	rjmp	.+6      	; 0x1900 <qtm_ptc_start_measurement_seq+0x1e4>
    18fa:	83 e0       	ldi	r24, 0x03	; 3
    18fc:	01 c0       	rjmp	.+2      	; 0x1900 <qtm_ptc_start_measurement_seq+0x1e4>
    18fe:	82 e0       	ldi	r24, 0x02	; 2
    1900:	0f 90       	pop	r0
    1902:	0f 90       	pop	r0
    1904:	0f 90       	pop	r0
    1906:	0f 90       	pop	r0
    1908:	df 91       	pop	r29
    190a:	cf 91       	pop	r28
    190c:	08 95       	ret

0000190e <qtm_enable_sensor_node>:
    190e:	00 97       	sbiw	r24, 0x00	; 0
    1910:	c9 f0       	breq	.+50     	; 0x1944 <qtm_enable_sensor_node+0x36>
    1912:	dc 01       	movw	r26, r24
    1914:	ed 91       	ld	r30, X+
    1916:	fc 91       	ld	r31, X
    1918:	11 97       	sbiw	r26, 0x01	; 1
    191a:	20 81       	ld	r18, Z
    191c:	31 81       	ldd	r19, Z+1	; 0x01
    191e:	26 17       	cp	r18, r22
    1920:	37 07       	cpc	r19, r23
    1922:	90 f0       	brcs	.+36     	; 0x1948 <qtm_enable_sensor_node+0x3a>
    1924:	45 e0       	ldi	r20, 0x05	; 5
    1926:	46 9f       	mul	r20, r22
    1928:	90 01       	movw	r18, r0
    192a:	47 9f       	mul	r20, r23
    192c:	30 0d       	add	r19, r0
    192e:	11 24       	eor	r1, r1
    1930:	14 96       	adiw	r26, 0x04	; 4
    1932:	ed 91       	ld	r30, X+
    1934:	fc 91       	ld	r31, X
    1936:	15 97       	sbiw	r26, 0x05	; 5
    1938:	e2 0f       	add	r30, r18
    193a:	f3 1f       	adc	r31, r19
    193c:	81 e0       	ldi	r24, 0x01	; 1
    193e:	80 83       	st	Z, r24
    1940:	80 e0       	ldi	r24, 0x00	; 0
    1942:	08 95       	ret
    1944:	8b e0       	ldi	r24, 0x0B	; 11
    1946:	08 95       	ret
    1948:	82 e0       	ldi	r24, 0x02	; 2
    194a:	08 95       	ret

0000194c <qtm_calibrate_sensor_node>:
    194c:	00 97       	sbiw	r24, 0x00	; 0
    194e:	d1 f1       	breq	.+116    	; 0x19c4 <qtm_calibrate_sensor_node+0x78>
    1950:	dc 01       	movw	r26, r24
    1952:	ed 91       	ld	r30, X+
    1954:	fc 91       	ld	r31, X
    1956:	11 97       	sbiw	r26, 0x01	; 1
    1958:	20 81       	ld	r18, Z
    195a:	31 81       	ldd	r19, Z+1	; 0x01
    195c:	26 17       	cp	r18, r22
    195e:	37 07       	cpc	r19, r23
    1960:	98 f1       	brcs	.+102    	; 0x19c8 <qtm_calibrate_sensor_node+0x7c>
    1962:	22 81       	ldd	r18, Z+2	; 0x02
    1964:	14 96       	adiw	r26, 0x04	; 4
    1966:	ed 91       	ld	r30, X+
    1968:	fc 91       	ld	r31, X
    196a:	15 97       	sbiw	r26, 0x05	; 5
    196c:	20 34       	cpi	r18, 0x40	; 64
    196e:	59 f4       	brne	.+22     	; 0x1986 <qtm_calibrate_sensor_node+0x3a>
    1970:	85 e0       	ldi	r24, 0x05	; 5
    1972:	86 9f       	mul	r24, r22
    1974:	d0 01       	movw	r26, r0
    1976:	87 9f       	mul	r24, r23
    1978:	b0 0d       	add	r27, r0
    197a:	11 24       	eor	r1, r1
    197c:	ae 0f       	add	r26, r30
    197e:	bf 1f       	adc	r27, r31
    1980:	84 e3       	ldi	r24, 0x34	; 52
    1982:	92 e0       	ldi	r25, 0x02	; 2
    1984:	0c c0       	rjmp	.+24     	; 0x199e <qtm_calibrate_sensor_node+0x52>
    1986:	20 38       	cpi	r18, 0x80	; 128
    1988:	81 f4       	brne	.+32     	; 0x19aa <qtm_calibrate_sensor_node+0x5e>
    198a:	85 e0       	ldi	r24, 0x05	; 5
    198c:	86 9f       	mul	r24, r22
    198e:	d0 01       	movw	r26, r0
    1990:	87 9f       	mul	r24, r23
    1992:	b0 0d       	add	r27, r0
    1994:	11 24       	eor	r1, r1
    1996:	ae 0f       	add	r26, r30
    1998:	bf 1f       	adc	r27, r31
    199a:	87 e6       	ldi	r24, 0x67	; 103
    199c:	95 e0       	ldi	r25, 0x05	; 5
    199e:	14 96       	adiw	r26, 0x04	; 4
    19a0:	9c 93       	st	X, r25
    19a2:	8e 93       	st	-X, r24
    19a4:	13 97       	sbiw	r26, 0x03	; 3
    19a6:	80 e0       	ldi	r24, 0x00	; 0
    19a8:	01 c0       	rjmp	.+2      	; 0x19ac <qtm_calibrate_sensor_node+0x60>
    19aa:	82 e0       	ldi	r24, 0x02	; 2
    19ac:	95 e0       	ldi	r25, 0x05	; 5
    19ae:	96 9f       	mul	r25, r22
    19b0:	90 01       	movw	r18, r0
    19b2:	97 9f       	mul	r25, r23
    19b4:	30 0d       	add	r19, r0
    19b6:	11 24       	eor	r1, r1
    19b8:	e2 0f       	add	r30, r18
    19ba:	f3 1f       	adc	r31, r19
    19bc:	90 81       	ld	r25, Z
    19be:	92 60       	ori	r25, 0x02	; 2
    19c0:	90 83       	st	Z, r25
    19c2:	08 95       	ret
    19c4:	8b e0       	ldi	r24, 0x0B	; 11
    19c6:	08 95       	ret
    19c8:	82 e0       	ldi	r24, 0x02	; 2
    19ca:	08 95       	ret

000019cc <qtm_m324pb_ptc_handler_eoc>:
    19cc:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    19d0:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    19d4:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    19d8:	e0 91 bf 01 	lds	r30, 0x01BF	; 0x8001bf <current_measure_channel>
    19dc:	f0 91 c0 01 	lds	r31, 0x01C0	; 0x8001c0 <current_measure_channel+0x1>
    19e0:	ee 0f       	add	r30, r30
    19e2:	ff 1f       	adc	r31, r31
    19e4:	40 91 1c 02 	lds	r20, 0x021C	; 0x80021c <qtm_raw_data_measurements_ptr>
    19e8:	50 91 1d 02 	lds	r21, 0x021D	; 0x80021d <qtm_raw_data_measurements_ptr+0x1>
    19ec:	e4 0f       	add	r30, r20
    19ee:	f5 1f       	adc	r31, r21
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	92 2b       	or	r25, r18
    19f4:	91 83       	std	Z+1, r25	; 0x01
    19f6:	80 83       	st	Z, r24
    19f8:	80 91 bc 01 	lds	r24, 0x01BC	; 0x8001bc <good_eocs>
    19fc:	90 91 bd 01 	lds	r25, 0x01BD	; 0x8001bd <good_eocs+0x1>
    1a00:	01 96       	adiw	r24, 0x01	; 1
    1a02:	90 93 bd 01 	sts	0x01BD, r25	; 0x8001bd <good_eocs+0x1>
    1a06:	80 93 bc 01 	sts	0x01BC, r24	; 0x8001bc <good_eocs>
    1a0a:	89 2b       	or	r24, r25
    1a0c:	21 f4       	brne	.+8      	; 0x1a16 <qtm_m324pb_ptc_handler_eoc+0x4a>
    1a0e:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <ptc_lockups+0x1>
    1a12:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <ptc_lockups>
    1a16:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <current_measure_channel>
    1a1a:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <current_measure_channel+0x1>
    1a1e:	01 96       	adiw	r24, 0x01	; 1
    1a20:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <current_measure_channel+0x1>
    1a24:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <current_measure_channel>
    1a28:	0e 94 85 08 	call	0x110a	; 0x110a <select_next_channel_to_measure>
    1a2c:	81 11       	cpse	r24, r1
    1a2e:	0a c0       	rjmp	.+20     	; 0x1a44 <qtm_m324pb_ptc_handler_eoc+0x78>
    1a30:	84 e0       	ldi	r24, 0x04	; 4
    1a32:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <touch_seq_lib_state>
    1a36:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <current_measure_channel>
    1a3a:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <current_measure_channel+0x1>
    1a3e:	0e 94 b8 08 	call	0x1170	; 0x1170 <qtm_measure_node>
    1a42:	05 c0       	rjmp	.+10     	; 0x1a4e <qtm_m324pb_ptc_handler_eoc+0x82>
    1a44:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <ptc_seq_measure_complete_pointer>
    1a48:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <ptc_seq_measure_complete_pointer+0x1>
    1a4c:	09 95       	icall
    1a4e:	81 e0       	ldi	r24, 0x01	; 1
    1a50:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <ptc_eoc_ok_flag>
    1a54:	08 95       	ret

00001a56 <__umulhisi3>:
    1a56:	a2 9f       	mul	r26, r18
    1a58:	b0 01       	movw	r22, r0
    1a5a:	b3 9f       	mul	r27, r19
    1a5c:	c0 01       	movw	r24, r0
    1a5e:	a3 9f       	mul	r26, r19
    1a60:	70 0d       	add	r23, r0
    1a62:	81 1d       	adc	r24, r1
    1a64:	11 24       	eor	r1, r1
    1a66:	91 1d       	adc	r25, r1
    1a68:	b2 9f       	mul	r27, r18
    1a6a:	70 0d       	add	r23, r0
    1a6c:	81 1d       	adc	r24, r1
    1a6e:	11 24       	eor	r1, r1
    1a70:	91 1d       	adc	r25, r1
    1a72:	08 95       	ret

00001a74 <_exit>:
    1a74:	f8 94       	cli

00001a76 <__stop_program>:
    1a76:	ff cf       	rjmp	.-2      	; 0x1a76 <__stop_program>
