
singletouch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000054  00800100  0000191a  000019ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000191a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000041  00800154  00800154  00001a02  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001a02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002d0  00000000  00000000  00001aa8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002fe0  00000000  00000000  00001d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013d0  00000000  00000000  00004d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001462  00000000  00000000  00006128  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000598  00000000  00000000  0000758c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000188d  00000000  00000000  00007b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000add  00000000  00000000  000093b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  00009e8e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
       2:	00 00       	nop
       4:	7f c0       	rjmp	.+254    	; 0x104 <__bad_interrupt>
       6:	00 00       	nop
       8:	7d c0       	rjmp	.+250    	; 0x104 <__bad_interrupt>
       a:	00 00       	nop
       c:	7b c0       	rjmp	.+246    	; 0x104 <__bad_interrupt>
       e:	00 00       	nop
      10:	79 c0       	rjmp	.+242    	; 0x104 <__bad_interrupt>
      12:	00 00       	nop
      14:	77 c0       	rjmp	.+238    	; 0x104 <__bad_interrupt>
      16:	00 00       	nop
      18:	75 c0       	rjmp	.+234    	; 0x104 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	73 c0       	rjmp	.+230    	; 0x104 <__bad_interrupt>
      1e:	00 00       	nop
      20:	71 c0       	rjmp	.+226    	; 0x104 <__bad_interrupt>
      22:	00 00       	nop
      24:	6f c0       	rjmp	.+222    	; 0x104 <__bad_interrupt>
      26:	00 00       	nop
      28:	6d c0       	rjmp	.+218    	; 0x104 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6b c0       	rjmp	.+214    	; 0x104 <__bad_interrupt>
      2e:	00 00       	nop
      30:	69 c0       	rjmp	.+210    	; 0x104 <__bad_interrupt>
      32:	00 00       	nop
      34:	67 c0       	rjmp	.+206    	; 0x104 <__bad_interrupt>
      36:	00 00       	nop
      38:	65 c0       	rjmp	.+202    	; 0x104 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	63 c0       	rjmp	.+198    	; 0x104 <__bad_interrupt>
      3e:	00 00       	nop
      40:	65 c0       	rjmp	.+202    	; 0x10c <__vector_16>
      42:	00 00       	nop
      44:	5f c0       	rjmp	.+190    	; 0x104 <__bad_interrupt>
      46:	00 00       	nop
      48:	5d c0       	rjmp	.+186    	; 0x104 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	f2 c2       	rjmp	.+1508   	; 0x632 <__vector_19>
      4e:	00 00       	nop
      50:	59 c0       	rjmp	.+178    	; 0x104 <__bad_interrupt>
      52:	00 00       	nop
      54:	57 c0       	rjmp	.+174    	; 0x104 <__bad_interrupt>
      56:	00 00       	nop
      58:	55 c0       	rjmp	.+170    	; 0x104 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	53 c0       	rjmp	.+166    	; 0x104 <__bad_interrupt>
      5e:	00 00       	nop
      60:	51 c0       	rjmp	.+162    	; 0x104 <__bad_interrupt>
      62:	00 00       	nop
      64:	4f c0       	rjmp	.+158    	; 0x104 <__bad_interrupt>
      66:	00 00       	nop
      68:	4d c0       	rjmp	.+154    	; 0x104 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4b c0       	rjmp	.+150    	; 0x104 <__bad_interrupt>
      6e:	00 00       	nop
      70:	49 c0       	rjmp	.+146    	; 0x104 <__bad_interrupt>
      72:	00 00       	nop
      74:	47 c0       	rjmp	.+142    	; 0x104 <__bad_interrupt>
      76:	00 00       	nop
      78:	45 c0       	rjmp	.+138    	; 0x104 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	43 c0       	rjmp	.+134    	; 0x104 <__bad_interrupt>
      7e:	00 00       	nop
      80:	41 c0       	rjmp	.+130    	; 0x104 <__bad_interrupt>
      82:	00 00       	nop
      84:	3f c0       	rjmp	.+126    	; 0x104 <__bad_interrupt>
      86:	00 00       	nop
      88:	3d c0       	rjmp	.+122    	; 0x104 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	3b c0       	rjmp	.+118    	; 0x104 <__bad_interrupt>
      8e:	00 00       	nop
      90:	39 c0       	rjmp	.+114    	; 0x104 <__bad_interrupt>
      92:	00 00       	nop
      94:	37 c0       	rjmp	.+110    	; 0x104 <__bad_interrupt>
      96:	00 00       	nop
      98:	35 c0       	rjmp	.+106    	; 0x104 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	59 c2       	rjmp	.+1202   	; 0x550 <__vector_39>
      9e:	00 00       	nop
      a0:	31 c0       	rjmp	.+98     	; 0x104 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	2f c0       	rjmp	.+94     	; 0x104 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	2d c0       	rjmp	.+90     	; 0x104 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	2b c0       	rjmp	.+86     	; 0x104 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	29 c0       	rjmp	.+82     	; 0x104 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	27 c0       	rjmp	.+78     	; 0x104 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	25 c0       	rjmp	.+74     	; 0x104 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	23 c0       	rjmp	.+70     	; 0x104 <__bad_interrupt>
      be:	00 00       	nop
      c0:	21 c0       	rjmp	.+66     	; 0x104 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	1f c0       	rjmp	.+62     	; 0x104 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	1d c0       	rjmp	.+58     	; 0x104 <__bad_interrupt>
	...

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	ea e1       	ldi	r30, 0x1A	; 26
      e0:	f9 e1       	ldi	r31, 0x19	; 25
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a4 35       	cpi	r26, 0x54	; 84
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	a4 e5       	ldi	r26, 0x54	; 84
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a5 39       	cpi	r26, 0x95	; 149
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	e7 d0       	rcall	.+462    	; 0x2ce <main>
     100:	0c 94 8b 0c 	jmp	0x1916	; 0x1916 <_exit>

00000104 <__bad_interrupt>:
     104:	7d cf       	rjmp	.-262    	; 0x0 <__vectors>

00000106 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     106:	56 d2       	rcall	.+1196   	; 0x5b4 <system_init>

	touch_init();
     108:	77 c1       	rjmp	.+750    	; 0x3f8 <touch_init>
     10a:	08 95       	ret

0000010c <__vector_16>:
     10c:	1f 92       	push	r1

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     10e:	0f 92       	push	r0
     110:	0f b6       	in	r0, 0x3f	; 63
     112:	0f 92       	push	r0
     114:	11 24       	eor	r1, r1
     116:	2f 93       	push	r18
     118:	3f 93       	push	r19
     11a:	4f 93       	push	r20
     11c:	5f 93       	push	r21
     11e:	6f 93       	push	r22
     120:	7f 93       	push	r23
     122:	8f 93       	push	r24
     124:	9f 93       	push	r25
     126:	af 93       	push	r26
     128:	bf 93       	push	r27
     12a:	ef 93       	push	r30
     12c:	ff 93       	push	r31

	mega_touch_timer();
     12e:	c4 d1       	rcall	.+904    	; 0x4b8 <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     130:	a8 9a       	sbi	0x15, 0	; 21
}
     132:	ff 91       	pop	r31
     134:	ef 91       	pop	r30
     136:	bf 91       	pop	r27
     138:	af 91       	pop	r26
     13a:	9f 91       	pop	r25
     13c:	8f 91       	pop	r24
     13e:	7f 91       	pop	r23
     140:	6f 91       	pop	r22
     142:	5f 91       	pop	r21
     144:	4f 91       	pop	r20
     146:	3f 91       	pop	r19
     148:	2f 91       	pop	r18
     14a:	0f 90       	pop	r0
     14c:	0f be       	out	0x3f, r0	; 63
     14e:	0f 90       	pop	r0
     150:	1f 90       	pop	r1
     152:	18 95       	reti

00000154 <SPI_MasterInit>:
uint8_t touch_counter_4 = 0;
// Declare other touch variables in a similar way
void SPI_MasterInit()
{
	// Set SS, MOSI, and SCK as outputs
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     154:	84 b1       	in	r24, 0x04	; 4
     156:	80 6b       	ori	r24, 0xB0	; 176
     158:	84 b9       	out	0x04, r24	; 4
	// Enable SPI, Set as Master
	SPCR0 = (1 << SPE) | (1 << MSTR);
     15a:	80 e5       	ldi	r24, 0x50	; 80
     15c:	8c bd       	out	0x2c, r24	; 44
	// Set SS pin high (inactive)
	PORTB |= (1 << SPI_SS_PIN);
     15e:	2c 9a       	sbi	0x05, 4	; 5
     160:	08 95       	ret

00000162 <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(uint8_t data)
{
	// Set SS pin low (activate slave)
	PORTB &= ~(1 << SPI_SS_PIN);
     162:	2c 98       	cbi	0x05, 4	; 5
	// Start transmission
	SPDR0 = data;
     164:	8e bd       	out	0x2e, r24	; 46
	// Wait for transmission to complete
	while (!(SPSR0 & (1 << SPIF)))
     166:	0d b4       	in	r0, 0x2d	; 45
     168:	07 fe       	sbrs	r0, 7
     16a:	fd cf       	rjmp	.-6      	; 0x166 <SPI_MasterTransmit+0x4>
	{
		// Add timeout or error handling if necessary
	}
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
     16c:	2c 9a       	sbi	0x05, 4	; 5
     16e:	08 95       	ret

00000170 <SPI_MasterTransmitString>:
			touch_counter_4 = 0;
		}
	}
}
// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
     174:	ec 01       	movw	r28, r24
	for (int i = 0; str[i] != '\0'; i++) {
     176:	88 81       	ld	r24, Y
     178:	88 23       	and	r24, r24
     17a:	71 f0       	breq	.+28     	; 0x198 <SPI_MasterTransmitString+0x28>
     17c:	21 96       	adiw	r28, 0x01	; 1
		SPI_MasterTransmit(str[i]);
     17e:	f1 df       	rcall	.-30     	; 0x162 <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     180:	2f ef       	ldi	r18, 0xFF	; 255
     182:	80 e7       	ldi	r24, 0x70	; 112
     184:	92 e0       	ldi	r25, 0x02	; 2
     186:	21 50       	subi	r18, 0x01	; 1
     188:	80 40       	sbci	r24, 0x00	; 0
     18a:	90 40       	sbci	r25, 0x00	; 0
     18c:	e1 f7       	brne	.-8      	; 0x186 <SPI_MasterTransmitString+0x16>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <SPI_MasterTransmitString+0x20>
     190:	00 00       	nop
		}
	}
}
// Function to transmit a string over SPI
void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     192:	89 91       	ld	r24, Y+
     194:	81 11       	cpse	r24, r1
     196:	f3 cf       	rjmp	.-26     	; 0x17e <SPI_MasterTransmitString+0xe>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
     198:	df 91       	pop	r29
     19a:	cf 91       	pop	r28
     19c:	08 95       	ret

0000019e <touchpin1>:
	}
	return 0;
}
void touchpin1() {
	// Get the status of the first touch sensor
	previous_key_status_1 = key_status_1;
     19e:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <key_status_1>
     1a2:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1a6:	80 e0       	ldi	r24, 0x00	; 0
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	c3 d1       	rcall	.+902    	; 0x532 <get_sensor_state>
     1ac:	80 78       	andi	r24, 0x80	; 128
     1ae:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1b2:	88 23       	and	r24, r24
     1b4:	b1 f0       	breq	.+44     	; 0x1e2 <touchpin1+0x44>
     1b6:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <previous_key_status_1>
     1ba:	81 11       	cpse	r24, r1
     1bc:	12 c0       	rjmp	.+36     	; 0x1e2 <touchpin1+0x44>
		touch_counter_1++;
     1be:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <touch_counter_1>
     1c2:	8f 5f       	subi	r24, 0xFF	; 255
     1c4:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <touch_counter_1>
		if (touch_counter_1 == 1) {
     1c8:	81 30       	cpi	r24, 0x01	; 1
     1ca:	21 f4       	brne	.+8      	; 0x1d4 <touchpin1+0x36>
			// Send "LIGHT1ON" command over SPI
			SPI_MasterTransmitString("L1\n");
     1cc:	8d e3       	ldi	r24, 0x3D	; 61
     1ce:	91 e0       	ldi	r25, 0x01	; 1
     1d0:	cf cf       	rjmp	.-98     	; 0x170 <SPI_MasterTransmitString>
     1d2:	08 95       	ret
		}
		else if (touch_counter_1 == 2) {
     1d4:	82 30       	cpi	r24, 0x02	; 2
     1d6:	29 f4       	brne	.+10     	; 0x1e2 <touchpin1+0x44>
			SPI_MasterTransmitString("L1\n");
     1d8:	8d e3       	ldi	r24, 0x3D	; 61
     1da:	91 e0       	ldi	r25, 0x01	; 1
     1dc:	c9 df       	rcall	.-110    	; 0x170 <SPI_MasterTransmitString>
			touch_counter_1 = 0;
     1de:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <touch_counter_1>
     1e2:	08 95       	ret

000001e4 <touchpin2>:
		}
	}
}
void touchpin2() {
	// Get the status of the second touch sensor
	previous_key_status_2 = key_status_2;
     1e4:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <key_status_2>
     1e8:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     1ec:	81 e0       	ldi	r24, 0x01	; 1
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	a0 d1       	rcall	.+832    	; 0x532 <get_sensor_state>
     1f2:	80 78       	andi	r24, 0x80	; 128
     1f4:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <key_status_2>
	if (key_status_2 && !previous_key_status_2) {
     1f8:	88 23       	and	r24, r24
     1fa:	b1 f0       	breq	.+44     	; 0x228 <touchpin2+0x44>
     1fc:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <previous_key_status_2>
     200:	81 11       	cpse	r24, r1
     202:	12 c0       	rjmp	.+36     	; 0x228 <touchpin2+0x44>
		touch_counter_2++;
     204:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <touch_counter_2>
     208:	8f 5f       	subi	r24, 0xFF	; 255
     20a:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <touch_counter_2>
		if (touch_counter_2 == 1) {
     20e:	81 30       	cpi	r24, 0x01	; 1
     210:	21 f4       	brne	.+8      	; 0x21a <touchpin2+0x36>
			SPI_MasterTransmitString("L2\n");
     212:	81 e4       	ldi	r24, 0x41	; 65
     214:	91 e0       	ldi	r25, 0x01	; 1
     216:	ac cf       	rjmp	.-168    	; 0x170 <SPI_MasterTransmitString>
     218:	08 95       	ret
		}
		else if (touch_counter_2 == 2){
     21a:	82 30       	cpi	r24, 0x02	; 2
     21c:	29 f4       	brne	.+10     	; 0x228 <touchpin2+0x44>
			SPI_MasterTransmitString("L2\n");
     21e:	81 e4       	ldi	r24, 0x41	; 65
     220:	91 e0       	ldi	r25, 0x01	; 1
     222:	a6 df       	rcall	.-180    	; 0x170 <SPI_MasterTransmitString>
			touch_counter_2 = 0;
     224:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <touch_counter_2>
     228:	08 95       	ret

0000022a <touchpin3>:
	}
}
void touchpin3()
{
	// Get the status of the third touch sensor
	previous_key_status_3 = key_status_3;
     22a:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <key_status_3>
     22e:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <previous_key_status_3>
	key_status_3 = get_sensor_state(2) & 0x80;
     232:	82 e0       	ldi	r24, 0x02	; 2
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	7d d1       	rcall	.+762    	; 0x532 <get_sensor_state>
     238:	80 78       	andi	r24, 0x80	; 128
     23a:	80 93 59 01 	sts	0x0159, r24	; 0x800159 <key_status_3>
	if (key_status_3 && !previous_key_status_3) {
     23e:	88 23       	and	r24, r24
     240:	b1 f0       	breq	.+44     	; 0x26e <touchpin3+0x44>
     242:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <previous_key_status_3>
     246:	81 11       	cpse	r24, r1
     248:	12 c0       	rjmp	.+36     	; 0x26e <touchpin3+0x44>
		touch_counter_3++;
     24a:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <touch_counter_3>
     24e:	8f 5f       	subi	r24, 0xFF	; 255
     250:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <touch_counter_3>
		if (touch_counter_3 == 1)
     254:	81 30       	cpi	r24, 0x01	; 1
     256:	21 f4       	brne	.+8      	; 0x260 <touchpin3+0x36>
		{
			SPI_MasterTransmitString("L3\n");
     258:	85 e4       	ldi	r24, 0x45	; 69
     25a:	91 e0       	ldi	r25, 0x01	; 1
     25c:	89 cf       	rjmp	.-238    	; 0x170 <SPI_MasterTransmitString>
     25e:	08 95       	ret
		}
		else if (touch_counter_3 == 2) {
     260:	82 30       	cpi	r24, 0x02	; 2
     262:	29 f4       	brne	.+10     	; 0x26e <touchpin3+0x44>
			SPI_MasterTransmitString("L3\n");
     264:	85 e4       	ldi	r24, 0x45	; 69
     266:	91 e0       	ldi	r25, 0x01	; 1
     268:	83 df       	rcall	.-250    	; 0x170 <SPI_MasterTransmitString>
			touch_counter_3 = 0;
     26a:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <touch_counter_3>
     26e:	08 95       	ret

00000270 <touchpin4>:
	}
}
void touchpin4()
{
	// Get the status of the fourth touch sensor
	previous_key_status_4 = key_status_4;
     270:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <key_status_4>
     274:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     278:	83 e0       	ldi	r24, 0x03	; 3
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	5a d1       	rcall	.+692    	; 0x532 <get_sensor_state>
     27e:	80 78       	andi	r24, 0x80	; 128
     280:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <key_status_4>
	if (key_status_4 && !previous_key_status_4) {
     284:	88 23       	and	r24, r24
     286:	b1 f0       	breq	.+44     	; 0x2b4 <touchpin4+0x44>
     288:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <previous_key_status_4>
     28c:	81 11       	cpse	r24, r1
     28e:	12 c0       	rjmp	.+36     	; 0x2b4 <touchpin4+0x44>
		touch_counter_4++;
     290:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <__data_end>
     294:	8f 5f       	subi	r24, 0xFF	; 255
     296:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <__data_end>
		if (touch_counter_4 == 1)
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	21 f4       	brne	.+8      	; 0x2a6 <touchpin4+0x36>
		{
			SPI_MasterTransmitString("L4\n");
     29e:	89 e4       	ldi	r24, 0x49	; 73
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	66 cf       	rjmp	.-308    	; 0x170 <SPI_MasterTransmitString>
     2a4:	08 95       	ret
		}
		else if (touch_counter_4 == 2) {
     2a6:	82 30       	cpi	r24, 0x02	; 2
     2a8:	29 f4       	brne	.+10     	; 0x2b4 <touchpin4+0x44>
			SPI_MasterTransmitString("L4\n");
     2aa:	89 e4       	ldi	r24, 0x49	; 73
     2ac:	91 e0       	ldi	r25, 0x01	; 1
     2ae:	60 df       	rcall	.-320    	; 0x170 <SPI_MasterTransmitString>
			touch_counter_4 = 0;
     2b0:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <__data_end>
     2b4:	08 95       	ret

000002b6 <loop>:
	// Set SS pin high (deactivate slave)
	PORTB |= (1 << SPI_SS_PIN);
}
void loop()
{
	touch_process();
     2b6:	c4 d0       	rcall	.+392    	; 0x440 <touch_process>
	// Check if touch measurement is done
	if (measurement_done_touch == 1)
     2b8:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <measurement_done_touch>
     2bc:	81 30       	cpi	r24, 0x01	; 1
     2be:	31 f4       	brne	.+12     	; 0x2cc <loop+0x16>
	{
		measurement_done_touch = 0;
     2c0:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <measurement_done_touch>
		touchpin1();
		touchpin2();
     2c4:	6c df       	rcall	.-296    	; 0x19e <touchpin1>
		touchpin3();
     2c6:	8e df       	rcall	.-228    	; 0x1e4 <touchpin2>
     2c8:	b0 df       	rcall	.-160    	; 0x22a <touchpin3>
		touchpin4();
     2ca:	d2 cf       	rjmp	.-92     	; 0x270 <touchpin4>
     2cc:	08 95       	ret

000002ce <main>:
     2ce:	1b df       	rcall	.-458    	; 0x106 <atmel_start_init>
	/* Initializes MCU, drivers, and middleware */
	atmel_start_init();
	/* Enable interrupts */
	cpu_irq_enable();
	// Initialize SPI as master
	SPI_MasterInit();
     2d0:	78 94       	sei
	while (1)
	{
		loop();
     2d2:	40 df       	rcall	.-384    	; 0x154 <SPI_MasterInit>
     2d4:	f0 df       	rcall	.-32     	; 0x2b6 <loop>
     2d6:	fe cf       	rjmp	.-4      	; 0x2d4 <main+0x6>

000002d8 <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     2d8:	08 95       	ret

000002da <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     2da:	cf 93       	push	r28
     2dc:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     2de:	1d d2       	rcall	.+1082   	; 0x71a <USART_is_tx_ready>
     2e0:	88 23       	and	r24, r24
     2e2:	e9 f3       	breq	.-6      	; 0x2de <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     2e4:	8c 2f       	mov	r24, r28

	while (USART_is_tx_busy())
     2e6:	27 d2       	rcall	.+1102   	; 0x736 <USART_write>
     2e8:	1e d2       	rcall	.+1084   	; 0x726 <USART_is_tx_busy>
     2ea:	81 11       	cpse	r24, r1
     2ec:	fd cf       	rjmp	.-6      	; 0x2e8 <datastreamer_transmit+0xe>
		;
}
     2ee:	cf 91       	pop	r28
     2f0:	08 95       	ret

000002f2 <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     2f2:	ef 92       	push	r14
     2f4:	ff 92       	push	r15
     2f6:	0f 93       	push	r16
     2f8:	1f 93       	push	r17
     2fa:	cf 93       	push	r28
     2fc:	df 93       	push	r29
     2fe:	00 d0       	rcall	.+0      	; 0x300 <datastreamer_output+0xe>
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
     304:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <sequence.2446>
     308:	8f 70       	andi	r24, 0x0F	; 15
     30a:	79 f4       	brne	.+30     	; 0x32a <datastreamer_output+0x38>
     30c:	00 e0       	ldi	r16, 0x00	; 0
     30e:	11 e0       	ldi	r17, 0x01	; 1
     310:	0f 2e       	mov	r0, r31
     312:	f3 e1       	ldi	r31, 0x13	; 19
     314:	ef 2e       	mov	r14, r31
     316:	f1 e0       	ldi	r31, 0x01	; 1
     318:	ff 2e       	mov	r15, r31
     31a:	f0 2d       	mov	r31, r0
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     31c:	f8 01       	movw	r30, r16
     31e:	81 91       	ld	r24, Z+
     320:	8f 01       	movw	r16, r30
     322:	db df       	rcall	.-74     	; 0x2da <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     324:	e0 16       	cp	r14, r16
     326:	f1 06       	cpc	r15, r17
     328:	c9 f7       	brne	.-14     	; 0x31c <datastreamer_output+0x2a>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     32a:	85 e5       	ldi	r24, 0x55	; 85
     32c:	d6 df       	rcall	.-84     	; 0x2da <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     32e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <sequence.2446>
     332:	d3 df       	rcall	.-90     	; 0x2da <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     334:	1a 82       	std	Y+2, r1	; 0x02
     336:	19 82       	std	Y+1, r1	; 0x01
     338:	89 81       	ldd	r24, Y+1	; 0x01
     33a:	9a 81       	ldd	r25, Y+2	; 0x02
     33c:	89 2b       	or	r24, r25
     33e:	09 f0       	breq	.+2      	; 0x342 <datastreamer_output+0x50>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     340:	42 c0       	rjmp	.+132    	; 0x3c6 <datastreamer_output+0xd4>
     342:	89 81       	ldd	r24, Y+1	; 0x01
     344:	9a 81       	ldd	r25, Y+2	; 0x02
		datastreamer_transmit((uint8_t)u16temp_output);
     346:	ce d0       	rcall	.+412    	; 0x4e4 <get_sensor_node_signal>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     348:	19 2f       	mov	r17, r25
     34a:	c7 df       	rcall	.-114    	; 0x2da <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     34c:	81 2f       	mov	r24, r17
     34e:	c5 df       	rcall	.-118    	; 0x2da <datastreamer_transmit>
     350:	89 81       	ldd	r24, Y+1	; 0x01
		datastreamer_transmit((uint8_t)u16temp_output);
     352:	9a 81       	ldd	r25, Y+2	; 0x02
     354:	d4 d0       	rcall	.+424    	; 0x4fe <get_sensor_node_reference>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     356:	19 2f       	mov	r17, r25
     358:	c0 df       	rcall	.-128    	; 0x2da <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     35a:	81 2f       	mov	r24, r17
     35c:	be df       	rcall	.-132    	; 0x2da <datastreamer_transmit>
     35e:	89 81       	ldd	r24, Y+1	; 0x01
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     360:	9a 81       	ldd	r25, Y+2	; 0x02
     362:	c0 d0       	rcall	.+384    	; 0x4e4 <get_sensor_node_signal>
     364:	8c 01       	movw	r16, r24
     366:	89 81       	ldd	r24, Y+1	; 0x01
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     368:	9a 81       	ldd	r25, Y+2	; 0x02
     36a:	c9 d0       	rcall	.+402    	; 0x4fe <get_sensor_node_reference>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     36c:	08 1b       	sub	r16, r24
     36e:	19 0b       	sbc	r17, r25
     370:	80 2f       	mov	r24, r16

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     372:	b3 df       	rcall	.-154    	; 0x2da <datastreamer_transmit>
     374:	81 2f       	mov	r24, r17
     376:	b1 df       	rcall	.-158    	; 0x2da <datastreamer_transmit>
		datastreamer_transmit((uint8_t)u16temp_output);
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	9a 81       	ldd	r25, Y+2	; 0x02
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     37c:	cd d0       	rcall	.+410    	; 0x518 <get_sensor_cc_val>
     37e:	19 2f       	mov	r17, r25
     380:	ac df       	rcall	.-168    	; 0x2da <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     382:	81 2f       	mov	r24, r17
     384:	aa df       	rcall	.-172    	; 0x2da <datastreamer_transmit>
     386:	89 81       	ldd	r24, Y+1	; 0x01
     388:	9a 81       	ldd	r25, Y+2	; 0x02
		if (0u != (u8temp_output & 0x80)) {
     38a:	d3 d0       	rcall	.+422    	; 0x532 <get_sensor_state>
			datastreamer_transmit(0x01);
     38c:	88 23       	and	r24, r24
     38e:	1c f4       	brge	.+6      	; 0x396 <datastreamer_output+0xa4>
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	a3 df       	rcall	.-186    	; 0x2da <datastreamer_transmit>
		} else {
			datastreamer_transmit(0x00);
     394:	02 c0       	rjmp	.+4      	; 0x39a <datastreamer_output+0xa8>
     396:	80 e0       	ldi	r24, 0x00	; 0
     398:	a0 df       	rcall	.-192    	; 0x2da <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     39a:	89 81       	ldd	r24, Y+1	; 0x01
     39c:	9a 81       	ldd	r25, Y+2	; 0x02
     39e:	fc 01       	movw	r30, r24
     3a0:	ee 0f       	add	r30, r30
     3a2:	ff 1f       	adc	r31, r31
     3a4:	8e 0f       	add	r24, r30
     3a6:	9f 1f       	adc	r25, r31
     3a8:	fc 01       	movw	r30, r24
     3aa:	e5 5e       	subi	r30, 0xE5	; 229
     3ac:	fe 4f       	sbci	r31, 0xFE	; 254
     3ae:	80 81       	ld	r24, Z
     3b0:	94 df       	rcall	.-216    	; 0x2da <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     3b2:	89 81       	ldd	r24, Y+1	; 0x01
     3b4:	9a 81       	ldd	r25, Y+2	; 0x02
     3b6:	01 96       	adiw	r24, 0x01	; 1
     3b8:	9a 83       	std	Y+2, r25	; 0x02
     3ba:	89 83       	std	Y+1, r24	; 0x01
     3bc:	89 81       	ldd	r24, Y+1	; 0x01
     3be:	9a 81       	ldd	r25, Y+2	; 0x02
     3c0:	89 2b       	or	r24, r25
     3c2:	09 f4       	brne	.+2      	; 0x3c6 <datastreamer_output+0xd4>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     3c4:	be cf       	rjmp	.-132    	; 0x342 <datastreamer_output+0x50>
     3c6:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <module_error_code>
     3ca:	87 df       	rcall	.-242    	; 0x2da <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     3cc:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <sequence.2446>
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	98 0f       	add	r25, r24
     3d4:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <sequence.2446>
     3d8:	80 df       	rcall	.-256    	; 0x2da <datastreamer_transmit>
     3da:	8a ea       	ldi	r24, 0xAA	; 170

	/* End token */
	datastreamer_transmit(~0x55);
     3dc:	7e df       	rcall	.-260    	; 0x2da <datastreamer_transmit>
     3de:	0f 90       	pop	r0
     3e0:	0f 90       	pop	r0
}
     3e2:	df 91       	pop	r29
     3e4:	cf 91       	pop	r28
     3e6:	1f 91       	pop	r17
     3e8:	0f 91       	pop	r16
     3ea:	ff 90       	pop	r15
     3ec:	ef 90       	pop	r14
     3ee:	08 95       	ret

000003f0 <qtm_measure_complete_callback>:
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <touch_postprocess_request>
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     3f6:	08 95       	ret

000003f8 <touch_init>:
     3f8:	88 e0       	ldi	r24, 0x08	; 8
     3fa:	87 bd       	out	0x27, r24	; 39
     3fc:	e3 e6       	ldi	r30, 0x63	; 99
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	80 81       	ld	r24, Z
     402:	87 7f       	andi	r24, 0xF7	; 247
     404:	80 83       	st	Z, r24
     406:	12 98       	cbi	0x02, 2	; 2
     408:	88 e2       	ldi	r24, 0x28	; 40
     40a:	91 e0       	ldi	r25, 0x01	; 1
     40c:	0e 94 49 0a 	call	0x1492	; 0x1492 <qtm_ptc_init_acquisition_module>
     410:	89 e8       	ldi	r24, 0x89	; 137
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <qtm_ptc_qtlib_assign_signal_memory>
     418:	60 e0       	ldi	r22, 0x00	; 0
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	88 e2       	ldi	r24, 0x28	; 40
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <qtm_enable_sensor_node>
     424:	60 e0       	ldi	r22, 0x00	; 0
     426:	70 e0       	ldi	r23, 0x00	; 0
     428:	88 e2       	ldi	r24, 0x28	; 40
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <qtm_calibrate_sensor_node>
     430:	44 e8       	ldi	r20, 0x84	; 132
     432:	51 e0       	ldi	r21, 0x01	; 1
     434:	60 e0       	ldi	r22, 0x00	; 0
     436:	83 e1       	ldi	r24, 0x13	; 19
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	f9 d1       	rcall	.+1010   	; 0x82e <qtm_init_sensor_key>
     43c:	4d cf       	rjmp	.-358    	; 0x2d8 <datastreamer_init>
     43e:	08 95       	ret

00000440 <touch_process>:
     440:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <time_to_measure_touch_flag>
     444:	81 30       	cpi	r24, 0x01	; 1
     446:	51 f4       	brne	.+20     	; 0x45c <touch_process+0x1c>
     448:	68 ef       	ldi	r22, 0xF8	; 248
     44a:	71 e0       	ldi	r23, 0x01	; 1
     44c:	88 e2       	ldi	r24, 0x28	; 40
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <qtm_ptc_start_measurement_seq>
     454:	81 11       	cpse	r24, r1
     456:	02 c0       	rjmp	.+4      	; 0x45c <touch_process+0x1c>
     458:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <time_to_measure_touch_flag>
     45c:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <touch_postprocess_request>
     460:	81 30       	cpi	r24, 0x01	; 1
     462:	11 f5       	brne	.+68     	; 0x4a8 <touch_process+0x68>
     464:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <touch_postprocess_request>
     468:	ad d6       	rcall	.+3418   	; 0x11c4 <qtm_acquisition_process>
     46a:	81 11       	cpse	r24, r1
     46c:	0a c0       	rjmp	.+20     	; 0x482 <touch_process+0x42>
     46e:	83 e1       	ldi	r24, 0x13	; 19
     470:	91 e0       	ldi	r25, 0x01	; 1
     472:	fc d1       	rcall	.+1016   	; 0x86c <qtm_key_sensors_process>
     474:	88 23       	and	r24, r24
     476:	49 f0       	breq	.+18     	; 0x48a <touch_process+0x4a>
     478:	82 e0       	ldi	r24, 0x02	; 2
     47a:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <module_error_code>
     47e:	39 df       	rcall	.-398    	; 0x2f2 <datastreamer_output>
     480:	04 c0       	rjmp	.+8      	; 0x48a <touch_process+0x4a>
     482:	81 e0       	ldi	r24, 0x01	; 1
     484:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <module_error_code>
     488:	34 df       	rcall	.-408    	; 0x2f2 <datastreamer_output>
     48a:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     48e:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     492:	80 81       	ld	r24, Z
     494:	88 23       	and	r24, r24
     496:	24 f4       	brge	.+8      	; 0x4a0 <touch_process+0x60>
     498:	81 e0       	ldi	r24, 0x01	; 1
     49a:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <time_to_measure_touch_flag>
     49e:	03 c0       	rjmp	.+6      	; 0x4a6 <touch_process+0x66>
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <measurement_done_touch>
     4a6:	25 cf       	rjmp	.-438    	; 0x2f2 <datastreamer_output>
     4a8:	08 95       	ret

000004aa <touch_timer_handler>:
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <time_to_measure_touch_flag>
     4b0:	84 e1       	ldi	r24, 0x14	; 20
     4b2:	90 e0       	ldi	r25, 0x00	; 0
     4b4:	b1 c1       	rjmp	.+866    	; 0x818 <qtm_update_qtlib_timer>
     4b6:	08 95       	ret

000004b8 <mega_touch_timer>:
     4b8:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <touch_time_counter.2335>
     4bc:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <touch_time_counter.2335+0x1>
     4c0:	44 97       	sbiw	r24, 0x14	; 20
     4c2:	31 f4       	brne	.+12     	; 0x4d0 <mega_touch_timer+0x18>
     4c4:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <touch_time_counter.2335+0x1>
     4c8:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <touch_time_counter.2335>
     4cc:	ee cf       	rjmp	.-36     	; 0x4aa <touch_timer_handler>
     4ce:	08 95       	ret
     4d0:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <touch_time_counter.2335>
     4d4:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <touch_time_counter.2335+0x1>
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <touch_time_counter.2335+0x1>
     4de:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <touch_time_counter.2335>
     4e2:	08 95       	ret

000004e4 <get_sensor_node_signal>:
     4e4:	9c 01       	movw	r18, r24
     4e6:	22 0f       	add	r18, r18
     4e8:	33 1f       	adc	r19, r19
     4ea:	22 0f       	add	r18, r18
     4ec:	33 1f       	adc	r19, r19
     4ee:	82 0f       	add	r24, r18
     4f0:	93 1f       	adc	r25, r19
     4f2:	fc 01       	movw	r30, r24
     4f4:	ec 57       	subi	r30, 0x7C	; 124
     4f6:	fe 4f       	sbci	r31, 0xFE	; 254
     4f8:	81 81       	ldd	r24, Z+1	; 0x01
     4fa:	92 81       	ldd	r25, Z+2	; 0x02
     4fc:	08 95       	ret

000004fe <get_sensor_node_reference>:
     4fe:	9c 01       	movw	r18, r24
     500:	22 0f       	add	r18, r18
     502:	33 1f       	adc	r19, r19
     504:	82 0f       	add	r24, r18
     506:	93 1f       	adc	r25, r19
     508:	fc 01       	movw	r30, r24
     50a:	ee 0f       	add	r30, r30
     50c:	ff 1f       	adc	r31, r31
     50e:	e5 57       	subi	r30, 0x75	; 117
     510:	fe 4f       	sbci	r31, 0xFE	; 254
     512:	84 81       	ldd	r24, Z+4	; 0x04
     514:	95 81       	ldd	r25, Z+5	; 0x05
     516:	08 95       	ret

00000518 <get_sensor_cc_val>:
     518:	9c 01       	movw	r18, r24
     51a:	22 0f       	add	r18, r18
     51c:	33 1f       	adc	r19, r19
     51e:	22 0f       	add	r18, r18
     520:	33 1f       	adc	r19, r19
     522:	82 0f       	add	r24, r18
     524:	93 1f       	adc	r25, r19
     526:	fc 01       	movw	r30, r24
     528:	ec 57       	subi	r30, 0x7C	; 124
     52a:	fe 4f       	sbci	r31, 0xFE	; 254
     52c:	83 81       	ldd	r24, Z+3	; 0x03
     52e:	94 81       	ldd	r25, Z+4	; 0x04
     530:	08 95       	ret

00000532 <get_sensor_state>:
     532:	9c 01       	movw	r18, r24
     534:	22 0f       	add	r18, r18
     536:	33 1f       	adc	r19, r19
     538:	82 0f       	add	r24, r18
     53a:	93 1f       	adc	r25, r19
     53c:	88 0f       	add	r24, r24
     53e:	99 1f       	adc	r25, r25
     540:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     544:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     548:	e8 0f       	add	r30, r24
     54a:	f9 1f       	adc	r31, r25
     54c:	80 81       	ld	r24, Z
     54e:	08 95       	ret

00000550 <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     550:	1f 92       	push	r1
     552:	0f 92       	push	r0
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	0f 92       	push	r0
     558:	11 24       	eor	r1, r1
     55a:	2f 93       	push	r18
     55c:	3f 93       	push	r19
     55e:	4f 93       	push	r20
     560:	5f 93       	push	r21
     562:	6f 93       	push	r22
     564:	7f 93       	push	r23
     566:	8f 93       	push	r24
     568:	9f 93       	push	r25
     56a:	af 93       	push	r26
     56c:	bf 93       	push	r27
     56e:	ef 93       	push	r30
     570:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     572:	0e 94 39 0c 	call	0x1872	; 0x1872 <qtm_m324pb_ptc_handler_eoc>
}
     576:	ff 91       	pop	r31
     578:	ef 91       	pop	r30
     57a:	bf 91       	pop	r27
     57c:	af 91       	pop	r26
     57e:	9f 91       	pop	r25
     580:	8f 91       	pop	r24
     582:	7f 91       	pop	r23
     584:	6f 91       	pop	r22
     586:	5f 91       	pop	r21
     588:	4f 91       	pop	r20
     58a:	3f 91       	pop	r19
     58c:	2f 91       	pop	r18
     58e:	0f 90       	pop	r0
     590:	0f be       	out	0x3f, r0	; 63
     592:	0f 90       	pop	r0
     594:	1f 90       	pop	r1
     596:	18 95       	reti

00000598 <SPI_0_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     598:	26 98       	cbi	0x04, 6	; 4
     59a:	2e 98       	cbi	0x05, 6	; 5
     59c:	25 9a       	sbi	0x04, 5	; 4
     59e:	2d 98       	cbi	0x05, 5	; 5
     5a0:	27 9a       	sbi	0x04, 7	; 4
     5a2:	2f 98       	cbi	0x05, 7	; 5
     5a4:	39 c0       	rjmp	.+114    	; 0x618 <SPI_0_init>
     5a6:	08 95       	ret

000005a8 <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     5a8:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     5aa:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     5ac:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     5ae:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     5b0:	a3 c0       	rjmp	.+326    	; 0x6f8 <USART_init>
     5b2:	08 95       	ret

000005b4 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     5b4:	83 e0       	ldi	r24, 0x03	; 3
     5b6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     5ba:	8f ef       	ldi	r24, 0xFF	; 255
     5bc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     5c0:	9f e0       	ldi	r25, 0x0F	; 15
     5c2:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     5c6:	91 b1       	in	r25, 0x01	; 1
     5c8:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     5ca:	92 b1       	in	r25, 0x02	; 2
     5cc:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     5ce:	94 b1       	in	r25, 0x04	; 4
     5d0:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     5d2:	95 b1       	in	r25, 0x05	; 5
     5d4:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     5d6:	97 b1       	in	r25, 0x07	; 7
     5d8:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     5da:	98 b1       	in	r25, 0x08	; 8
     5dc:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     5de:	9a b1       	in	r25, 0x0a	; 10
     5e0:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     5e2:	9b b1       	in	r25, 0x0b	; 11
     5e4:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     5e6:	8d b1       	in	r24, 0x0d	; 13
     5e8:	80 78       	andi	r24, 0x80	; 128
     5ea:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     5ec:	8e b1       	in	r24, 0x0e	; 14
     5ee:	8f 67       	ori	r24, 0x7F	; 127
     5f0:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     5f2:	40 e0       	ldi	r20, 0x00	; 0
     5f4:	60 e8       	ldi	r22, 0x80	; 128
     5f6:	81 e6       	ldi	r24, 0x61	; 97
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	07 d0       	rcall	.+14     	; 0x60a <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     5fc:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     5fe:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     600:	78 94       	sei
}

void Timer_initialization(void)
{

	Timer_init();
     602:	ca df       	rcall	.-108    	; 0x598 <SPI_0_initialization>
     604:	6c d0       	rcall	.+216    	; 0x6de <Timer_init>

	SPI_0_initialization();

	Timer_initialization();

	USART_initialization();
     606:	d0 cf       	rjmp	.-96     	; 0x5a8 <USART_initialization>
     608:	08 95       	ret

0000060a <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     60a:	2f b7       	in	r18, 0x3f	; 63
	cli
     60c:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     60e:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     610:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     612:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     614:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     616:	08 95       	ret

00000618 <SPI_0_init>:
                 after the previous one (i.e. data transfer phase
                 after control/command phase).
*/
void SPI_0_register_callback(spi_transfer_done_cb_t f)
{
	SPI_0_desc.cb = f;
     618:	e4 e6       	ldi	r30, 0x64	; 100
     61a:	f0 e0       	ldi	r31, 0x00	; 0
     61c:	80 81       	ld	r24, Z
     61e:	8b 7f       	andi	r24, 0xFB	; 251
     620:	80 83       	st	Z, r24
     622:	80 ed       	ldi	r24, 0xD0	; 208
     624:	8c bd       	out	0x2c, r24	; 44
     626:	e7 e6       	ldi	r30, 0x67	; 103
     628:	f1 e0       	ldi	r31, 0x01	; 1
     62a:	10 82       	st	Z, r1
     62c:	16 82       	std	Z+6, r1	; 0x06
     62e:	15 82       	std	Z+5, r1	; 0x05
     630:	08 95       	ret

00000632 <__vector_19>:
}

ISR(SPI0_STC_vect)
{
     632:	1f 92       	push	r1
     634:	0f 92       	push	r0
     636:	0f b6       	in	r0, 0x3f	; 63
     638:	0f 92       	push	r0
     63a:	11 24       	eor	r1, r1
     63c:	2f 93       	push	r18
     63e:	3f 93       	push	r19
     640:	4f 93       	push	r20
     642:	5f 93       	push	r21
     644:	6f 93       	push	r22
     646:	7f 93       	push	r23
     648:	8f 93       	push	r24
     64a:	9f 93       	push	r25
     64c:	af 93       	push	r26
     64e:	bf 93       	push	r27
     650:	cf 93       	push	r28
     652:	df 93       	push	r29
     654:	ef 93       	push	r30
     656:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
     658:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
     65a:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <SPI_0_desc+0x4>
     65e:	82 30       	cpi	r24, 0x02	; 2
     660:	11 f1       	breq	.+68     	; 0x6a6 <__vector_19+0x74>
		*SPI_0_desc.data = rdata;
     662:	c7 e6       	ldi	r28, 0x67	; 103
     664:	d1 e0       	ldi	r29, 0x01	; 1
     666:	a9 81       	ldd	r26, Y+1	; 0x01
     668:	ba 81       	ldd	r27, Y+2	; 0x02
     66a:	fd 01       	movw	r30, r26
     66c:	91 93       	st	Z+, r25
	}

	SPI_0_desc.data++;
     66e:	fa 83       	std	Y+2, r31	; 0x02
     670:	e9 83       	std	Y+1, r30	; 0x01

	if (SPI_0_desc.type != SPI_READ)
     672:	81 30       	cpi	r24, 0x01	; 1
     674:	19 f0       	breq	.+6      	; 0x67c <__vector_19+0x4a>
		wdata = *SPI_0_desc.data;
     676:	11 96       	adiw	r26, 0x01	; 1
     678:	9c 91       	ld	r25, X
     67a:	01 c0       	rjmp	.+2      	; 0x67e <__vector_19+0x4c>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR0;
	uint8_t wdata = 0;
     67c:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
     67e:	e7 e6       	ldi	r30, 0x67	; 103
     680:	f1 e0       	ldi	r31, 0x01	; 1
     682:	83 81       	ldd	r24, Z+3	; 0x03
     684:	81 50       	subi	r24, 0x01	; 1
     686:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
     688:	88 23       	and	r24, r24
     68a:	11 f0       	breq	.+4      	; 0x690 <__vector_19+0x5e>
		// more data to send, send a byte
		SPDR0 = wdata;
     68c:	9e bd       	out	0x2e, r25	; 46
     68e:	14 c0       	rjmp	.+40     	; 0x6b8 <__vector_19+0x86>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
     690:	e7 e6       	ldi	r30, 0x67	; 103
     692:	f1 e0       	ldi	r31, 0x01	; 1
     694:	83 e0       	ldi	r24, 0x03	; 3
     696:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
     698:	05 80       	ldd	r0, Z+5	; 0x05
     69a:	f6 81       	ldd	r31, Z+6	; 0x06
     69c:	e0 2d       	mov	r30, r0
     69e:	30 97       	sbiw	r30, 0x00	; 0
     6a0:	59 f0       	breq	.+22     	; 0x6b8 <__vector_19+0x86>
			SPI_0_desc.cb();
     6a2:	09 95       	icall
		}
	}
}
     6a4:	09 c0       	rjmp	.+18     	; 0x6b8 <__vector_19+0x86>

	if (SPI_0_desc.type != SPI_WRITE) {
		*SPI_0_desc.data = rdata;
	}

	SPI_0_desc.data++;
     6a6:	e7 e6       	ldi	r30, 0x67	; 103
     6a8:	f1 e0       	ldi	r31, 0x01	; 1
     6aa:	a1 81       	ldd	r26, Z+1	; 0x01
     6ac:	b2 81       	ldd	r27, Z+2	; 0x02
     6ae:	cd 01       	movw	r24, r26
     6b0:	01 96       	adiw	r24, 0x01	; 1
     6b2:	92 83       	std	Z+2, r25	; 0x02
     6b4:	81 83       	std	Z+1, r24	; 0x01
     6b6:	df cf       	rjmp	.-66     	; 0x676 <__vector_19+0x44>
		SPI_0_desc.status = SPI_DONE;
		if (SPI_0_desc.cb != NULL) {
			SPI_0_desc.cb();
		}
	}
}
     6b8:	ff 91       	pop	r31
     6ba:	ef 91       	pop	r30
     6bc:	df 91       	pop	r29
     6be:	cf 91       	pop	r28
     6c0:	bf 91       	pop	r27
     6c2:	af 91       	pop	r26
     6c4:	9f 91       	pop	r25
     6c6:	8f 91       	pop	r24
     6c8:	7f 91       	pop	r23
     6ca:	6f 91       	pop	r22
     6cc:	5f 91       	pop	r21
     6ce:	4f 91       	pop	r20
     6d0:	3f 91       	pop	r19
     6d2:	2f 91       	pop	r18
     6d4:	0f 90       	pop	r0
     6d6:	0f be       	out	0x3f, r0	; 63
     6d8:	0f 90       	pop	r0
     6da:	1f 90       	pop	r1
     6dc:	18 95       	reti

000006de <Timer_init>:
 */
int8_t Timer_init()
{

	/* Enable TC0 */
	PRR0 &= ~(1 << PRTIM0);
     6de:	e4 e6       	ldi	r30, 0x64	; 100
     6e0:	f0 e0       	ldi	r31, 0x00	; 0
     6e2:	80 81       	ld	r24, Z
     6e4:	8f 7d       	andi	r24, 0xDF	; 223
     6e6:	80 83       	st	Z, r24

	TCCR0A = (0 << COM0A1) | (0 << COM0A0)   /* Normal port operation, OCA disconnected */
     6e8:	82 e0       	ldi	r24, 0x02	; 2
     6ea:	84 bd       	out	0x24, r24	; 36
	         | (0 << COM0B1) | (0 << COM0B0) /* Normal port operation, OCB disconnected */
	         | (1 << WGM01) | (0 << WGM00);  /* TC8 Mode 2 CTC */

	TCCR0B = 0                                          /* TC8 Mode 2 CTC */
     6ec:	95 e0       	ldi	r25, 0x05	; 5
     6ee:	95 bd       	out	0x25, r25	; 37
	         | (1 << CS02) | (0 << CS01) | (1 << CS00); /* IO clock divided by 1024 */

	TIMSK0 = 0 << OCIE0B   /* Output Compare B Match Interrupt Enable: disabled */
     6f0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	// GTCCR = 0 << TSM /* Timer/Counter Synchronization Mode: disabled */
	//		 | 0 << PSRASY /* Prescaler Reset Timer/Counter2: disabled */
	//		 | 0 << PSRSYNC; /* Prescaler Reset: disabled */

	return 0;
}
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	08 95       	ret

000006f8 <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     6f8:	e4 e6       	ldi	r30, 0x64	; 100
     6fa:	f0 e0       	ldi	r31, 0x00	; 0
     6fc:	80 81       	ld	r24, Z
     6fe:	8d 7f       	andi	r24, 0xFD	; 253
     700:	80 83       	st	Z, r24
     702:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     706:	8c e0       	ldi	r24, 0x0C	; 12
     708:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     70c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     710:	88 e0       	ldi	r24, 0x08	; 8
     712:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     716:	80 e0       	ldi	r24, 0x00	; 0
     718:	08 95       	ret

0000071a <USART_is_tx_ready>:
     71a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     71e:	85 fb       	bst	r24, 5
     720:	88 27       	eor	r24, r24
     722:	80 f9       	bld	r24, 0
     724:	08 95       	ret

00000726 <USART_is_tx_busy>:
     726:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     72a:	86 fb       	bst	r24, 6
     72c:	88 27       	eor	r24, r24
     72e:	80 f9       	bld	r24, 0
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	89 27       	eor	r24, r25
     734:	08 95       	ret

00000736 <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     736:	e0 ec       	ldi	r30, 0xC0	; 192
     738:	f0 e0       	ldi	r31, 0x00	; 0
     73a:	90 81       	ld	r25, Z
     73c:	95 ff       	sbrs	r25, 5
     73e:	fd cf       	rjmp	.-6      	; 0x73a <USART_write+0x4>
		;
	UDR0 = data;
     740:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     744:	08 95       	ret

00000746 <check_for_aks_block>:
     746:	cf 92       	push	r12
     748:	df 92       	push	r13
     74a:	ff 92       	push	r15
     74c:	0f 93       	push	r16
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	ec 01       	movw	r28, r24
     756:	ae 81       	ldd	r26, Y+6	; 0x06
     758:	bf 81       	ldd	r27, Y+7	; 0x07
     75a:	eb 01       	movw	r28, r22
     75c:	cc 0f       	add	r28, r28
     75e:	dd 1f       	adc	r29, r29
     760:	c6 0f       	add	r28, r22
     762:	d7 1f       	adc	r29, r23
     764:	ca 0f       	add	r28, r26
     766:	db 1f       	adc	r29, r27
     768:	fa 80       	ldd	r15, Y+2	; 0x02
     76a:	fc 01       	movw	r30, r24
     76c:	44 81       	ldd	r20, Z+4	; 0x04
     76e:	55 81       	ldd	r21, Z+5	; 0x05
     770:	e6 e0       	ldi	r30, 0x06	; 6
     772:	e6 9f       	mul	r30, r22
     774:	90 01       	movw	r18, r0
     776:	e7 9f       	mul	r30, r23
     778:	30 0d       	add	r19, r0
     77a:	11 24       	eor	r1, r1
     77c:	8a 01       	movw	r16, r20
     77e:	02 0f       	add	r16, r18
     780:	13 1f       	adc	r17, r19
     782:	f8 01       	movw	r30, r16
     784:	22 81       	ldd	r18, Z+2	; 0x02
     786:	33 81       	ldd	r19, Z+3	; 0x03
     788:	f9 01       	movw	r30, r18
     78a:	21 81       	ldd	r18, Z+1	; 0x01
     78c:	32 81       	ldd	r19, Z+2	; 0x02
     78e:	f8 01       	movw	r30, r16
     790:	04 81       	ldd	r16, Z+4	; 0x04
     792:	15 81       	ldd	r17, Z+5	; 0x05
     794:	20 1b       	sub	r18, r16
     796:	31 0b       	sbc	r19, r17
     798:	e8 81       	ld	r30, Y
     79a:	2e 1b       	sub	r18, r30
     79c:	31 09       	sbc	r19, r1
     79e:	ec 01       	movw	r28, r24
     7a0:	ea 81       	ldd	r30, Y+2	; 0x02
     7a2:	fb 81       	ldd	r31, Y+3	; 0x03
     7a4:	00 81       	ld	r16, Z
     7a6:	11 81       	ldd	r17, Z+1	; 0x01
     7a8:	fa 01       	movw	r30, r20
     7aa:	40 e0       	ldi	r20, 0x00	; 0
     7ac:	50 e0       	ldi	r21, 0x00	; 0
     7ae:	40 17       	cp	r20, r16
     7b0:	51 07       	cpc	r21, r17
     7b2:	39 f1       	breq	.+78     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     7b4:	46 17       	cp	r20, r22
     7b6:	57 07       	cpc	r21, r23
     7b8:	f9 f0       	breq	.+62     	; 0x7f8 <check_for_aks_block+0xb2>
     7ba:	12 96       	adiw	r26, 0x02	; 2
     7bc:	8c 91       	ld	r24, X
     7be:	12 97       	sbiw	r26, 0x02	; 2
     7c0:	f8 12       	cpse	r15, r24
     7c2:	1a c0       	rjmp	.+52     	; 0x7f8 <check_for_aks_block+0xb2>
     7c4:	80 81       	ld	r24, Z
     7c6:	85 58       	subi	r24, 0x85	; 133
     7c8:	82 30       	cpi	r24, 0x02	; 2
     7ca:	e8 f0       	brcs	.+58     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7cc:	c4 80       	ldd	r12, Z+4	; 0x04
     7ce:	d5 80       	ldd	r13, Z+5	; 0x05
     7d0:	82 81       	ldd	r24, Z+2	; 0x02
     7d2:	93 81       	ldd	r25, Z+3	; 0x03
     7d4:	ec 01       	movw	r28, r24
     7d6:	89 81       	ldd	r24, Y+1	; 0x01
     7d8:	9a 81       	ldd	r25, Y+2	; 0x02
     7da:	c8 16       	cp	r12, r24
     7dc:	d9 06       	cpc	r13, r25
     7de:	60 f4       	brcc	.+24     	; 0x7f8 <check_for_aks_block+0xb2>
     7e0:	8c 19       	sub	r24, r12
     7e2:	9d 09       	sbc	r25, r13
     7e4:	cc 91       	ld	r28, X
     7e6:	d0 e0       	ldi	r29, 0x00	; 0
     7e8:	c8 17       	cp	r28, r24
     7ea:	d9 07       	cpc	r29, r25
     7ec:	28 f4       	brcc	.+10     	; 0x7f8 <check_for_aks_block+0xb2>
     7ee:	8c 1b       	sub	r24, r28
     7f0:	9d 0b       	sbc	r25, r29
     7f2:	28 17       	cp	r18, r24
     7f4:	39 07       	cpc	r19, r25
     7f6:	38 f0       	brcs	.+14     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     7f8:	4f 5f       	subi	r20, 0xFF	; 255
     7fa:	5f 4f       	sbci	r21, 0xFF	; 255
     7fc:	13 96       	adiw	r26, 0x03	; 3
     7fe:	36 96       	adiw	r30, 0x06	; 6
     800:	d6 cf       	rjmp	.-84     	; 0x7ae <check_for_aks_block+0x68>
     802:	80 e0       	ldi	r24, 0x00	; 0
     804:	01 c0       	rjmp	.+2      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     806:	81 e0       	ldi	r24, 0x01	; 1
     808:	df 91       	pop	r29
     80a:	cf 91       	pop	r28
     80c:	1f 91       	pop	r17
     80e:	0f 91       	pop	r16
     810:	ff 90       	pop	r15
     812:	df 90       	pop	r13
     814:	cf 90       	pop	r12
     816:	08 95       	ret

00000818 <qtm_update_qtlib_timer>:
     818:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <qtm_local_ms_timecount>
     81c:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <qtm_local_ms_timecount+0x1>
     820:	82 0f       	add	r24, r18
     822:	93 1f       	adc	r25, r19
     824:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <qtm_local_ms_timecount+0x1>
     828:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <qtm_local_ms_timecount>
     82c:	08 95       	ret

0000082e <qtm_init_sensor_key>:
     82e:	00 97       	sbiw	r24, 0x00	; 0
     830:	d9 f0       	breq	.+54     	; 0x868 <qtm_init_sensor_key+0x3a>
     832:	41 15       	cp	r20, r1
     834:	51 05       	cpc	r21, r1
     836:	c1 f0       	breq	.+48     	; 0x868 <qtm_init_sensor_key+0x3a>
     838:	26 e0       	ldi	r18, 0x06	; 6
     83a:	62 9f       	mul	r22, r18
     83c:	b0 01       	movw	r22, r0
     83e:	11 24       	eor	r1, r1
     840:	dc 01       	movw	r26, r24
     842:	14 96       	adiw	r26, 0x04	; 4
     844:	ed 91       	ld	r30, X+
     846:	fc 91       	ld	r31, X
     848:	15 97       	sbiw	r26, 0x05	; 5
     84a:	e6 0f       	add	r30, r22
     84c:	f7 1f       	adc	r31, r23
     84e:	21 e0       	ldi	r18, 0x01	; 1
     850:	20 83       	st	Z, r18
     852:	14 96       	adiw	r26, 0x04	; 4
     854:	8d 91       	ld	r24, X+
     856:	9c 91       	ld	r25, X
     858:	15 97       	sbiw	r26, 0x05	; 5
     85a:	fc 01       	movw	r30, r24
     85c:	e6 0f       	add	r30, r22
     85e:	f7 1f       	adc	r31, r23
     860:	53 83       	std	Z+3, r21	; 0x03
     862:	42 83       	std	Z+2, r20	; 0x02
     864:	80 e0       	ldi	r24, 0x00	; 0
     866:	08 95       	ret
     868:	8b e0       	ldi	r24, 0x0B	; 11
     86a:	08 95       	ret

0000086c <qtm_key_sensors_process>:
     86c:	2f 92       	push	r2
     86e:	3f 92       	push	r3
     870:	4f 92       	push	r4
     872:	5f 92       	push	r5
     874:	6f 92       	push	r6
     876:	7f 92       	push	r7
     878:	8f 92       	push	r8
     87a:	9f 92       	push	r9
     87c:	af 92       	push	r10
     87e:	bf 92       	push	r11
     880:	cf 92       	push	r12
     882:	df 92       	push	r13
     884:	ef 92       	push	r14
     886:	ff 92       	push	r15
     888:	0f 93       	push	r16
     88a:	1f 93       	push	r17
     88c:	cf 93       	push	r28
     88e:	df 93       	push	r29
     890:	00 97       	sbiw	r24, 0x00	; 0
     892:	09 f4       	brne	.+2      	; 0x896 <qtm_key_sensors_process+0x2a>
     894:	7c c3       	rjmp	.+1784   	; 0xf8e <__stack+0x68f>
     896:	ec 01       	movw	r28, r24
     898:	a1 2c       	mov	r10, r1
     89a:	b1 2c       	mov	r11, r1
     89c:	81 2c       	mov	r8, r1
     89e:	91 2c       	mov	r9, r1
     8a0:	21 2c       	mov	r2, r1
     8a2:	d1 2c       	mov	r13, r1
     8a4:	55 24       	eor	r5, r5
     8a6:	53 94       	inc	r5
     8a8:	33 e0       	ldi	r19, 0x03	; 3
     8aa:	c3 2e       	mov	r12, r19
     8ac:	45 e8       	ldi	r20, 0x85	; 133
     8ae:	64 2e       	mov	r6, r20
     8b0:	56 e8       	ldi	r21, 0x86	; 134
     8b2:	75 2e       	mov	r7, r21
     8b4:	62 e0       	ldi	r22, 0x02	; 2
     8b6:	36 2e       	mov	r3, r22
     8b8:	78 e0       	ldi	r23, 0x08	; 8
     8ba:	47 2e       	mov	r4, r23
     8bc:	ea 81       	ldd	r30, Y+2	; 0x02
     8be:	fb 81       	ldd	r31, Y+3	; 0x03
     8c0:	80 81       	ld	r24, Z
     8c2:	91 81       	ldd	r25, Z+1	; 0x01
     8c4:	88 16       	cp	r8, r24
     8c6:	99 06       	cpc	r9, r25
     8c8:	08 f0       	brcs	.+2      	; 0x8cc <qtm_key_sensors_process+0x60>
     8ca:	a4 c1       	rjmp	.+840    	; 0xc14 <__stack+0x315>
     8cc:	75 01       	movw	r14, r10
     8ce:	ee 0c       	add	r14, r14
     8d0:	ff 1c       	adc	r15, r15
     8d2:	ec 81       	ldd	r30, Y+4	; 0x04
     8d4:	fd 81       	ldd	r31, Y+5	; 0x05
     8d6:	ee 0d       	add	r30, r14
     8d8:	ff 1d       	adc	r31, r15
     8da:	a2 81       	ldd	r26, Z+2	; 0x02
     8dc:	b3 81       	ldd	r27, Z+3	; 0x03
     8de:	9c 91       	ld	r25, X
     8e0:	9e 71       	andi	r25, 0x1E	; 30
     8e2:	09 f0       	breq	.+2      	; 0x8e6 <qtm_key_sensors_process+0x7a>
     8e4:	50 82       	st	Z, r5
     8e6:	0c 81       	ldd	r16, Y+4	; 0x04
     8e8:	1d 81       	ldd	r17, Y+5	; 0x05
     8ea:	0e 0d       	add	r16, r14
     8ec:	1f 1d       	adc	r17, r15
     8ee:	d8 01       	movw	r26, r16
     8f0:	8c 91       	ld	r24, X
     8f2:	84 30       	cpi	r24, 0x04	; 4
     8f4:	09 f4       	brne	.+2      	; 0x8f8 <qtm_key_sensors_process+0x8c>
     8f6:	9d c0       	rjmp	.+314    	; 0xa32 <__stack+0x133>
     8f8:	38 f4       	brcc	.+14     	; 0x908 <__stack+0x9>
     8fa:	82 30       	cpi	r24, 0x02	; 2
     8fc:	d1 f0       	breq	.+52     	; 0x932 <__stack+0x33>
     8fe:	08 f0       	brcs	.+2      	; 0x902 <__stack+0x3>
     900:	45 c0       	rjmp	.+138    	; 0x98c <__stack+0x8d>
     902:	81 30       	cpi	r24, 0x01	; 1
     904:	59 f0       	breq	.+22     	; 0x91c <__stack+0x1d>
     906:	7f c1       	rjmp	.+766    	; 0xc06 <__stack+0x307>
     908:	85 38       	cpi	r24, 0x85	; 133
     90a:	09 f4       	brne	.+2      	; 0x90e <__stack+0xf>
     90c:	bd c0       	rjmp	.+378    	; 0xa88 <__stack+0x189>
     90e:	86 38       	cpi	r24, 0x86	; 134
     910:	09 f4       	brne	.+2      	; 0x914 <__stack+0x15>
     912:	f3 c0       	rjmp	.+486    	; 0xafa <__stack+0x1fb>
     914:	87 30       	cpi	r24, 0x07	; 7
     916:	09 f0       	breq	.+2      	; 0x91a <__stack+0x1b>
     918:	76 c1       	rjmp	.+748    	; 0xc06 <__stack+0x307>
     91a:	34 c1       	rjmp	.+616    	; 0xb84 <__stack+0x285>
     91c:	91 11       	cpse	r25, r1
     91e:	65 c1       	rjmp	.+714    	; 0xbea <__stack+0x2eb>
     920:	f8 01       	movw	r30, r16
     922:	30 82       	st	Z, r3
     924:	8c 81       	ldd	r24, Y+4	; 0x04
     926:	9d 81       	ldd	r25, Y+5	; 0x05
     928:	fc 01       	movw	r30, r24
     92a:	ee 0d       	add	r30, r14
     92c:	ff 1d       	adc	r31, r15
     92e:	41 82       	std	Z+1, r4	; 0x01
     930:	5c c1       	rjmp	.+696    	; 0xbea <__stack+0x2eb>
     932:	d8 01       	movw	r26, r16
     934:	11 96       	adiw	r26, 0x01	; 1
     936:	2c 91       	ld	r18, X
     938:	11 97       	sbiw	r26, 0x01	; 1
     93a:	22 23       	and	r18, r18
     93c:	29 f1       	breq	.+74     	; 0x988 <__stack+0x89>
     93e:	12 96       	adiw	r26, 0x02	; 2
     940:	ed 91       	ld	r30, X+
     942:	fc 91       	ld	r31, X
     944:	13 97       	sbiw	r26, 0x03	; 3
     946:	25 30       	cpi	r18, 0x05	; 5
     948:	18 f0       	brcs	.+6      	; 0x950 <__stack+0x51>
     94a:	81 81       	ldd	r24, Z+1	; 0x01
     94c:	92 81       	ldd	r25, Z+2	; 0x02
     94e:	0e c0       	rjmp	.+28     	; 0x96c <__stack+0x6d>
     950:	d8 01       	movw	r26, r16
     952:	14 96       	adiw	r26, 0x04	; 4
     954:	8d 91       	ld	r24, X+
     956:	9c 91       	ld	r25, X
     958:	15 97       	sbiw	r26, 0x05	; 5
     95a:	41 81       	ldd	r20, Z+1	; 0x01
     95c:	52 81       	ldd	r21, Z+2	; 0x02
     95e:	84 17       	cp	r24, r20
     960:	95 07       	cpc	r25, r21
     962:	69 f0       	breq	.+26     	; 0x97e <__stack+0x7f>
     964:	48 17       	cp	r20, r24
     966:	59 07       	cpc	r21, r25
     968:	30 f4       	brcc	.+12     	; 0x976 <__stack+0x77>
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	15 96       	adiw	r26, 0x05	; 5
     96e:	9c 93       	st	X, r25
     970:	8e 93       	st	-X, r24
     972:	14 97       	sbiw	r26, 0x04	; 4
     974:	04 c0       	rjmp	.+8      	; 0x97e <__stack+0x7f>
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	f8 01       	movw	r30, r16
     97a:	95 83       	std	Z+5, r25	; 0x05
     97c:	84 83       	std	Z+4, r24	; 0x04
     97e:	21 50       	subi	r18, 0x01	; 1
     980:	d8 01       	movw	r26, r16
     982:	11 96       	adiw	r26, 0x01	; 1
     984:	2c 93       	st	X, r18
     986:	31 c1       	rjmp	.+610    	; 0xbea <__stack+0x2eb>
     988:	f8 01       	movw	r30, r16
     98a:	2b c1       	rjmp	.+598    	; 0xbe2 <__stack+0x2e3>
     98c:	d8 01       	movw	r26, r16
     98e:	14 96       	adiw	r26, 0x04	; 4
     990:	2d 91       	ld	r18, X+
     992:	3c 91       	ld	r19, X
     994:	15 97       	sbiw	r26, 0x05	; 5
     996:	12 96       	adiw	r26, 0x02	; 2
     998:	ed 91       	ld	r30, X+
     99a:	fc 91       	ld	r31, X
     99c:	13 97       	sbiw	r26, 0x03	; 3
     99e:	41 81       	ldd	r20, Z+1	; 0x01
     9a0:	52 81       	ldd	r21, Z+2	; 0x02
     9a2:	24 17       	cp	r18, r20
     9a4:	35 07       	cpc	r19, r21
     9a6:	09 f4       	brne	.+2      	; 0x9aa <__stack+0xab>
     9a8:	2e c1       	rjmp	.+604    	; 0xc06 <__stack+0x307>
     9aa:	8e 81       	ldd	r24, Y+6	; 0x06
     9ac:	9f 81       	ldd	r25, Y+7	; 0x07
     9ae:	42 17       	cp	r20, r18
     9b0:	53 07       	cpc	r21, r19
     9b2:	f8 f4       	brcc	.+62     	; 0x9f2 <__stack+0xf3>
     9b4:	ea 81       	ldd	r30, Y+2	; 0x02
     9b6:	fb 81       	ldd	r31, Y+3	; 0x03
     9b8:	24 1b       	sub	r18, r20
     9ba:	35 0b       	sbc	r19, r21
     9bc:	dc 01       	movw	r26, r24
     9be:	aa 0d       	add	r26, r10
     9c0:	bb 1d       	adc	r27, r11
     9c2:	8c 91       	ld	r24, X
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	05 80       	ldd	r0, Z+5	; 0x05
     9c8:	02 c0       	rjmp	.+4      	; 0x9ce <__stack+0xcf>
     9ca:	95 95       	asr	r25
     9cc:	87 95       	ror	r24
     9ce:	0a 94       	dec	r0
     9d0:	e2 f7       	brpl	.-8      	; 0x9ca <__stack+0xcb>
     9d2:	99 27       	eor	r25, r25
     9d4:	28 17       	cp	r18, r24
     9d6:	39 07       	cpc	r19, r25
     9d8:	08 f4       	brcc	.+2      	; 0x9dc <__stack+0xdd>
     9da:	15 c1       	rjmp	.+554    	; 0xc06 <__stack+0x307>
     9dc:	84 81       	ldd	r24, Z+4	; 0x04
     9de:	88 23       	and	r24, r24
     9e0:	09 f4       	brne	.+2      	; 0x9e4 <__stack+0xe5>
     9e2:	11 c1       	rjmp	.+546    	; 0xc06 <__stack+0x307>
     9e4:	87 e0       	ldi	r24, 0x07	; 7
     9e6:	f8 01       	movw	r30, r16
     9e8:	80 83       	st	Z, r24
     9ea:	ea 81       	ldd	r30, Y+2	; 0x02
     9ec:	fb 81       	ldd	r31, Y+3	; 0x03
     9ee:	24 81       	ldd	r18, Z+4	; 0x04
     9f0:	19 c0       	rjmp	.+50     	; 0xa24 <__stack+0x125>
     9f2:	fc 01       	movw	r30, r24
     9f4:	ea 0d       	add	r30, r10
     9f6:	fb 1d       	adc	r31, r11
     9f8:	42 1b       	sub	r20, r18
     9fa:	53 0b       	sbc	r21, r19
     9fc:	80 81       	ld	r24, Z
     9fe:	90 e0       	ldi	r25, 0x00	; 0
     a00:	48 17       	cp	r20, r24
     a02:	59 07       	cpc	r21, r25
     a04:	08 f4       	brcc	.+2      	; 0xa08 <__stack+0x109>
     a06:	ff c0       	rjmp	.+510    	; 0xc06 <__stack+0x307>
     a08:	82 81       	ldd	r24, Z+2	; 0x02
     a0a:	88 23       	and	r24, r24
     a0c:	29 f0       	breq	.+10     	; 0xa18 <__stack+0x119>
     a0e:	b4 01       	movw	r22, r8
     a10:	ce 01       	movw	r24, r28
     a12:	99 de       	rcall	.-718    	; 0x746 <check_for_aks_block>
     a14:	81 11       	cpse	r24, r1
     a16:	f7 c0       	rjmp	.+494    	; 0xc06 <__stack+0x307>
     a18:	e4 e0       	ldi	r30, 0x04	; 4
     a1a:	d8 01       	movw	r26, r16
     a1c:	ec 93       	st	X, r30
     a1e:	ea 81       	ldd	r30, Y+2	; 0x02
     a20:	fb 81       	ldd	r31, Y+3	; 0x03
     a22:	22 81       	ldd	r18, Z+2	; 0x02
     a24:	8c 81       	ldd	r24, Y+4	; 0x04
     a26:	9d 81       	ldd	r25, Y+5	; 0x05
     a28:	fc 01       	movw	r30, r24
     a2a:	ee 0d       	add	r30, r14
     a2c:	ff 1d       	adc	r31, r15
     a2e:	21 83       	std	Z+1, r18	; 0x01
     a30:	dc c0       	rjmp	.+440    	; 0xbea <__stack+0x2eb>
     a32:	d8 01       	movw	r26, r16
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 91       	ld	r18, X+
     a38:	3c 91       	ld	r19, X
     a3a:	15 97       	sbiw	r26, 0x05	; 5
     a3c:	12 96       	adiw	r26, 0x02	; 2
     a3e:	ed 91       	ld	r30, X+
     a40:	fc 91       	ld	r31, X
     a42:	13 97       	sbiw	r26, 0x03	; 3
     a44:	81 81       	ldd	r24, Z+1	; 0x01
     a46:	92 81       	ldd	r25, Z+2	; 0x02
     a48:	82 17       	cp	r24, r18
     a4a:	93 07       	cpc	r25, r19
     a4c:	08 f4       	brcc	.+2      	; 0xa50 <__stack+0x151>
     a4e:	ba c0       	rjmp	.+372    	; 0xbc4 <__stack+0x2c5>
     a50:	ee 81       	ldd	r30, Y+6	; 0x06
     a52:	ff 81       	ldd	r31, Y+7	; 0x07
     a54:	ea 0d       	add	r30, r10
     a56:	fb 1d       	adc	r31, r11
     a58:	82 1b       	sub	r24, r18
     a5a:	93 0b       	sbc	r25, r19
     a5c:	20 81       	ld	r18, Z
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	28 17       	cp	r18, r24
     a62:	39 07       	cpc	r19, r25
     a64:	08 f0       	brcs	.+2      	; 0xa68 <__stack+0x169>
     a66:	c4 c0       	rjmp	.+392    	; 0xbf0 <__stack+0x2f1>
     a68:	82 81       	ldd	r24, Z+2	; 0x02
     a6a:	88 23       	and	r24, r24
     a6c:	29 f0       	breq	.+10     	; 0xa78 <__stack+0x179>
     a6e:	b4 01       	movw	r22, r8
     a70:	ce 01       	movw	r24, r28
     a72:	69 de       	rcall	.-814    	; 0x746 <check_for_aks_block>
     a74:	81 11       	cpse	r24, r1
     a76:	c7 c0       	rjmp	.+398    	; 0xc06 <__stack+0x307>
     a78:	f8 01       	movw	r30, r16
     a7a:	81 81       	ldd	r24, Z+1	; 0x01
     a7c:	88 23       	and	r24, r24
     a7e:	09 f4       	brne	.+2      	; 0xa82 <__stack+0x183>
     a80:	6a c0       	rjmp	.+212    	; 0xb56 <__stack+0x257>
     a82:	81 50       	subi	r24, 0x01	; 1
     a84:	81 83       	std	Z+1, r24	; 0x01
     a86:	b1 c0       	rjmp	.+354    	; 0xbea <__stack+0x2eb>
     a88:	e8 81       	ld	r30, Y
     a8a:	f9 81       	ldd	r31, Y+1	; 0x01
     a8c:	aa 81       	ldd	r26, Y+2	; 0x02
     a8e:	bb 81       	ldd	r27, Y+3	; 0x03
     a90:	18 96       	adiw	r26, 0x08	; 8
     a92:	8c 91       	ld	r24, X
     a94:	83 83       	std	Z+3, r24	; 0x03
     a96:	ec 81       	ldd	r30, Y+4	; 0x04
     a98:	fd 81       	ldd	r31, Y+5	; 0x05
     a9a:	ee 0d       	add	r30, r14
     a9c:	ff 1d       	adc	r31, r15
     a9e:	44 81       	ldd	r20, Z+4	; 0x04
     aa0:	55 81       	ldd	r21, Z+5	; 0x05
     aa2:	a2 81       	ldd	r26, Z+2	; 0x02
     aa4:	b3 81       	ldd	r27, Z+3	; 0x03
     aa6:	11 96       	adiw	r26, 0x01	; 1
     aa8:	8d 91       	ld	r24, X+
     aaa:	9c 91       	ld	r25, X
     aac:	12 97       	sbiw	r26, 0x02	; 2
     aae:	84 17       	cp	r24, r20
     ab0:	95 07       	cpc	r25, r21
     ab2:	c0 f0       	brcs	.+48     	; 0xae4 <__stack+0x1e5>
     ab4:	ae 81       	ldd	r26, Y+6	; 0x06
     ab6:	bf 81       	ldd	r27, Y+7	; 0x07
     ab8:	aa 0d       	add	r26, r10
     aba:	bb 1d       	adc	r27, r11
     abc:	6c 91       	ld	r22, X
     abe:	26 2f       	mov	r18, r22
     ac0:	30 e0       	ldi	r19, 0x00	; 0
     ac2:	11 96       	adiw	r26, 0x01	; 1
     ac4:	7c 91       	ld	r23, X
     ac6:	7f 5f       	subi	r23, 0xFF	; 255
     ac8:	02 c0       	rjmp	.+4      	; 0xace <__stack+0x1cf>
     aca:	35 95       	asr	r19
     acc:	27 95       	ror	r18
     ace:	7a 95       	dec	r23
     ad0:	e2 f7       	brpl	.-8      	; 0xaca <__stack+0x1cb>
     ad2:	84 1b       	sub	r24, r20
     ad4:	95 0b       	sbc	r25, r21
     ad6:	62 1b       	sub	r22, r18
     ad8:	26 2f       	mov	r18, r22
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	28 17       	cp	r18, r24
     ade:	39 07       	cpc	r19, r25
     ae0:	08 f4       	brcc	.+2      	; 0xae4 <__stack+0x1e5>
     ae2:	8f c0       	rjmp	.+286    	; 0xc02 <__stack+0x303>
     ae4:	70 82       	st	Z, r7
     ae6:	ea 81       	ldd	r30, Y+2	; 0x02
     ae8:	fb 81       	ldd	r31, Y+3	; 0x03
     aea:	22 81       	ldd	r18, Z+2	; 0x02
     aec:	8c 81       	ldd	r24, Y+4	; 0x04
     aee:	9d 81       	ldd	r25, Y+5	; 0x05
     af0:	fc 01       	movw	r30, r24
     af2:	ee 0d       	add	r30, r14
     af4:	ff 1d       	adc	r31, r15
     af6:	21 83       	std	Z+1, r18	; 0x01
     af8:	42 c0       	rjmp	.+132    	; 0xb7e <__stack+0x27f>
     afa:	d8 01       	movw	r26, r16
     afc:	14 96       	adiw	r26, 0x04	; 4
     afe:	6d 91       	ld	r22, X+
     b00:	7c 91       	ld	r23, X
     b02:	15 97       	sbiw	r26, 0x05	; 5
     b04:	12 96       	adiw	r26, 0x02	; 2
     b06:	ed 91       	ld	r30, X+
     b08:	fc 91       	ld	r31, X
     b0a:	13 97       	sbiw	r26, 0x03	; 3
     b0c:	21 81       	ldd	r18, Z+1	; 0x01
     b0e:	32 81       	ldd	r19, Z+2	; 0x02
     b10:	26 17       	cp	r18, r22
     b12:	37 07       	cpc	r19, r23
     b14:	58 f4       	brcc	.+22     	; 0xb2c <__stack+0x22d>
     b16:	11 96       	adiw	r26, 0x01	; 1
     b18:	8c 91       	ld	r24, X
     b1a:	11 97       	sbiw	r26, 0x01	; 1
     b1c:	81 11       	cpse	r24, r1
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <__stack+0x225>
     b20:	cc 92       	st	X, r12
     b22:	6f c0       	rjmp	.+222    	; 0xc02 <__stack+0x303>
     b24:	81 50       	subi	r24, 0x01	; 1
     b26:	f8 01       	movw	r30, r16
     b28:	81 83       	std	Z+1, r24	; 0x01
     b2a:	6b c0       	rjmp	.+214    	; 0xc02 <__stack+0x303>
     b2c:	ee 81       	ldd	r30, Y+6	; 0x06
     b2e:	ff 81       	ldd	r31, Y+7	; 0x07
     b30:	ea 0d       	add	r30, r10
     b32:	fb 1d       	adc	r31, r11
     b34:	80 81       	ld	r24, Z
     b36:	48 2f       	mov	r20, r24
     b38:	50 e0       	ldi	r21, 0x00	; 0
     b3a:	91 81       	ldd	r25, Z+1	; 0x01
     b3c:	9f 5f       	subi	r25, 0xFF	; 255
     b3e:	02 c0       	rjmp	.+4      	; 0xb44 <__stack+0x245>
     b40:	55 95       	asr	r21
     b42:	47 95       	ror	r20
     b44:	9a 95       	dec	r25
     b46:	e2 f7       	brpl	.-8      	; 0xb40 <__stack+0x241>
     b48:	26 1b       	sub	r18, r22
     b4a:	37 0b       	sbc	r19, r23
     b4c:	84 1b       	sub	r24, r20
     b4e:	90 e0       	ldi	r25, 0x00	; 0
     b50:	82 17       	cp	r24, r18
     b52:	93 07       	cpc	r25, r19
     b54:	60 f4       	brcc	.+24     	; 0xb6e <__stack+0x26f>
     b56:	d8 01       	movw	r26, r16
     b58:	6c 92       	st	X, r6
     b5a:	ea 81       	ldd	r30, Y+2	; 0x02
     b5c:	fb 81       	ldd	r31, Y+3	; 0x03
     b5e:	23 81       	ldd	r18, Z+3	; 0x03
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	9d 81       	ldd	r25, Y+5	; 0x05
     b64:	fc 01       	movw	r30, r24
     b66:	ee 0d       	add	r30, r14
     b68:	ff 1d       	adc	r31, r15
     b6a:	21 83       	std	Z+1, r18	; 0x01
     b6c:	4a c0       	rjmp	.+148    	; 0xc02 <__stack+0x303>
     b6e:	f8 01       	movw	r30, r16
     b70:	81 81       	ldd	r24, Z+1	; 0x01
     b72:	81 11       	cpse	r24, r1
     b74:	02 c0       	rjmp	.+4      	; 0xb7a <__stack+0x27b>
     b76:	c0 82       	st	Z, r12
     b78:	44 c0       	rjmp	.+136    	; 0xc02 <__stack+0x303>
     b7a:	81 50       	subi	r24, 0x01	; 1
     b7c:	81 83       	std	Z+1, r24	; 0x01
     b7e:	22 24       	eor	r2, r2
     b80:	23 94       	inc	r2
     b82:	33 c0       	rjmp	.+102    	; 0xbea <__stack+0x2eb>
     b84:	f8 01       	movw	r30, r16
     b86:	24 81       	ldd	r18, Z+4	; 0x04
     b88:	35 81       	ldd	r19, Z+5	; 0x05
     b8a:	02 80       	ldd	r0, Z+2	; 0x02
     b8c:	f3 81       	ldd	r31, Z+3	; 0x03
     b8e:	e0 2d       	mov	r30, r0
     b90:	81 81       	ldd	r24, Z+1	; 0x01
     b92:	92 81       	ldd	r25, Z+2	; 0x02
     b94:	82 17       	cp	r24, r18
     b96:	93 07       	cpc	r25, r19
     b98:	58 f5       	brcc	.+86     	; 0xbf0 <__stack+0x2f1>
     b9a:	28 1b       	sub	r18, r24
     b9c:	39 0b       	sbc	r19, r25
     b9e:	ee 81       	ldd	r30, Y+6	; 0x06
     ba0:	ff 81       	ldd	r31, Y+7	; 0x07
     ba2:	ea 0d       	add	r30, r10
     ba4:	fb 1d       	adc	r31, r11
     ba6:	80 81       	ld	r24, Z
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	ea 81       	ldd	r30, Y+2	; 0x02
     bac:	fb 81       	ldd	r31, Y+3	; 0x03
     bae:	05 80       	ldd	r0, Z+5	; 0x05
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <__stack+0x2b7>
     bb2:	95 95       	asr	r25
     bb4:	87 95       	ror	r24
     bb6:	0a 94       	dec	r0
     bb8:	e2 f7       	brpl	.-8      	; 0xbb2 <__stack+0x2b3>
     bba:	99 27       	eor	r25, r25
     bbc:	28 17       	cp	r18, r24
     bbe:	39 07       	cpc	r19, r25
     bc0:	18 f4       	brcc	.+6      	; 0xbc8 <__stack+0x2c9>
     bc2:	d8 01       	movw	r26, r16
     bc4:	cc 92       	st	X, r12
     bc6:	16 c0       	rjmp	.+44     	; 0xbf4 <__stack+0x2f5>
     bc8:	f8 01       	movw	r30, r16
     bca:	81 81       	ldd	r24, Z+1	; 0x01
     bcc:	81 11       	cpse	r24, r1
     bce:	0b c0       	rjmp	.+22     	; 0xbe6 <__stack+0x2e7>
     bd0:	50 82       	st	Z, r5
     bd2:	8c 81       	ldd	r24, Y+4	; 0x04
     bd4:	9d 81       	ldd	r25, Y+5	; 0x05
     bd6:	fc 01       	movw	r30, r24
     bd8:	ee 0d       	add	r30, r14
     bda:	ff 1d       	adc	r31, r15
     bdc:	02 80       	ldd	r0, Z+2	; 0x02
     bde:	f3 81       	ldd	r31, Z+3	; 0x03
     be0:	e0 2d       	mov	r30, r0
     be2:	c0 82       	st	Z, r12
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__stack+0x307>
     be6:	81 50       	subi	r24, 0x01	; 1
     be8:	81 83       	std	Z+1, r24	; 0x01
     bea:	dd 24       	eor	r13, r13
     bec:	d3 94       	inc	r13
     bee:	0b c0       	rjmp	.+22     	; 0xc06 <__stack+0x307>
     bf0:	f8 01       	movw	r30, r16
     bf2:	c0 82       	st	Z, r12
     bf4:	8c 81       	ldd	r24, Y+4	; 0x04
     bf6:	9d 81       	ldd	r25, Y+5	; 0x05
     bf8:	fc 01       	movw	r30, r24
     bfa:	ee 0d       	add	r30, r14
     bfc:	ff 1d       	adc	r31, r15
     bfe:	11 82       	std	Z+1, r1	; 0x01
     c00:	02 c0       	rjmp	.+4      	; 0xc06 <__stack+0x307>
     c02:	22 24       	eor	r2, r2
     c04:	23 94       	inc	r2
     c06:	ff ef       	ldi	r31, 0xFF	; 255
     c08:	8f 1a       	sub	r8, r31
     c0a:	9f 0a       	sbc	r9, r31
     c0c:	83 e0       	ldi	r24, 0x03	; 3
     c0e:	a8 0e       	add	r10, r24
     c10:	b1 1c       	adc	r11, r1
     c12:	54 ce       	rjmp	.-856    	; 0x8bc <qtm_key_sensors_process+0x50>
     c14:	e8 81       	ld	r30, Y
     c16:	f9 81       	ldd	r31, Y+1	; 0x01
     c18:	80 81       	ld	r24, Z
     c1a:	87 ff       	sbrs	r24, 7
     c1c:	23 c0       	rjmp	.+70     	; 0xc64 <__stack+0x365>
     c1e:	40 e0       	ldi	r20, 0x00	; 0
     c20:	50 e0       	ldi	r21, 0x00	; 0
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	ea 81       	ldd	r30, Y+2	; 0x02
     c28:	fb 81       	ldd	r31, Y+3	; 0x03
     c2a:	80 81       	ld	r24, Z
     c2c:	91 81       	ldd	r25, Z+1	; 0x01
     c2e:	28 17       	cp	r18, r24
     c30:	39 07       	cpc	r19, r25
     c32:	98 f4       	brcc	.+38     	; 0xc5a <__stack+0x35b>
     c34:	ec 81       	ldd	r30, Y+4	; 0x04
     c36:	fd 81       	ldd	r31, Y+5	; 0x05
     c38:	e4 0f       	add	r30, r20
     c3a:	f5 1f       	adc	r31, r21
     c3c:	a2 81       	ldd	r26, Z+2	; 0x02
     c3e:	b3 81       	ldd	r27, Z+3	; 0x03
     c40:	8c 91       	ld	r24, X
     c42:	80 fd       	sbrc	r24, 0
     c44:	05 c0       	rjmp	.+10     	; 0xc50 <__stack+0x351>
     c46:	90 81       	ld	r25, Z
     c48:	97 7f       	andi	r25, 0xF7	; 247
     c4a:	11 f0       	breq	.+4      	; 0xc50 <__stack+0x351>
     c4c:	81 60       	ori	r24, 0x01	; 1
     c4e:	8c 93       	st	X, r24
     c50:	2f 5f       	subi	r18, 0xFF	; 255
     c52:	3f 4f       	sbci	r19, 0xFF	; 255
     c54:	4a 5f       	subi	r20, 0xFA	; 250
     c56:	5f 4f       	sbci	r21, 0xFF	; 255
     c58:	e6 cf       	rjmp	.-52     	; 0xc26 <__stack+0x327>
     c5a:	e8 81       	ld	r30, Y
     c5c:	f9 81       	ldd	r31, Y+1	; 0x01
     c5e:	80 81       	ld	r24, Z
     c60:	8f 77       	andi	r24, 0x7F	; 127
     c62:	80 83       	st	Z, r24
     c64:	d1 10       	cpse	r13, r1
     c66:	07 c0       	rjmp	.+14     	; 0xc76 <__stack+0x377>
     c68:	e8 81       	ld	r30, Y
     c6a:	f9 81       	ldd	r31, Y+1	; 0x01
     c6c:	21 10       	cpse	r2, r1
     c6e:	6f c0       	rjmp	.+222    	; 0xd4e <__stack+0x44f>
     c70:	80 81       	ld	r24, Z
     c72:	8e 7f       	andi	r24, 0xFE	; 254
     c74:	6e c0       	rjmp	.+220    	; 0xd52 <__stack+0x453>
     c76:	ea 81       	ldd	r30, Y+2	; 0x02
     c78:	fb 81       	ldd	r31, Y+3	; 0x03
     c7a:	81 85       	ldd	r24, Z+9	; 0x09
     c7c:	88 23       	and	r24, r24
     c7e:	a1 f3       	breq	.-24     	; 0xc68 <__stack+0x369>
     c80:	e8 81       	ld	r30, Y
     c82:	f9 81       	ldd	r31, Y+1	; 0x01
     c84:	80 81       	ld	r24, Z
     c86:	80 68       	ori	r24, 0x80	; 128
     c88:	80 83       	st	Z, r24
     c8a:	ea 81       	ldd	r30, Y+2	; 0x02
     c8c:	fb 81       	ldd	r31, Y+3	; 0x03
     c8e:	81 85       	ldd	r24, Z+9	; 0x09
     c90:	81 30       	cpi	r24, 0x01	; 1
     c92:	51 f7       	brne	.-44     	; 0xc68 <__stack+0x369>
     c94:	40 e0       	ldi	r20, 0x00	; 0
     c96:	50 e0       	ldi	r21, 0x00	; 0
     c98:	20 e0       	ldi	r18, 0x00	; 0
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	96 e0       	ldi	r25, 0x06	; 6
     c9e:	d9 2e       	mov	r13, r25
     ca0:	ea 81       	ldd	r30, Y+2	; 0x02
     ca2:	fb 81       	ldd	r31, Y+3	; 0x03
     ca4:	60 81       	ld	r22, Z
     ca6:	71 81       	ldd	r23, Z+1	; 0x01
     ca8:	26 17       	cp	r18, r22
     caa:	37 07       	cpc	r19, r23
     cac:	e8 f6       	brcc	.-70     	; 0xc68 <__stack+0x369>
     cae:	0c 81       	ldd	r16, Y+4	; 0x04
     cb0:	1d 81       	ldd	r17, Y+5	; 0x05
     cb2:	fa 01       	movw	r30, r20
     cb4:	ee 0f       	add	r30, r30
     cb6:	ff 1f       	adc	r31, r31
     cb8:	e0 0f       	add	r30, r16
     cba:	f1 1f       	adc	r31, r17
     cbc:	80 81       	ld	r24, Z
     cbe:	98 2f       	mov	r25, r24
     cc0:	97 7f       	andi	r25, 0xF7	; 247
     cc2:	a1 f1       	breq	.+104    	; 0xd2c <__stack+0x42d>
     cc4:	85 38       	cpi	r24, 0x85	; 133
     cc6:	11 f0       	breq	.+4      	; 0xccc <__stack+0x3cd>
     cc8:	83 30       	cpi	r24, 0x03	; 3
     cca:	b1 f5       	brne	.+108    	; 0xd38 <__stack+0x439>
     ccc:	ee 80       	ldd	r14, Y+6	; 0x06
     cce:	ff 80       	ldd	r15, Y+7	; 0x07
     cd0:	d7 01       	movw	r26, r14
     cd2:	a4 0f       	add	r26, r20
     cd4:	b5 1f       	adc	r27, r21
     cd6:	12 96       	adiw	r26, 0x02	; 2
     cd8:	bc 90       	ld	r11, X
     cda:	bb 20       	and	r11, r11
     cdc:	39 f1       	breq	.+78     	; 0xd2c <__stack+0x42d>
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	c1 2c       	mov	r12, r1
     ce4:	86 17       	cp	r24, r22
     ce6:	97 07       	cpc	r25, r23
     ce8:	f8 f4       	brcc	.+62     	; 0xd28 <__stack+0x429>
     cea:	28 17       	cp	r18, r24
     cec:	39 07       	cpc	r19, r25
     cee:	d1 f0       	breq	.+52     	; 0xd24 <__stack+0x425>
     cf0:	d8 9e       	mul	r13, r24
     cf2:	d0 01       	movw	r26, r0
     cf4:	d9 9e       	mul	r13, r25
     cf6:	b0 0d       	add	r27, r0
     cf8:	11 24       	eor	r1, r1
     cfa:	a0 0f       	add	r26, r16
     cfc:	b1 1f       	adc	r27, r17
     cfe:	ac 91       	ld	r26, X
     d00:	a4 30       	cpi	r26, 0x04	; 4
     d02:	11 f0       	breq	.+4      	; 0xd08 <__stack+0x409>
     d04:	a6 38       	cpi	r26, 0x86	; 134
     d06:	71 f4       	brne	.+28     	; 0xd24 <__stack+0x425>
     d08:	dc 01       	movw	r26, r24
     d0a:	aa 0f       	add	r26, r26
     d0c:	bb 1f       	adc	r27, r27
     d0e:	a8 0f       	add	r26, r24
     d10:	b9 1f       	adc	r27, r25
     d12:	ae 0d       	add	r26, r14
     d14:	bf 1d       	adc	r27, r15
     d16:	12 96       	adiw	r26, 0x02	; 2
     d18:	ac 91       	ld	r26, X
     d1a:	ba 12       	cpse	r11, r26
     d1c:	03 c0       	rjmp	.+6      	; 0xd24 <__stack+0x425>
     d1e:	cb 01       	movw	r24, r22
     d20:	cc 24       	eor	r12, r12
     d22:	c3 94       	inc	r12
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	de cf       	rjmp	.-68     	; 0xce4 <__stack+0x3e5>
     d28:	c1 10       	cpse	r12, r1
     d2a:	06 c0       	rjmp	.+12     	; 0xd38 <__stack+0x439>
     d2c:	02 80       	ldd	r0, Z+2	; 0x02
     d2e:	f3 81       	ldd	r31, Z+3	; 0x03
     d30:	e0 2d       	mov	r30, r0
     d32:	80 81       	ld	r24, Z
     d34:	8e 7f       	andi	r24, 0xFE	; 254
     d36:	05 c0       	rjmp	.+10     	; 0xd42 <__stack+0x443>
     d38:	02 80       	ldd	r0, Z+2	; 0x02
     d3a:	f3 81       	ldd	r31, Z+3	; 0x03
     d3c:	e0 2d       	mov	r30, r0
     d3e:	80 81       	ld	r24, Z
     d40:	81 60       	ori	r24, 0x01	; 1
     d42:	80 83       	st	Z, r24
     d44:	2f 5f       	subi	r18, 0xFF	; 255
     d46:	3f 4f       	sbci	r19, 0xFF	; 255
     d48:	4d 5f       	subi	r20, 0xFD	; 253
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	a9 cf       	rjmp	.-174    	; 0xca0 <__stack+0x3a1>
     d4e:	80 81       	ld	r24, Z
     d50:	81 60       	ori	r24, 0x01	; 1
     d52:	80 83       	st	Z, r24
     d54:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <qtm_local_ms_timecount>
     d58:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <qtm_local_ms_timecount+0x1>
     d5c:	e8 81       	ld	r30, Y
     d5e:	f9 81       	ldd	r31, Y+1	; 0x01
     d60:	21 81       	ldd	r18, Z+1	; 0x01
     d62:	32 81       	ldd	r19, Z+2	; 0x02
     d64:	a9 01       	movw	r20, r18
     d66:	48 53       	subi	r20, 0x38	; 56
     d68:	5f 4f       	sbci	r21, 0xFF	; 255
     d6a:	48 17       	cp	r20, r24
     d6c:	59 07       	cpc	r21, r25
     d6e:	38 f4       	brcc	.+14     	; 0xd7e <__stack+0x47f>
     d70:	82 1b       	sub	r24, r18
     d72:	93 0b       	sbc	r25, r19
     d74:	aa 24       	eor	r10, r10
     d76:	a3 94       	inc	r10
     d78:	a3 e0       	ldi	r26, 0x03	; 3
     d7a:	ba 2e       	mov	r11, r26
     d7c:	44 c0       	rjmp	.+136    	; 0xe06 <__stack+0x507>
     d7e:	82 17       	cp	r24, r18
     d80:	93 07       	cpc	r25, r19
     d82:	10 f0       	brcs	.+4      	; 0xd88 <__stack+0x489>
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	04 c1       	rjmp	.+520    	; 0xf90 <__stack+0x691>
     d88:	82 1b       	sub	r24, r18
     d8a:	93 0b       	sbc	r25, r19
     d8c:	01 97       	sbiw	r24, 0x01	; 1
     d8e:	89 3c       	cpi	r24, 0xC9	; 201
     d90:	91 05       	cpc	r25, r1
     d92:	c0 f3       	brcs	.-16     	; 0xd84 <__stack+0x485>
     d94:	ef cf       	rjmp	.-34     	; 0xd74 <__stack+0x475>
     d96:	88 5c       	subi	r24, 0xC8	; 200
     d98:	91 09       	sbc	r25, r1
     d9a:	e8 81       	ld	r30, Y
     d9c:	f9 81       	ldd	r31, Y+1	; 0x01
     d9e:	21 81       	ldd	r18, Z+1	; 0x01
     da0:	32 81       	ldd	r19, Z+2	; 0x02
     da2:	28 53       	subi	r18, 0x38	; 56
     da4:	3f 4f       	sbci	r19, 0xFF	; 255
     da6:	32 83       	std	Z+2, r19	; 0x02
     da8:	21 83       	std	Z+1, r18	; 0x01
     daa:	23 81       	ldd	r18, Z+3	; 0x03
     dac:	21 11       	cpse	r18, r1
     dae:	96 c0       	rjmp	.+300    	; 0xedc <__stack+0x5dd>
     db0:	24 81       	ldd	r18, Z+4	; 0x04
     db2:	22 23       	and	r18, r18
     db4:	11 f0       	breq	.+4      	; 0xdba <__stack+0x4bb>
     db6:	21 50       	subi	r18, 0x01	; 1
     db8:	24 83       	std	Z+4, r18	; 0x04
     dba:	e8 81       	ld	r30, Y
     dbc:	f9 81       	ldd	r31, Y+1	; 0x01
     dbe:	25 81       	ldd	r18, Z+5	; 0x05
     dc0:	22 23       	and	r18, r18
     dc2:	11 f0       	breq	.+4      	; 0xdc8 <__stack+0x4c9>
     dc4:	21 50       	subi	r18, 0x01	; 1
     dc6:	25 83       	std	Z+5, r18	; 0x05
     dc8:	8a 80       	ldd	r8, Y+2	; 0x02
     dca:	9b 80       	ldd	r9, Y+3	; 0x03
     dcc:	d4 01       	movw	r26, r8
     dce:	16 96       	adiw	r26, 0x06	; 6
     dd0:	2c 91       	ld	r18, X
     dd2:	16 97       	sbiw	r26, 0x06	; 6
     dd4:	21 11       	cpse	r18, r1
     dd6:	1b c0       	rjmp	.+54     	; 0xe0e <__stack+0x50f>
     dd8:	8a 80       	ldd	r8, Y+2	; 0x02
     dda:	9b 80       	ldd	r9, Y+3	; 0x03
     ddc:	f4 01       	movw	r30, r8
     dde:	27 81       	ldd	r18, Z+7	; 0x07
     de0:	21 11       	cpse	r18, r1
     de2:	48 c0       	rjmp	.+144    	; 0xe74 <__stack+0x575>
     de4:	ea 81       	ldd	r30, Y+2	; 0x02
     de6:	fb 81       	ldd	r31, Y+3	; 0x03
     de8:	23 81       	ldd	r18, Z+3	; 0x03
     dea:	22 23       	and	r18, r18
     dec:	61 f0       	breq	.+24     	; 0xe06 <__stack+0x507>
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	a0 e0       	ldi	r26, 0x00	; 0
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	ea 81       	ldd	r30, Y+2	; 0x02
     df8:	fb 81       	ldd	r31, Y+3	; 0x03
     dfa:	40 81       	ld	r20, Z
     dfc:	51 81       	ldd	r21, Z+1	; 0x01
     dfe:	a4 17       	cp	r26, r20
     e00:	b5 07       	cpc	r27, r21
     e02:	08 f4       	brcc	.+2      	; 0xe06 <__stack+0x507>
     e04:	6e c0       	rjmp	.+220    	; 0xee2 <__stack+0x5e3>
     e06:	89 3c       	cpi	r24, 0xC9	; 201
     e08:	91 05       	cpc	r25, r1
     e0a:	28 f6       	brcc	.-118    	; 0xd96 <__stack+0x497>
     e0c:	bb cf       	rjmp	.-138    	; 0xd84 <__stack+0x485>
     e0e:	08 81       	ld	r16, Y
     e10:	19 81       	ldd	r17, Y+1	; 0x01
     e12:	f8 01       	movw	r30, r16
     e14:	24 81       	ldd	r18, Z+4	; 0x04
     e16:	21 11       	cpse	r18, r1
     e18:	df cf       	rjmp	.-66     	; 0xdd8 <__stack+0x4d9>
     e1a:	ed 90       	ld	r14, X+
     e1c:	fc 90       	ld	r15, X
     e1e:	60 e0       	ldi	r22, 0x00	; 0
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	40 e0       	ldi	r20, 0x00	; 0
     e24:	50 e0       	ldi	r21, 0x00	; 0
     e26:	4e 15       	cp	r20, r14
     e28:	5f 05       	cpc	r21, r15
     e2a:	f1 f0       	breq	.+60     	; 0xe68 <__stack+0x569>
     e2c:	ec 81       	ldd	r30, Y+4	; 0x04
     e2e:	fd 81       	ldd	r31, Y+5	; 0x05
     e30:	e6 0f       	add	r30, r22
     e32:	f7 1f       	adc	r31, r23
     e34:	20 81       	ld	r18, Z
     e36:	23 30       	cpi	r18, 0x03	; 3
     e38:	11 f0       	breq	.+4      	; 0xe3e <__stack+0x53f>
     e3a:	28 30       	cpi	r18, 0x08	; 8
     e3c:	81 f4       	brne	.+32     	; 0xe5e <__stack+0x55f>
     e3e:	24 81       	ldd	r18, Z+4	; 0x04
     e40:	35 81       	ldd	r19, Z+5	; 0x05
     e42:	c2 80       	ldd	r12, Z+2	; 0x02
     e44:	d3 80       	ldd	r13, Z+3	; 0x03
     e46:	d6 01       	movw	r26, r12
     e48:	11 96       	adiw	r26, 0x01	; 1
     e4a:	cd 90       	ld	r12, X+
     e4c:	dc 90       	ld	r13, X
     e4e:	12 97       	sbiw	r26, 0x02	; 2
     e50:	2c 15       	cp	r18, r12
     e52:	3d 05       	cpc	r19, r13
     e54:	20 f4       	brcc	.+8      	; 0xe5e <__stack+0x55f>
     e56:	2f 5f       	subi	r18, 0xFF	; 255
     e58:	3f 4f       	sbci	r19, 0xFF	; 255
     e5a:	35 83       	std	Z+5, r19	; 0x05
     e5c:	24 83       	std	Z+4, r18	; 0x04
     e5e:	4f 5f       	subi	r20, 0xFF	; 255
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	6a 5f       	subi	r22, 0xFA	; 250
     e64:	7f 4f       	sbci	r23, 0xFF	; 255
     e66:	df cf       	rjmp	.-66     	; 0xe26 <__stack+0x527>
     e68:	f4 01       	movw	r30, r8
     e6a:	26 81       	ldd	r18, Z+6	; 0x06
     e6c:	d8 01       	movw	r26, r16
     e6e:	14 96       	adiw	r26, 0x04	; 4
     e70:	2c 93       	st	X, r18
     e72:	b2 cf       	rjmp	.-156    	; 0xdd8 <__stack+0x4d9>
     e74:	08 81       	ld	r16, Y
     e76:	19 81       	ldd	r17, Y+1	; 0x01
     e78:	d8 01       	movw	r26, r16
     e7a:	15 96       	adiw	r26, 0x05	; 5
     e7c:	2c 91       	ld	r18, X
     e7e:	21 11       	cpse	r18, r1
     e80:	b1 cf       	rjmp	.-158    	; 0xde4 <__stack+0x4e5>
     e82:	e0 80       	ld	r14, Z
     e84:	f1 80       	ldd	r15, Z+1	; 0x01
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	70 e0       	ldi	r23, 0x00	; 0
     e8a:	40 e0       	ldi	r20, 0x00	; 0
     e8c:	50 e0       	ldi	r21, 0x00	; 0
     e8e:	4e 15       	cp	r20, r14
     e90:	5f 05       	cpc	r21, r15
     e92:	f1 f0       	breq	.+60     	; 0xed0 <__stack+0x5d1>
     e94:	ec 81       	ldd	r30, Y+4	; 0x04
     e96:	fd 81       	ldd	r31, Y+5	; 0x05
     e98:	e6 0f       	add	r30, r22
     e9a:	f7 1f       	adc	r31, r23
     e9c:	20 81       	ld	r18, Z
     e9e:	23 30       	cpi	r18, 0x03	; 3
     ea0:	11 f0       	breq	.+4      	; 0xea6 <__stack+0x5a7>
     ea2:	28 30       	cpi	r18, 0x08	; 8
     ea4:	81 f4       	brne	.+32     	; 0xec6 <__stack+0x5c7>
     ea6:	24 81       	ldd	r18, Z+4	; 0x04
     ea8:	35 81       	ldd	r19, Z+5	; 0x05
     eaa:	c2 80       	ldd	r12, Z+2	; 0x02
     eac:	d3 80       	ldd	r13, Z+3	; 0x03
     eae:	d6 01       	movw	r26, r12
     eb0:	11 96       	adiw	r26, 0x01	; 1
     eb2:	cd 90       	ld	r12, X+
     eb4:	dc 90       	ld	r13, X
     eb6:	12 97       	sbiw	r26, 0x02	; 2
     eb8:	c2 16       	cp	r12, r18
     eba:	d3 06       	cpc	r13, r19
     ebc:	20 f4       	brcc	.+8      	; 0xec6 <__stack+0x5c7>
     ebe:	21 50       	subi	r18, 0x01	; 1
     ec0:	31 09       	sbc	r19, r1
     ec2:	35 83       	std	Z+5, r19	; 0x05
     ec4:	24 83       	std	Z+4, r18	; 0x04
     ec6:	4f 5f       	subi	r20, 0xFF	; 255
     ec8:	5f 4f       	sbci	r21, 0xFF	; 255
     eca:	6a 5f       	subi	r22, 0xFA	; 250
     ecc:	7f 4f       	sbci	r23, 0xFF	; 255
     ece:	df cf       	rjmp	.-66     	; 0xe8e <__stack+0x58f>
     ed0:	f4 01       	movw	r30, r8
     ed2:	27 81       	ldd	r18, Z+7	; 0x07
     ed4:	d8 01       	movw	r26, r16
     ed6:	15 96       	adiw	r26, 0x05	; 5
     ed8:	2c 93       	st	X, r18
     eda:	84 cf       	rjmp	.-248    	; 0xde4 <__stack+0x4e5>
     edc:	21 50       	subi	r18, 0x01	; 1
     ede:	23 83       	std	Z+3, r18	; 0x03
     ee0:	81 cf       	rjmp	.-254    	; 0xde4 <__stack+0x4e5>
     ee2:	a9 01       	movw	r20, r18
     ee4:	44 0f       	add	r20, r20
     ee6:	55 1f       	adc	r21, r21
     ee8:	ec 81       	ldd	r30, Y+4	; 0x04
     eea:	fd 81       	ldd	r31, Y+5	; 0x05
     eec:	e4 0f       	add	r30, r20
     eee:	f5 1f       	adc	r31, r21
     ef0:	60 81       	ld	r22, Z
     ef2:	65 38       	cpi	r22, 0x85	; 133
     ef4:	09 f0       	breq	.+2      	; 0xef8 <__stack+0x5f9>
     ef6:	47 c0       	rjmp	.+142    	; 0xf86 <__stack+0x687>
     ef8:	61 81       	ldd	r22, Z+1	; 0x01
     efa:	66 23       	and	r22, r22
     efc:	19 f0       	breq	.+6      	; 0xf04 <__stack+0x605>
     efe:	61 50       	subi	r22, 0x01	; 1
     f00:	61 83       	std	Z+1, r22	; 0x01
     f02:	41 c0       	rjmp	.+130    	; 0xf86 <__stack+0x687>
     f04:	a0 82       	st	Z, r10
     f06:	6c 81       	ldd	r22, Y+4	; 0x04
     f08:	7d 81       	ldd	r23, Y+5	; 0x05
     f0a:	fb 01       	movw	r30, r22
     f0c:	e4 0f       	add	r30, r20
     f0e:	f5 1f       	adc	r31, r21
     f10:	02 80       	ldd	r0, Z+2	; 0x02
     f12:	f3 81       	ldd	r31, Z+3	; 0x03
     f14:	e0 2d       	mov	r30, r0
     f16:	b0 82       	st	Z, r11
     f18:	ee 81       	ldd	r30, Y+6	; 0x06
     f1a:	ff 81       	ldd	r31, Y+7	; 0x07
     f1c:	e2 0f       	add	r30, r18
     f1e:	f3 1f       	adc	r31, r19
     f20:	d2 80       	ldd	r13, Z+2	; 0x02
     f22:	dd 20       	and	r13, r13
     f24:	81 f1       	breq	.+96     	; 0xf86 <__stack+0x687>
     f26:	40 e0       	ldi	r20, 0x00	; 0
     f28:	50 e0       	ldi	r21, 0x00	; 0
     f2a:	00 e0       	ldi	r16, 0x00	; 0
     f2c:	10 e0       	ldi	r17, 0x00	; 0
     f2e:	ea 81       	ldd	r30, Y+2	; 0x02
     f30:	fb 81       	ldd	r31, Y+3	; 0x03
     f32:	60 81       	ld	r22, Z
     f34:	71 81       	ldd	r23, Z+1	; 0x01
     f36:	06 17       	cp	r16, r22
     f38:	17 07       	cpc	r17, r23
     f3a:	28 f5       	brcc	.+74     	; 0xf86 <__stack+0x687>
     f3c:	ee 81       	ldd	r30, Y+6	; 0x06
     f3e:	ff 81       	ldd	r31, Y+7	; 0x07
     f40:	e4 0f       	add	r30, r20
     f42:	f5 1f       	adc	r31, r21
     f44:	62 81       	ldd	r22, Z+2	; 0x02
     f46:	d6 12       	cpse	r13, r22
     f48:	19 c0       	rjmp	.+50     	; 0xf7c <__stack+0x67d>
     f4a:	ba 01       	movw	r22, r20
     f4c:	66 0f       	add	r22, r22
     f4e:	77 1f       	adc	r23, r23
     f50:	ec 81       	ldd	r30, Y+4	; 0x04
     f52:	fd 81       	ldd	r31, Y+5	; 0x05
     f54:	4f 01       	movw	r8, r30
     f56:	86 0e       	add	r8, r22
     f58:	97 1e       	adc	r9, r23
     f5a:	f4 01       	movw	r30, r8
     f5c:	e2 80       	ldd	r14, Z+2	; 0x02
     f5e:	f3 80       	ldd	r15, Z+3	; 0x03
     f60:	f7 01       	movw	r30, r14
     f62:	f0 80       	ld	r15, Z
     f64:	f0 fe       	sbrs	r15, 0
     f66:	0a c0       	rjmp	.+20     	; 0xf7c <__stack+0x67d>
     f68:	f4 01       	movw	r30, r8
     f6a:	a0 82       	st	Z, r10
     f6c:	ec 81       	ldd	r30, Y+4	; 0x04
     f6e:	fd 81       	ldd	r31, Y+5	; 0x05
     f70:	e6 0f       	add	r30, r22
     f72:	f7 1f       	adc	r31, r23
     f74:	02 80       	ldd	r0, Z+2	; 0x02
     f76:	f3 81       	ldd	r31, Z+3	; 0x03
     f78:	e0 2d       	mov	r30, r0
     f7a:	b0 82       	st	Z, r11
     f7c:	0f 5f       	subi	r16, 0xFF	; 255
     f7e:	1f 4f       	sbci	r17, 0xFF	; 255
     f80:	4d 5f       	subi	r20, 0xFD	; 253
     f82:	5f 4f       	sbci	r21, 0xFF	; 255
     f84:	d4 cf       	rjmp	.-88     	; 0xf2e <__stack+0x62f>
     f86:	11 96       	adiw	r26, 0x01	; 1
     f88:	2d 5f       	subi	r18, 0xFD	; 253
     f8a:	3f 4f       	sbci	r19, 0xFF	; 255
     f8c:	34 cf       	rjmp	.-408    	; 0xdf6 <__stack+0x4f7>
     f8e:	8b e0       	ldi	r24, 0x0B	; 11
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	1f 91       	pop	r17
     f96:	0f 91       	pop	r16
     f98:	ff 90       	pop	r15
     f9a:	ef 90       	pop	r14
     f9c:	df 90       	pop	r13
     f9e:	cf 90       	pop	r12
     fa0:	bf 90       	pop	r11
     fa2:	af 90       	pop	r10
     fa4:	9f 90       	pop	r9
     fa6:	8f 90       	pop	r8
     fa8:	7f 90       	pop	r7
     faa:	6f 90       	pop	r6
     fac:	5f 90       	pop	r5
     fae:	4f 90       	pop	r4
     fb0:	3f 90       	pop	r3
     fb2:	2f 90       	pop	r2
     fb4:	08 95       	ret

00000fb6 <select_next_channel_to_measure>:
     fb6:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <current_measure_channel>
     fba:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <current_measure_channel+0x1>
     fbe:	a0 91 91 01 	lds	r26, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
     fc2:	b0 91 92 01 	lds	r27, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
     fc6:	ed 91       	ld	r30, X+
     fc8:	fc 91       	ld	r31, X
     fca:	11 97       	sbiw	r26, 0x01	; 1
     fcc:	40 81       	ld	r20, Z
     fce:	51 81       	ldd	r21, Z+1	; 0x01
     fd0:	25 e0       	ldi	r18, 0x05	; 5
     fd2:	28 9f       	mul	r18, r24
     fd4:	b0 01       	movw	r22, r0
     fd6:	29 9f       	mul	r18, r25
     fd8:	70 0d       	add	r23, r0
     fda:	11 24       	eor	r1, r1
     fdc:	20 e0       	ldi	r18, 0x00	; 0
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	84 17       	cp	r24, r20
     fe2:	95 07       	cpc	r25, r21
     fe4:	a8 f4       	brcc	.+42     	; 0x1010 <select_next_channel_to_measure+0x5a>
     fe6:	14 96       	adiw	r26, 0x04	; 4
     fe8:	ed 91       	ld	r30, X+
     fea:	fc 91       	ld	r31, X
     fec:	15 97       	sbiw	r26, 0x05	; 5
     fee:	e2 0f       	add	r30, r18
     ff0:	f3 1f       	adc	r31, r19
     ff2:	e6 0f       	add	r30, r22
     ff4:	f7 1f       	adc	r31, r23
     ff6:	e0 81       	ld	r30, Z
     ff8:	2b 5f       	subi	r18, 0xFB	; 251
     ffa:	3f 4f       	sbci	r19, 0xFF	; 255
     ffc:	e0 fd       	sbrc	r30, 0
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <select_next_channel_to_measure+0x4e>
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	ee cf       	rjmp	.-36     	; 0xfe0 <select_next_channel_to_measure+0x2a>
    1004:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <current_measure_channel+0x1>
    1008:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <current_measure_channel>
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	08 95       	ret
    1010:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <current_measure_channel+0x1>
    1014:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <current_measure_channel>
    1018:	81 e0       	ldi	r24, 0x01	; 1
    101a:	08 95       	ret

0000101c <qtm_measure_node>:
    101c:	4a e0       	ldi	r20, 0x0A	; 10
    101e:	48 9f       	mul	r20, r24
    1020:	90 01       	movw	r18, r0
    1022:	49 9f       	mul	r20, r25
    1024:	30 0d       	add	r19, r0
    1026:	11 24       	eor	r1, r1
    1028:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    102c:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1030:	02 80       	ldd	r0, Z+2	; 0x02
    1032:	f3 81       	ldd	r31, Z+3	; 0x03
    1034:	e0 2d       	mov	r30, r0
    1036:	e2 0f       	add	r30, r18
    1038:	f3 1f       	adc	r31, r19
    103a:	42 81       	ldd	r20, Z+2	; 0x02
    103c:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    1040:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    1044:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1048:	02 80       	ldd	r0, Z+2	; 0x02
    104a:	f3 81       	ldd	r31, Z+3	; 0x03
    104c:	e0 2d       	mov	r30, r0
    104e:	e2 0f       	add	r30, r18
    1050:	f3 1f       	adc	r31, r19
    1052:	43 81       	ldd	r20, Z+3	; 0x03
    1054:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    1058:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    105c:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1060:	02 80       	ldd	r0, Z+2	; 0x02
    1062:	f3 81       	ldd	r31, Z+3	; 0x03
    1064:	e0 2d       	mov	r30, r0
    1066:	e2 0f       	add	r30, r18
    1068:	f3 1f       	adc	r31, r19
    106a:	44 81       	ldd	r20, Z+4	; 0x04
    106c:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    1070:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    1074:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1078:	02 80       	ldd	r0, Z+2	; 0x02
    107a:	f3 81       	ldd	r31, Z+3	; 0x03
    107c:	e0 2d       	mov	r30, r0
    107e:	e2 0f       	add	r30, r18
    1080:	f3 1f       	adc	r31, r19
    1082:	42 81       	ldd	r20, Z+2	; 0x02
    1084:	53 81       	ldd	r21, Z+3	; 0x03
    1086:	64 81       	ldd	r22, Z+4	; 0x04
    1088:	75 81       	ldd	r23, Z+5	; 0x05
    108a:	47 2f       	mov	r20, r23
    108c:	55 27       	eor	r21, r21
    108e:	66 27       	eor	r22, r22
    1090:	77 27       	eor	r23, r23
    1092:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    1096:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    109a:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    109e:	02 80       	ldd	r0, Z+2	; 0x02
    10a0:	f3 81       	ldd	r31, Z+3	; 0x03
    10a2:	e0 2d       	mov	r30, r0
    10a4:	e2 0f       	add	r30, r18
    10a6:	f3 1f       	adc	r31, r19
    10a8:	40 81       	ld	r20, Z
    10aa:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    10ae:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    10b2:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    10b6:	02 80       	ldd	r0, Z+2	; 0x02
    10b8:	f3 81       	ldd	r31, Z+3	; 0x03
    10ba:	e0 2d       	mov	r30, r0
    10bc:	e2 0f       	add	r30, r18
    10be:	f3 1f       	adc	r31, r19
    10c0:	41 81       	ldd	r20, Z+1	; 0x01
    10c2:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    10c6:	65 e0       	ldi	r22, 0x05	; 5
    10c8:	68 9f       	mul	r22, r24
    10ca:	a0 01       	movw	r20, r0
    10cc:	69 9f       	mul	r22, r25
    10ce:	50 0d       	add	r21, r0
    10d0:	11 24       	eor	r1, r1
    10d2:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    10d6:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    10da:	04 80       	ldd	r0, Z+4	; 0x04
    10dc:	f5 81       	ldd	r31, Z+5	; 0x05
    10de:	e0 2d       	mov	r30, r0
    10e0:	e4 0f       	add	r30, r20
    10e2:	f5 1f       	adc	r31, r21
    10e4:	83 81       	ldd	r24, Z+3	; 0x03
    10e6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    10ea:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    10ee:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    10f2:	04 80       	ldd	r0, Z+4	; 0x04
    10f4:	f5 81       	ldd	r31, Z+5	; 0x05
    10f6:	e0 2d       	mov	r30, r0
    10f8:	e4 0f       	add	r30, r20
    10fa:	f5 1f       	adc	r31, r21
    10fc:	83 81       	ldd	r24, Z+3	; 0x03
    10fe:	94 81       	ldd	r25, Z+4	; 0x04
    1100:	88 27       	eor	r24, r24
    1102:	9f 73       	andi	r25, 0x3F	; 63
    1104:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    1108:	a0 91 91 01 	lds	r26, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    110c:	b0 91 92 01 	lds	r27, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1110:	14 96       	adiw	r26, 0x04	; 4
    1112:	ed 91       	ld	r30, X+
    1114:	fc 91       	ld	r31, X
    1116:	15 97       	sbiw	r26, 0x05	; 5
    1118:	e4 0f       	add	r30, r20
    111a:	f5 1f       	adc	r31, r21
    111c:	80 81       	ld	r24, Z
    111e:	81 fd       	sbrc	r24, 1
    1120:	60 83       	st	Z, r22
    1122:	14 96       	adiw	r26, 0x04	; 4
    1124:	8d 91       	ld	r24, X+
    1126:	9c 91       	ld	r25, X
    1128:	15 97       	sbiw	r26, 0x05	; 5
    112a:	fc 01       	movw	r30, r24
    112c:	e4 0f       	add	r30, r20
    112e:	f5 1f       	adc	r31, r21
    1130:	80 81       	ld	r24, Z
    1132:	8c 71       	andi	r24, 0x1C	; 28
    1134:	71 f4       	brne	.+28     	; 0x1152 <qtm_measure_node+0x136>
    1136:	12 96       	adiw	r26, 0x02	; 2
    1138:	ed 91       	ld	r30, X+
    113a:	fc 91       	ld	r31, X
    113c:	13 97       	sbiw	r26, 0x03	; 3
    113e:	e2 0f       	add	r30, r18
    1140:	f3 1f       	adc	r31, r19
    1142:	e0 85       	ldd	r30, Z+8	; 0x08
    1144:	e2 95       	swap	r30
    1146:	ef 70       	andi	r30, 0x0F	; 15
    1148:	f0 e0       	ldi	r31, 0x00	; 0
    114a:	e3 5b       	subi	r30, 0xB3	; 179
    114c:	fe 4f       	sbci	r31, 0xFE	; 254
    114e:	80 81       	ld	r24, Z
    1150:	01 c0       	rjmp	.+2      	; 0x1154 <qtm_measure_node+0x138>
    1152:	8f e3       	ldi	r24, 0x3F	; 63
    1154:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    1158:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    115c:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1160:	02 80       	ldd	r0, Z+2	; 0x02
    1162:	f3 81       	ldd	r31, Z+3	; 0x03
    1164:	e0 2d       	mov	r30, r0
    1166:	e2 0f       	add	r30, r18
    1168:	f3 1f       	adc	r31, r19
    116a:	86 81       	ldd	r24, Z+6	; 0x06
    116c:	8b 3f       	cpi	r24, 0xFB	; 251
    116e:	10 f4       	brcc	.+4      	; 0x1174 <qtm_measure_node+0x158>
    1170:	8c 5f       	subi	r24, 0xFC	; 252
    1172:	01 c0       	rjmp	.+2      	; 0x1176 <qtm_measure_node+0x15a>
    1174:	8f ef       	ldi	r24, 0xFF	; 255
    1176:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    117a:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    117e:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1182:	02 80       	ldd	r0, Z+2	; 0x02
    1184:	f3 81       	ldd	r31, Z+3	; 0x03
    1186:	e0 2d       	mov	r30, r0
    1188:	e2 0f       	add	r30, r18
    118a:	f3 1f       	adc	r31, r19
    118c:	87 81       	ldd	r24, Z+7	; 0x07
    118e:	80 7f       	andi	r24, 0xF0	; 240
    1190:	91 85       	ldd	r25, Z+9	; 0x09
    1192:	89 2b       	or	r24, r25
    1194:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1198:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    119c:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    11a0:	82 81       	ldd	r24, Z+2	; 0x02
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	fc 01       	movw	r30, r24
    11a6:	e2 0f       	add	r30, r18
    11a8:	f3 1f       	adc	r31, r19
    11aa:	87 81       	ldd	r24, Z+7	; 0x07
    11ac:	8f 70       	andi	r24, 0x0F	; 15
    11ae:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    11b2:	82 e1       	ldi	r24, 0x12	; 18
    11b4:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    11b8:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    11bc:	81 60       	ori	r24, 0x01	; 1
    11be:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    11c2:	08 95       	ret

000011c4 <qtm_acquisition_process>:
    11c4:	4f 92       	push	r4
    11c6:	5f 92       	push	r5
    11c8:	6f 92       	push	r6
    11ca:	7f 92       	push	r7
    11cc:	8f 92       	push	r8
    11ce:	9f 92       	push	r9
    11d0:	af 92       	push	r10
    11d2:	bf 92       	push	r11
    11d4:	cf 92       	push	r12
    11d6:	df 92       	push	r13
    11d8:	ef 92       	push	r14
    11da:	ff 92       	push	r15
    11dc:	0f 93       	push	r16
    11de:	1f 93       	push	r17
    11e0:	cf 93       	push	r28
    11e2:	df 93       	push	r29
    11e4:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <touch_seq_lib_state>
    11e8:	88 23       	and	r24, r24
    11ea:	09 f4       	brne	.+2      	; 0x11ee <qtm_acquisition_process+0x2a>
    11ec:	31 c1       	rjmp	.+610    	; 0x1450 <qtm_acquisition_process+0x28c>
    11ee:	a0 91 91 01 	lds	r26, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    11f2:	b0 91 92 01 	lds	r27, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    11f6:	e0 90 93 01 	lds	r14, 0x0193	; 0x800193 <qtm_raw_data_measurements_ptr>
    11fa:	f0 90 94 01 	lds	r15, 0x0194	; 0x800194 <qtm_raw_data_measurements_ptr+0x1>
    11fe:	41 2c       	mov	r4, r1
    1200:	51 2c       	mov	r5, r1
    1202:	60 e0       	ldi	r22, 0x00	; 0
    1204:	70 e0       	ldi	r23, 0x00	; 0
    1206:	00 e0       	ldi	r16, 0x00	; 0
    1208:	10 e0       	ldi	r17, 0x00	; 0
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	66 24       	eor	r6, r6
    120e:	63 94       	inc	r6
    1210:	91 e8       	ldi	r25, 0x81	; 129
    1212:	79 2e       	mov	r7, r25
    1214:	aa 24       	eor	r10, r10
    1216:	aa 94       	dec	r10
    1218:	bb 24       	eor	r11, r11
    121a:	b3 94       	inc	r11
    121c:	cd 90       	ld	r12, X+
    121e:	dc 90       	ld	r13, X
    1220:	11 97       	sbiw	r26, 0x01	; 1
    1222:	f6 01       	movw	r30, r12
    1224:	20 81       	ld	r18, Z
    1226:	31 81       	ldd	r19, Z+1	; 0x01
    1228:	02 17       	cp	r16, r18
    122a:	13 07       	cpc	r17, r19
    122c:	08 f0       	brcs	.+2      	; 0x1230 <qtm_acquisition_process+0x6c>
    122e:	0c c1       	rjmp	.+536    	; 0x1448 <qtm_acquisition_process+0x284>
    1230:	e7 01       	movw	r28, r14
    1232:	29 91       	ld	r18, Y+
    1234:	39 91       	ld	r19, Y+
    1236:	7e 01       	movw	r14, r28
    1238:	14 96       	adiw	r26, 0x04	; 4
    123a:	ed 91       	ld	r30, X+
    123c:	fc 91       	ld	r31, X
    123e:	15 97       	sbiw	r26, 0x05	; 5
    1240:	e6 0f       	add	r30, r22
    1242:	f7 1f       	adc	r31, r23
    1244:	40 81       	ld	r20, Z
    1246:	4c 71       	andi	r20, 0x1C	; 28
    1248:	50 e0       	ldi	r21, 0x00	; 0
    124a:	56 95       	lsr	r21
    124c:	47 95       	ror	r20
    124e:	56 95       	lsr	r21
    1250:	47 95       	ror	r20
    1252:	41 15       	cp	r20, r1
    1254:	51 05       	cpc	r21, r1
    1256:	21 f0       	breq	.+8      	; 0x1260 <qtm_acquisition_process+0x9c>
    1258:	41 30       	cpi	r20, 0x01	; 1
    125a:	51 05       	cpc	r21, r1
    125c:	c1 f0       	breq	.+48     	; 0x128e <qtm_acquisition_process+0xca>
    125e:	eb c0       	rjmp	.+470    	; 0x1436 <qtm_acquisition_process+0x272>
    1260:	12 96       	adiw	r26, 0x02	; 2
    1262:	4d 91       	ld	r20, X+
    1264:	5c 91       	ld	r21, X
    1266:	13 97       	sbiw	r26, 0x03	; 3
    1268:	44 0d       	add	r20, r4
    126a:	55 1d       	adc	r21, r5
    126c:	ea 01       	movw	r28, r20
    126e:	98 85       	ldd	r25, Y+8	; 0x08
    1270:	9f 70       	andi	r25, 0x0F	; 15
    1272:	49 85       	ldd	r20, Y+9	; 0x09
    1274:	94 17       	cp	r25, r20
    1276:	10 f4       	brcc	.+4      	; 0x127c <qtm_acquisition_process+0xb8>
    1278:	49 1b       	sub	r20, r25
    127a:	01 c0       	rjmp	.+2      	; 0x127e <qtm_acquisition_process+0xba>
    127c:	40 e0       	ldi	r20, 0x00	; 0
    127e:	02 c0       	rjmp	.+4      	; 0x1284 <qtm_acquisition_process+0xc0>
    1280:	36 95       	lsr	r19
    1282:	27 95       	ror	r18
    1284:	4a 95       	dec	r20
    1286:	e2 f7       	brpl	.-8      	; 0x1280 <qtm_acquisition_process+0xbc>
    1288:	32 83       	std	Z+2, r19	; 0x02
    128a:	21 83       	std	Z+1, r18	; 0x01
    128c:	d5 c0       	rjmp	.+426    	; 0x1438 <qtm_acquisition_process+0x274>
    128e:	12 96       	adiw	r26, 0x02	; 2
    1290:	4d 91       	ld	r20, X+
    1292:	5c 91       	ld	r21, X
    1294:	13 97       	sbiw	r26, 0x03	; 3
    1296:	44 0d       	add	r20, r4
    1298:	55 1d       	adc	r21, r5
    129a:	ea 01       	movw	r28, r20
    129c:	09 84       	ldd	r0, Y+9	; 0x09
    129e:	02 c0       	rjmp	.+4      	; 0x12a4 <qtm_acquisition_process+0xe0>
    12a0:	36 95       	lsr	r19
    12a2:	27 95       	ror	r18
    12a4:	0a 94       	dec	r0
    12a6:	e2 f7       	brpl	.-8      	; 0x12a0 <qtm_acquisition_process+0xdc>
    12a8:	32 83       	std	Z+2, r19	; 0x02
    12aa:	21 83       	std	Z+1, r18	; 0x01
    12ac:	43 81       	ldd	r20, Z+3	; 0x03
    12ae:	54 81       	ldd	r21, Z+4	; 0x04
    12b0:	21 15       	cp	r18, r1
    12b2:	d2 e0       	ldi	r29, 0x02	; 2
    12b4:	3d 07       	cpc	r19, r29
    12b6:	20 f0       	brcs	.+8      	; 0x12c0 <qtm_acquisition_process+0xfc>
    12b8:	2f 5f       	subi	r18, 0xFF	; 255
    12ba:	31 40       	sbci	r19, 0x01	; 1
    12bc:	91 e0       	ldi	r25, 0x01	; 1
    12be:	05 c0       	rjmp	.+10     	; 0x12ca <qtm_acquisition_process+0x106>
    12c0:	e5 01       	movw	r28, r10
    12c2:	c2 1b       	sub	r28, r18
    12c4:	d3 0b       	sbc	r29, r19
    12c6:	9e 01       	movw	r18, r28
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	e6 01       	movw	r28, r12
    12cc:	da 80       	ldd	r13, Y+2	; 0x02
    12ce:	d0 e4       	ldi	r29, 0x40	; 64
    12d0:	dd 12       	cpse	r13, r29
    12d2:	05 c0       	rjmp	.+10     	; 0x12de <qtm_acquisition_process+0x11a>
    12d4:	36 95       	lsr	r19
    12d6:	27 95       	ror	r18
    12d8:	99 23       	and	r25, r25
    12da:	19 f0       	breq	.+6      	; 0x12e2 <qtm_acquisition_process+0x11e>
    12dc:	09 c0       	rjmp	.+18     	; 0x12f0 <qtm_acquisition_process+0x12c>
    12de:	99 23       	and	r25, r25
    12e0:	39 f0       	breq	.+14     	; 0x12f0 <qtm_acquisition_process+0x12c>
    12e2:	4f 3f       	cpi	r20, 0xFF	; 255
    12e4:	9f e3       	ldi	r25, 0x3F	; 63
    12e6:	59 07       	cpc	r21, r25
    12e8:	31 f4       	brne	.+12     	; 0x12f6 <qtm_acquisition_process+0x132>
    12ea:	70 82       	st	Z, r7
    12ec:	8e e0       	ldi	r24, 0x0E	; 14
    12ee:	07 c0       	rjmp	.+14     	; 0x12fe <qtm_acquisition_process+0x13a>
    12f0:	88 24       	eor	r8, r8
    12f2:	83 94       	inc	r8
    12f4:	01 c0       	rjmp	.+2      	; 0x12f8 <qtm_acquisition_process+0x134>
    12f6:	81 2c       	mov	r8, r1
    12f8:	2a 30       	cpi	r18, 0x0A	; 10
    12fa:	31 05       	cpc	r19, r1
    12fc:	98 f4       	brcc	.+38     	; 0x1324 <qtm_acquisition_process+0x160>
    12fe:	14 96       	adiw	r26, 0x04	; 4
    1300:	ed 91       	ld	r30, X+
    1302:	fc 91       	ld	r31, X
    1304:	15 97       	sbiw	r26, 0x05	; 5
    1306:	e6 0f       	add	r30, r22
    1308:	f7 1f       	adc	r31, r23
    130a:	20 81       	ld	r18, Z
    130c:	27 ff       	sbrs	r18, 7
    130e:	60 82       	st	Z, r6
    1310:	14 96       	adiw	r26, 0x04	; 4
    1312:	ed 91       	ld	r30, X+
    1314:	fc 91       	ld	r31, X
    1316:	15 97       	sbiw	r26, 0x05	; 5
    1318:	e6 0f       	add	r30, r22
    131a:	f7 1f       	adc	r31, r23
    131c:	5f 73       	andi	r21, 0x3F	; 63
    131e:	54 83       	std	Z+4, r21	; 0x04
    1320:	43 83       	std	Z+3, r20	; 0x03
    1322:	8a c0       	rjmp	.+276    	; 0x1438 <qtm_acquisition_process+0x274>
    1324:	6a 01       	movw	r12, r20
    1326:	cc 24       	eor	r12, r12
    1328:	c0 e3       	ldi	r28, 0x30	; 48
    132a:	dc 22       	and	r13, r28
    132c:	9d 2c       	mov	r9, r13
    132e:	92 94       	swap	r9
    1330:	df e0       	ldi	r29, 0x0F	; 15
    1332:	9d 22       	and	r9, r29
    1334:	6a 01       	movw	r12, r20
    1336:	cc 24       	eor	r12, r12
    1338:	df e0       	ldi	r29, 0x0F	; 15
    133a:	dd 22       	and	r13, r29
    133c:	9d 2d       	mov	r25, r13
    133e:	6a 01       	movw	r12, r20
    1340:	c0 ef       	ldi	r28, 0xF0	; 240
    1342:	cc 22       	and	r12, r28
    1344:	dd 24       	eor	r13, r13
    1346:	54 e0       	ldi	r21, 0x04	; 4
    1348:	d6 94       	lsr	r13
    134a:	c7 94       	ror	r12
    134c:	5a 95       	dec	r21
    134e:	e1 f7       	brne	.-8      	; 0x1348 <qtm_acquisition_process+0x184>
    1350:	5c 2d       	mov	r21, r12
    1352:	4f 70       	andi	r20, 0x0F	; 15
    1354:	81 10       	cpse	r8, r1
    1356:	32 c0       	rjmp	.+100    	; 0x13bc <qtm_acquisition_process+0x1f8>
    1358:	20 3d       	cpi	r18, 0xD0	; 208
    135a:	31 05       	cpc	r19, r1
    135c:	60 f0       	brcs	.+24     	; 0x1376 <qtm_acquisition_process+0x1b2>
    135e:	d3 e0       	ldi	r29, 0x03	; 3
    1360:	9d 16       	cp	r9, r29
    1362:	49 f0       	breq	.+18     	; 0x1376 <qtm_acquisition_process+0x1b2>
    1364:	93 94       	inc	r9
    1366:	2f 5c       	subi	r18, 0xCF	; 207
    1368:	31 09       	sbc	r19, r1
    136a:	f6 cf       	rjmp	.-20     	; 0x1358 <qtm_acquisition_process+0x194>
    136c:	9f 30       	cpi	r25, 0x0F	; 15
    136e:	41 f0       	breq	.+16     	; 0x1380 <qtm_acquisition_process+0x1bc>
    1370:	9f 5f       	subi	r25, 0xFF	; 255
    1372:	25 51       	subi	r18, 0x15	; 21
    1374:	31 09       	sbc	r19, r1
    1376:	26 31       	cpi	r18, 0x16	; 22
    1378:	31 05       	cpc	r19, r1
    137a:	c0 f7       	brcc	.-16     	; 0x136c <qtm_acquisition_process+0x1a8>
    137c:	9f 30       	cpi	r25, 0x0F	; 15
    137e:	69 f4       	brne	.+26     	; 0x139a <qtm_acquisition_process+0x1d6>
    1380:	93 e0       	ldi	r25, 0x03	; 3
    1382:	99 12       	cpse	r9, r25
    1384:	02 c0       	rjmp	.+4      	; 0x138a <qtm_acquisition_process+0x1c6>
    1386:	9f e0       	ldi	r25, 0x0F	; 15
    1388:	08 c0       	rjmp	.+16     	; 0x139a <qtm_acquisition_process+0x1d6>
    138a:	93 94       	inc	r9
    138c:	95 e0       	ldi	r25, 0x05	; 5
    138e:	05 c0       	rjmp	.+10     	; 0x139a <qtm_acquisition_process+0x1d6>
    1390:	5f 30       	cpi	r21, 0x0F	; 15
    1392:	49 f0       	breq	.+18     	; 0x13a6 <qtm_acquisition_process+0x1e2>
    1394:	5f 5f       	subi	r21, 0xFF	; 255
    1396:	22 50       	subi	r18, 0x02	; 2
    1398:	31 09       	sbc	r19, r1
    139a:	23 30       	cpi	r18, 0x03	; 3
    139c:	31 05       	cpc	r19, r1
    139e:	c0 f7       	brcc	.-16     	; 0x1390 <qtm_acquisition_process+0x1cc>
    13a0:	5f 30       	cpi	r21, 0x0F	; 15
    13a2:	09 f0       	breq	.+2      	; 0x13a6 <qtm_acquisition_process+0x1e2>
    13a4:	5b c0       	rjmp	.+182    	; 0x145c <qtm_acquisition_process+0x298>
    13a6:	9f 30       	cpi	r25, 0x0F	; 15
    13a8:	09 f4       	brne	.+2      	; 0x13ac <qtm_acquisition_process+0x1e8>
    13aa:	54 c0       	rjmp	.+168    	; 0x1454 <qtm_acquisition_process+0x290>
    13ac:	9f 5f       	subi	r25, 0xFF	; 255
    13ae:	55 e0       	ldi	r21, 0x05	; 5
    13b0:	55 c0       	rjmp	.+170    	; 0x145c <qtm_acquisition_process+0x298>
    13b2:	99 20       	and	r9, r9
    13b4:	61 f0       	breq	.+24     	; 0x13ce <qtm_acquisition_process+0x20a>
    13b6:	9a 94       	dec	r9
    13b8:	2f 5c       	subi	r18, 0xCF	; 207
    13ba:	31 09       	sbc	r19, r1
    13bc:	20 3d       	cpi	r18, 0xD0	; 208
    13be:	31 05       	cpc	r19, r1
    13c0:	c0 f7       	brcc	.-16     	; 0x13b2 <qtm_acquisition_process+0x1ee>
    13c2:	05 c0       	rjmp	.+10     	; 0x13ce <qtm_acquisition_process+0x20a>
    13c4:	99 23       	and	r25, r25
    13c6:	41 f0       	breq	.+16     	; 0x13d8 <qtm_acquisition_process+0x214>
    13c8:	91 50       	subi	r25, 0x01	; 1
    13ca:	25 51       	subi	r18, 0x15	; 21
    13cc:	31 09       	sbc	r19, r1
    13ce:	26 31       	cpi	r18, 0x16	; 22
    13d0:	31 05       	cpc	r19, r1
    13d2:	c0 f7       	brcc	.-16     	; 0x13c4 <qtm_acquisition_process+0x200>
    13d4:	91 11       	cpse	r25, r1
    13d6:	0c c0       	rjmp	.+24     	; 0x13f0 <qtm_acquisition_process+0x22c>
    13d8:	91 10       	cpse	r9, r1
    13da:	02 c0       	rjmp	.+4      	; 0x13e0 <qtm_acquisition_process+0x21c>
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	08 c0       	rjmp	.+16     	; 0x13f0 <qtm_acquisition_process+0x22c>
    13e0:	9a 94       	dec	r9
    13e2:	9a e0       	ldi	r25, 0x0A	; 10
    13e4:	05 c0       	rjmp	.+10     	; 0x13f0 <qtm_acquisition_process+0x22c>
    13e6:	55 23       	and	r21, r21
    13e8:	41 f0       	breq	.+16     	; 0x13fa <qtm_acquisition_process+0x236>
    13ea:	51 50       	subi	r21, 0x01	; 1
    13ec:	22 50       	subi	r18, 0x02	; 2
    13ee:	31 09       	sbc	r19, r1
    13f0:	23 30       	cpi	r18, 0x03	; 3
    13f2:	31 05       	cpc	r19, r1
    13f4:	c0 f7       	brcc	.-16     	; 0x13e6 <qtm_acquisition_process+0x222>
    13f6:	51 11       	cpse	r21, r1
    13f8:	0d c0       	rjmp	.+26     	; 0x1414 <qtm_acquisition_process+0x250>
    13fa:	99 23       	and	r25, r25
    13fc:	b9 f1       	breq	.+110    	; 0x146c <qtm_acquisition_process+0x2a8>
    13fe:	91 50       	subi	r25, 0x01	; 1
    1400:	5a e0       	ldi	r21, 0x0A	; 10
    1402:	23 30       	cpi	r18, 0x03	; 3
    1404:	31 05       	cpc	r19, r1
    1406:	d0 f6       	brcc	.-76     	; 0x13bc <qtm_acquisition_process+0x1f8>
    1408:	05 c0       	rjmp	.+10     	; 0x1414 <qtm_acquisition_process+0x250>
    140a:	23 30       	cpi	r18, 0x03	; 3
    140c:	31 05       	cpc	r19, r1
    140e:	58 f1       	brcs	.+86     	; 0x1466 <qtm_acquisition_process+0x2a2>
    1410:	4f e0       	ldi	r20, 0x0F	; 15
    1412:	5f e0       	ldi	r21, 0x0F	; 15
    1414:	29 2d       	mov	r18, r9
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	32 2f       	mov	r19, r18
    141a:	22 27       	eor	r18, r18
    141c:	32 95       	swap	r19
    141e:	30 7f       	andi	r19, 0xF0	; 240
    1420:	39 2b       	or	r19, r25
    1422:	24 2b       	or	r18, r20
    1424:	c0 e1       	ldi	r28, 0x10	; 16
    1426:	5c 9f       	mul	r21, r28
    1428:	60 01       	movw	r12, r0
    142a:	11 24       	eor	r1, r1
    142c:	c2 2a       	or	r12, r18
    142e:	d3 2a       	or	r13, r19
    1430:	d4 82       	std	Z+4, r13	; 0x04
    1432:	c3 82       	std	Z+3, r12	; 0x03
    1434:	01 c0       	rjmp	.+2      	; 0x1438 <qtm_acquisition_process+0x274>
    1436:	ff cf       	rjmp	.-2      	; 0x1436 <qtm_acquisition_process+0x272>
    1438:	0f 5f       	subi	r16, 0xFF	; 255
    143a:	1f 4f       	sbci	r17, 0xFF	; 255
    143c:	6b 5f       	subi	r22, 0xFB	; 251
    143e:	7f 4f       	sbci	r23, 0xFF	; 255
    1440:	da e0       	ldi	r29, 0x0A	; 10
    1442:	4d 0e       	add	r4, r29
    1444:	51 1c       	adc	r5, r1
    1446:	ea ce       	rjmp	.-556    	; 0x121c <qtm_acquisition_process+0x58>
    1448:	92 e0       	ldi	r25, 0x02	; 2
    144a:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <touch_seq_lib_state>
    144e:	10 c0       	rjmp	.+32     	; 0x1470 <qtm_acquisition_process+0x2ac>
    1450:	83 e0       	ldi	r24, 0x03	; 3
    1452:	0e c0       	rjmp	.+28     	; 0x1470 <qtm_acquisition_process+0x2ac>
    1454:	53 e0       	ldi	r21, 0x03	; 3
    1456:	95 16       	cp	r9, r21
    1458:	c1 f2       	breq	.-80     	; 0x140a <qtm_acquisition_process+0x246>
    145a:	5f e0       	ldi	r21, 0x0F	; 15
    145c:	23 30       	cpi	r18, 0x03	; 3
    145e:	31 05       	cpc	r19, r1
    1460:	08 f0       	brcs	.+2      	; 0x1464 <qtm_acquisition_process+0x2a0>
    1462:	7a cf       	rjmp	.-268    	; 0x1358 <qtm_acquisition_process+0x194>
    1464:	d7 cf       	rjmp	.-82     	; 0x1414 <qtm_acquisition_process+0x250>
    1466:	5f e0       	ldi	r21, 0x0F	; 15
    1468:	4f e0       	ldi	r20, 0x0F	; 15
    146a:	d4 cf       	rjmp	.-88     	; 0x1414 <qtm_acquisition_process+0x250>
    146c:	50 e0       	ldi	r21, 0x00	; 0
    146e:	d2 cf       	rjmp	.-92     	; 0x1414 <qtm_acquisition_process+0x250>
    1470:	df 91       	pop	r29
    1472:	cf 91       	pop	r28
    1474:	1f 91       	pop	r17
    1476:	0f 91       	pop	r16
    1478:	ff 90       	pop	r15
    147a:	ef 90       	pop	r14
    147c:	df 90       	pop	r13
    147e:	cf 90       	pop	r12
    1480:	bf 90       	pop	r11
    1482:	af 90       	pop	r10
    1484:	9f 90       	pop	r9
    1486:	8f 90       	pop	r8
    1488:	7f 90       	pop	r7
    148a:	6f 90       	pop	r6
    148c:	5f 90       	pop	r5
    148e:	4f 90       	pop	r4
    1490:	08 95       	ret

00001492 <qtm_ptc_init_acquisition_module>:
    1492:	8f 92       	push	r8
    1494:	9f 92       	push	r9
    1496:	af 92       	push	r10
    1498:	bf 92       	push	r11
    149a:	cf 92       	push	r12
    149c:	df 92       	push	r13
    149e:	ef 92       	push	r14
    14a0:	ff 92       	push	r15
    14a2:	cf 93       	push	r28
    14a4:	df 93       	push	r29
    14a6:	00 97       	sbiw	r24, 0x00	; 0
    14a8:	09 f4       	brne	.+2      	; 0x14ac <qtm_ptc_init_acquisition_module+0x1a>
    14aa:	76 c0       	rjmp	.+236    	; 0x1598 <qtm_ptc_init_acquisition_module+0x106>
    14ac:	dc 01       	movw	r26, r24
    14ae:	ed 91       	ld	r30, X+
    14b0:	fc 91       	ld	r31, X
    14b2:	c0 80       	ld	r12, Z
    14b4:	d1 80       	ldd	r13, Z+1	; 0x01
    14b6:	e1 2c       	mov	r14, r1
    14b8:	f1 2c       	mov	r15, r1
    14ba:	a0 e0       	ldi	r26, 0x00	; 0
    14bc:	b0 e0       	ldi	r27, 0x00	; 0
    14be:	40 e0       	ldi	r20, 0x00	; 0
    14c0:	50 e0       	ldi	r21, 0x00	; 0
    14c2:	ba 01       	movw	r22, r20
    14c4:	20 e0       	ldi	r18, 0x00	; 0
    14c6:	30 e0       	ldi	r19, 0x00	; 0
    14c8:	ac 15       	cp	r26, r12
    14ca:	bd 05       	cpc	r27, r13
    14cc:	b1 f0       	breq	.+44     	; 0x14fa <qtm_ptc_init_acquisition_module+0x68>
    14ce:	ec 01       	movw	r28, r24
    14d0:	ea 81       	ldd	r30, Y+2	; 0x02
    14d2:	fb 81       	ldd	r31, Y+3	; 0x03
    14d4:	ee 0d       	add	r30, r14
    14d6:	ff 1d       	adc	r31, r15
    14d8:	a0 80       	ld	r10, Z
    14da:	b1 80       	ldd	r11, Z+1	; 0x01
    14dc:	2a 29       	or	r18, r10
    14de:	3b 29       	or	r19, r11
    14e0:	82 80       	ldd	r8, Z+2	; 0x02
    14e2:	93 80       	ldd	r9, Z+3	; 0x03
    14e4:	a4 80       	ldd	r10, Z+4	; 0x04
    14e6:	b5 80       	ldd	r11, Z+5	; 0x05
    14e8:	48 29       	or	r20, r8
    14ea:	59 29       	or	r21, r9
    14ec:	6a 29       	or	r22, r10
    14ee:	7b 29       	or	r23, r11
    14f0:	11 96       	adiw	r26, 0x01	; 1
    14f2:	da e0       	ldi	r29, 0x0A	; 10
    14f4:	ed 0e       	add	r14, r29
    14f6:	f1 1c       	adc	r15, r1
    14f8:	e7 cf       	rjmp	.-50     	; 0x14c8 <qtm_ptc_init_acquisition_module+0x36>
    14fa:	41 15       	cp	r20, r1
    14fc:	51 05       	cpc	r21, r1
    14fe:	61 05       	cpc	r22, r1
    1500:	71 05       	cpc	r23, r1
    1502:	09 f4       	brne	.+2      	; 0x1506 <qtm_ptc_init_acquisition_module+0x74>
    1504:	4b c0       	rjmp	.+150    	; 0x159c <qtm_ptc_init_acquisition_module+0x10a>
    1506:	e0 91 76 01 	lds	r30, 0x0176	; 0x800176 <touch_seq_lib_state>
    150a:	4a 01       	movw	r8, r20
    150c:	5b 01       	movw	r10, r22
    150e:	88 24       	eor	r8, r8
    1510:	aa 24       	eor	r10, r10
    1512:	bb 24       	eor	r11, r11
    1514:	6a 01       	movw	r12, r20
    1516:	7b 01       	movw	r14, r22
    1518:	cc 24       	eor	r12, r12
    151a:	dd 24       	eor	r13, r13
    151c:	ff 24       	eor	r15, r15
    151e:	87 2f       	mov	r24, r23
    1520:	99 27       	eor	r25, r25
    1522:	aa 27       	eor	r26, r26
    1524:	bb 27       	eor	r27, r27
    1526:	e1 11       	cpse	r30, r1
    1528:	17 c0       	rjmp	.+46     	; 0x1558 <qtm_ptc_init_acquisition_module+0xc6>
    152a:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    152e:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1532:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1536:	89 2c       	mov	r8, r9
    1538:	9a 2c       	mov	r9, r10
    153a:	ab 2c       	mov	r10, r11
    153c:	bb 24       	eor	r11, r11
    153e:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1542:	67 01       	movw	r12, r14
    1544:	ee 24       	eor	r14, r14
    1546:	ff 24       	eor	r15, r15
    1548:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    154c:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1550:	81 e0       	ldi	r24, 0x01	; 1
    1552:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <touch_seq_lib_state>
    1556:	1e c0       	rjmp	.+60     	; 0x1594 <qtm_ptc_init_acquisition_module+0x102>
    1558:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    155c:	2e 2b       	or	r18, r30
    155e:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    1562:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    1566:	23 2b       	or	r18, r19
    1568:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    156c:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1570:	42 2b       	or	r20, r18
    1572:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1576:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    157a:	29 29       	or	r18, r9
    157c:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1580:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1584:	2e 29       	or	r18, r14
    1586:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    158a:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    158e:	82 2b       	or	r24, r18
    1590:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	03 c0       	rjmp	.+6      	; 0x159e <qtm_ptc_init_acquisition_module+0x10c>
    1598:	8b e0       	ldi	r24, 0x0B	; 11
    159a:	01 c0       	rjmp	.+2      	; 0x159e <qtm_ptc_init_acquisition_module+0x10c>
    159c:	82 e0       	ldi	r24, 0x02	; 2
    159e:	df 91       	pop	r29
    15a0:	cf 91       	pop	r28
    15a2:	ff 90       	pop	r15
    15a4:	ef 90       	pop	r14
    15a6:	df 90       	pop	r13
    15a8:	cf 90       	pop	r12
    15aa:	bf 90       	pop	r11
    15ac:	af 90       	pop	r10
    15ae:	9f 90       	pop	r9
    15b0:	8f 90       	pop	r8
    15b2:	08 95       	ret

000015b4 <qtm_ptc_qtlib_assign_signal_memory>:
    15b4:	00 97       	sbiw	r24, 0x00	; 0
    15b6:	31 f0       	breq	.+12     	; 0x15c4 <qtm_ptc_qtlib_assign_signal_memory+0x10>
    15b8:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <qtm_raw_data_measurements_ptr+0x1>
    15bc:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <qtm_raw_data_measurements_ptr>
    15c0:	80 e0       	ldi	r24, 0x00	; 0
    15c2:	08 95       	ret
    15c4:	8b e0       	ldi	r24, 0x0B	; 11
    15c6:	08 95       	ret

000015c8 <qtm_ptc_start_measurement_seq>:
    15c8:	cf 93       	push	r28
    15ca:	df 93       	push	r29
    15cc:	00 d0       	rcall	.+0      	; 0x15ce <qtm_ptc_start_measurement_seq+0x6>
    15ce:	00 d0       	rcall	.+0      	; 0x15d0 <qtm_ptc_start_measurement_seq+0x8>
    15d0:	cd b7       	in	r28, 0x3d	; 61
    15d2:	de b7       	in	r29, 0x3e	; 62
    15d4:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <max_conversion_cycles>
    15d8:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <max_conversion_cycles+0x1>
    15dc:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <max_conversion_cycles+0x2>
    15e0:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <max_conversion_cycles+0x3>
    15e4:	61 15       	cp	r22, r1
    15e6:	71 05       	cpc	r23, r1
    15e8:	09 f4       	brne	.+2      	; 0x15ec <qtm_ptc_start_measurement_seq+0x24>
    15ea:	d8 c0       	rjmp	.+432    	; 0x179c <qtm_ptc_start_measurement_seq+0x1d4>
    15ec:	00 97       	sbiw	r24, 0x00	; 0
    15ee:	09 f4       	brne	.+2      	; 0x15f2 <qtm_ptc_start_measurement_seq+0x2a>
    15f0:	d5 c0       	rjmp	.+426    	; 0x179c <qtm_ptc_start_measurement_seq+0x1d4>
    15f2:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <touch_seq_lib_state>
    15f6:	22 23       	and	r18, r18
    15f8:	09 f4       	brne	.+2      	; 0x15fc <qtm_ptc_start_measurement_seq+0x34>
    15fa:	d2 c0       	rjmp	.+420    	; 0x17a0 <qtm_ptc_start_measurement_seq+0x1d8>
    15fc:	24 30       	cpi	r18, 0x04	; 4
    15fe:	09 f0       	breq	.+2      	; 0x1602 <qtm_ptc_start_measurement_seq+0x3a>
    1600:	92 c0       	rjmp	.+292    	; 0x1726 <qtm_ptc_start_measurement_seq+0x15e>
    1602:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <ptc_eoc_ok_flag>
    1606:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    160a:	80 ff       	sbrs	r24, 0
    160c:	8a c0       	rjmp	.+276    	; 0x1722 <qtm_ptc_start_measurement_seq+0x15a>
    160e:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	a6 e0       	ldi	r26, 0x06	; 6
    1616:	b0 e0       	ldi	r27, 0x00	; 0
    1618:	6f d1       	rcall	.+734    	; 0x18f8 <__umulhisi3>
    161a:	60 93 7a 01 	sts	0x017A, r22	; 0x80017a <max_conversion_cycles>
    161e:	70 93 7b 01 	sts	0x017B, r23	; 0x80017b <max_conversion_cycles+0x1>
    1622:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <max_conversion_cycles+0x2>
    1626:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <max_conversion_cycles+0x3>
    162a:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    162e:	2f 70       	andi	r18, 0x0F	; 15
    1630:	dc 01       	movw	r26, r24
    1632:	cb 01       	movw	r24, r22
    1634:	82 0f       	add	r24, r18
    1636:	91 1d       	adc	r25, r1
    1638:	a1 1d       	adc	r26, r1
    163a:	b1 1d       	adc	r27, r1
    163c:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <max_conversion_cycles>
    1640:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <max_conversion_cycles+0x1>
    1644:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <max_conversion_cycles+0x2>
    1648:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <max_conversion_cycles+0x3>
    164c:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1650:	27 70       	andi	r18, 0x07	; 7
    1652:	04 c0       	rjmp	.+8      	; 0x165c <qtm_ptc_start_measurement_seq+0x94>
    1654:	88 0f       	add	r24, r24
    1656:	99 1f       	adc	r25, r25
    1658:	aa 1f       	adc	r26, r26
    165a:	bb 1f       	adc	r27, r27
    165c:	2a 95       	dec	r18
    165e:	d2 f7       	brpl	.-12     	; 0x1654 <qtm_ptc_start_measurement_seq+0x8c>
    1660:	0e 96       	adiw	r24, 0x0e	; 14
    1662:	a1 1d       	adc	r26, r1
    1664:	b1 1d       	adc	r27, r1
    1666:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <max_conversion_cycles>
    166a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <max_conversion_cycles+0x1>
    166e:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <max_conversion_cycles+0x2>
    1672:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <max_conversion_cycles+0x3>
    1676:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    167a:	23 70       	andi	r18, 0x03	; 3
    167c:	04 c0       	rjmp	.+8      	; 0x1686 <qtm_ptc_start_measurement_seq+0xbe>
    167e:	88 0f       	add	r24, r24
    1680:	99 1f       	adc	r25, r25
    1682:	aa 1f       	adc	r26, r26
    1684:	bb 1f       	adc	r27, r27
    1686:	2a 95       	dec	r18
    1688:	d2 f7       	brpl	.-12     	; 0x167e <qtm_ptc_start_measurement_seq+0xb6>
    168a:	22 e0       	ldi	r18, 0x02	; 2
    168c:	b6 95       	lsr	r27
    168e:	a7 95       	ror	r26
    1690:	97 95       	ror	r25
    1692:	87 95       	ror	r24
    1694:	2a 95       	dec	r18
    1696:	d1 f7       	brne	.-12     	; 0x168c <qtm_ptc_start_measurement_seq+0xc4>
    1698:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <max_conversion_cycles>
    169c:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <max_conversion_cycles+0x1>
    16a0:	a0 93 7c 01 	sts	0x017C, r26	; 0x80017c <max_conversion_cycles+0x2>
    16a4:	b0 93 7d 01 	sts	0x017D, r27	; 0x80017d <max_conversion_cycles+0x3>
    16a8:	19 82       	std	Y+1, r1	; 0x01
    16aa:	1a 82       	std	Y+2, r1	; 0x02
    16ac:	1b 82       	std	Y+3, r1	; 0x03
    16ae:	1c 82       	std	Y+4, r1	; 0x04
    16b0:	21 e0       	ldi	r18, 0x01	; 1
    16b2:	49 81       	ldd	r20, Y+1	; 0x01
    16b4:	5a 81       	ldd	r21, Y+2	; 0x02
    16b6:	6b 81       	ldd	r22, Y+3	; 0x03
    16b8:	7c 81       	ldd	r23, Y+4	; 0x04
    16ba:	48 17       	cp	r20, r24
    16bc:	59 07       	cpc	r21, r25
    16be:	6a 07       	cpc	r22, r26
    16c0:	7b 07       	cpc	r23, r27
    16c2:	b0 f4       	brcc	.+44     	; 0x16f0 <qtm_ptc_start_measurement_seq+0x128>
    16c4:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <ptc_eoc_ok_flag>
    16c8:	33 23       	and	r19, r19
    16ca:	29 f0       	breq	.+10     	; 0x16d6 <qtm_ptc_start_measurement_seq+0x10e>
    16cc:	89 83       	std	Y+1, r24	; 0x01
    16ce:	9a 83       	std	Y+2, r25	; 0x02
    16d0:	ab 83       	std	Y+3, r26	; 0x03
    16d2:	bc 83       	std	Y+4, r27	; 0x04
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	49 81       	ldd	r20, Y+1	; 0x01
    16d8:	5a 81       	ldd	r21, Y+2	; 0x02
    16da:	6b 81       	ldd	r22, Y+3	; 0x03
    16dc:	7c 81       	ldd	r23, Y+4	; 0x04
    16de:	4f 5f       	subi	r20, 0xFF	; 255
    16e0:	5f 4f       	sbci	r21, 0xFF	; 255
    16e2:	6f 4f       	sbci	r22, 0xFF	; 255
    16e4:	7f 4f       	sbci	r23, 0xFF	; 255
    16e6:	49 83       	std	Y+1, r20	; 0x01
    16e8:	5a 83       	std	Y+2, r21	; 0x02
    16ea:	6b 83       	std	Y+3, r22	; 0x03
    16ec:	7c 83       	std	Y+4, r23	; 0x04
    16ee:	e1 cf       	rjmp	.-62     	; 0x16b2 <qtm_ptc_start_measurement_seq+0xea>
    16f0:	22 23       	and	r18, r18
    16f2:	b9 f0       	breq	.+46     	; 0x1722 <qtm_ptc_start_measurement_seq+0x15a>
    16f4:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    16f8:	80 ff       	sbrs	r24, 0
    16fa:	13 c0       	rjmp	.+38     	; 0x1722 <qtm_ptc_start_measurement_seq+0x15a>
    16fc:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1700:	00 00       	nop
    1702:	82 e1       	ldi	r24, 0x12	; 18
    1704:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1708:	00 00       	nop
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1710:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <ptc_lockups>
    1714:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <ptc_lockups+0x1>
    1718:	01 96       	adiw	r24, 0x01	; 1
    171a:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <ptc_lockups+0x1>
    171e:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <ptc_lockups>
    1722:	81 e0       	ldi	r24, 0x01	; 1
    1724:	40 c0       	rjmp	.+128    	; 0x17a6 <qtm_ptc_start_measurement_seq+0x1de>
    1726:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    172a:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    172e:	70 93 71 01 	sts	0x0171, r23	; 0x800171 <ptc_seq_measure_complete_pointer+0x1>
    1732:	60 93 70 01 	sts	0x0170, r22	; 0x800170 <ptc_seq_measure_complete_pointer>
    1736:	dc 01       	movw	r26, r24
    1738:	ed 91       	ld	r30, X+
    173a:	fc 91       	ld	r31, X
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	80 34       	cpi	r24, 0x40	; 64
    1740:	11 f4       	brne	.+4      	; 0x1746 <qtm_ptc_start_measurement_seq+0x17e>
    1742:	88 e0       	ldi	r24, 0x08	; 8
    1744:	03 c0       	rjmp	.+6      	; 0x174c <qtm_ptc_start_measurement_seq+0x184>
    1746:	80 38       	cpi	r24, 0x80	; 128
    1748:	69 f5       	brne	.+90     	; 0x17a4 <qtm_ptc_start_measurement_seq+0x1dc>
    174a:	8a e0       	ldi	r24, 0x0A	; 10
    174c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    1750:	e0 91 91 01 	lds	r30, 0x0191	; 0x800191 <qtm_acquisition_control_working_set_ptr>
    1754:	f0 91 92 01 	lds	r31, 0x0192	; 0x800192 <qtm_acquisition_control_working_set_ptr+0x1>
    1758:	01 90       	ld	r0, Z+
    175a:	f0 81       	ld	r31, Z
    175c:	e0 2d       	mov	r30, r0
    175e:	84 81       	ldd	r24, Z+4	; 0x04
    1760:	80 31       	cpi	r24, 0x10	; 16
    1762:	08 f0       	brcs	.+2      	; 0x1766 <qtm_ptc_start_measurement_seq+0x19e>
    1764:	80 e1       	ldi	r24, 0x10	; 16
    1766:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	84 bf       	out	0x34, r24	; 52
    176e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    1772:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <current_measure_channel+0x1>
    1776:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <current_measure_channel>
    177a:	1d dc       	rcall	.-1990   	; 0xfb6 <select_next_channel_to_measure>
    177c:	81 11       	cpse	r24, r1
    177e:	0a c0       	rjmp	.+20     	; 0x1794 <qtm_ptc_start_measurement_seq+0x1cc>
    1780:	84 e0       	ldi	r24, 0x04	; 4
    1782:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <touch_seq_lib_state>
    1786:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <current_measure_channel>
    178a:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <current_measure_channel+0x1>
    178e:	46 dc       	rcall	.-1908   	; 0x101c <qtm_measure_node>
    1790:	80 e0       	ldi	r24, 0x00	; 0
    1792:	09 c0       	rjmp	.+18     	; 0x17a6 <qtm_ptc_start_measurement_seq+0x1de>
    1794:	82 e0       	ldi	r24, 0x02	; 2
    1796:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <touch_seq_lib_state>
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <qtm_ptc_start_measurement_seq+0x1de>
    179c:	8b e0       	ldi	r24, 0x0B	; 11
    179e:	03 c0       	rjmp	.+6      	; 0x17a6 <qtm_ptc_start_measurement_seq+0x1de>
    17a0:	83 e0       	ldi	r24, 0x03	; 3
    17a2:	01 c0       	rjmp	.+2      	; 0x17a6 <qtm_ptc_start_measurement_seq+0x1de>
    17a4:	82 e0       	ldi	r24, 0x02	; 2
    17a6:	0f 90       	pop	r0
    17a8:	0f 90       	pop	r0
    17aa:	0f 90       	pop	r0
    17ac:	0f 90       	pop	r0
    17ae:	df 91       	pop	r29
    17b0:	cf 91       	pop	r28
    17b2:	08 95       	ret

000017b4 <qtm_enable_sensor_node>:
    17b4:	00 97       	sbiw	r24, 0x00	; 0
    17b6:	c9 f0       	breq	.+50     	; 0x17ea <qtm_enable_sensor_node+0x36>
    17b8:	dc 01       	movw	r26, r24
    17ba:	ed 91       	ld	r30, X+
    17bc:	fc 91       	ld	r31, X
    17be:	11 97       	sbiw	r26, 0x01	; 1
    17c0:	20 81       	ld	r18, Z
    17c2:	31 81       	ldd	r19, Z+1	; 0x01
    17c4:	26 17       	cp	r18, r22
    17c6:	37 07       	cpc	r19, r23
    17c8:	90 f0       	brcs	.+36     	; 0x17ee <qtm_enable_sensor_node+0x3a>
    17ca:	45 e0       	ldi	r20, 0x05	; 5
    17cc:	46 9f       	mul	r20, r22
    17ce:	90 01       	movw	r18, r0
    17d0:	47 9f       	mul	r20, r23
    17d2:	30 0d       	add	r19, r0
    17d4:	11 24       	eor	r1, r1
    17d6:	14 96       	adiw	r26, 0x04	; 4
    17d8:	ed 91       	ld	r30, X+
    17da:	fc 91       	ld	r31, X
    17dc:	15 97       	sbiw	r26, 0x05	; 5
    17de:	e2 0f       	add	r30, r18
    17e0:	f3 1f       	adc	r31, r19
    17e2:	81 e0       	ldi	r24, 0x01	; 1
    17e4:	80 83       	st	Z, r24
    17e6:	80 e0       	ldi	r24, 0x00	; 0
    17e8:	08 95       	ret
    17ea:	8b e0       	ldi	r24, 0x0B	; 11
    17ec:	08 95       	ret
    17ee:	82 e0       	ldi	r24, 0x02	; 2
    17f0:	08 95       	ret

000017f2 <qtm_calibrate_sensor_node>:
    17f2:	00 97       	sbiw	r24, 0x00	; 0
    17f4:	d1 f1       	breq	.+116    	; 0x186a <qtm_calibrate_sensor_node+0x78>
    17f6:	dc 01       	movw	r26, r24
    17f8:	ed 91       	ld	r30, X+
    17fa:	fc 91       	ld	r31, X
    17fc:	11 97       	sbiw	r26, 0x01	; 1
    17fe:	20 81       	ld	r18, Z
    1800:	31 81       	ldd	r19, Z+1	; 0x01
    1802:	26 17       	cp	r18, r22
    1804:	37 07       	cpc	r19, r23
    1806:	98 f1       	brcs	.+102    	; 0x186e <qtm_calibrate_sensor_node+0x7c>
    1808:	22 81       	ldd	r18, Z+2	; 0x02
    180a:	14 96       	adiw	r26, 0x04	; 4
    180c:	ed 91       	ld	r30, X+
    180e:	fc 91       	ld	r31, X
    1810:	15 97       	sbiw	r26, 0x05	; 5
    1812:	20 34       	cpi	r18, 0x40	; 64
    1814:	59 f4       	brne	.+22     	; 0x182c <qtm_calibrate_sensor_node+0x3a>
    1816:	85 e0       	ldi	r24, 0x05	; 5
    1818:	86 9f       	mul	r24, r22
    181a:	d0 01       	movw	r26, r0
    181c:	87 9f       	mul	r24, r23
    181e:	b0 0d       	add	r27, r0
    1820:	11 24       	eor	r1, r1
    1822:	ae 0f       	add	r26, r30
    1824:	bf 1f       	adc	r27, r31
    1826:	84 e3       	ldi	r24, 0x34	; 52
    1828:	92 e0       	ldi	r25, 0x02	; 2
    182a:	0c c0       	rjmp	.+24     	; 0x1844 <qtm_calibrate_sensor_node+0x52>
    182c:	20 38       	cpi	r18, 0x80	; 128
    182e:	81 f4       	brne	.+32     	; 0x1850 <qtm_calibrate_sensor_node+0x5e>
    1830:	85 e0       	ldi	r24, 0x05	; 5
    1832:	86 9f       	mul	r24, r22
    1834:	d0 01       	movw	r26, r0
    1836:	87 9f       	mul	r24, r23
    1838:	b0 0d       	add	r27, r0
    183a:	11 24       	eor	r1, r1
    183c:	ae 0f       	add	r26, r30
    183e:	bf 1f       	adc	r27, r31
    1840:	87 e6       	ldi	r24, 0x67	; 103
    1842:	95 e0       	ldi	r25, 0x05	; 5
    1844:	14 96       	adiw	r26, 0x04	; 4
    1846:	9c 93       	st	X, r25
    1848:	8e 93       	st	-X, r24
    184a:	13 97       	sbiw	r26, 0x03	; 3
    184c:	80 e0       	ldi	r24, 0x00	; 0
    184e:	01 c0       	rjmp	.+2      	; 0x1852 <qtm_calibrate_sensor_node+0x60>
    1850:	82 e0       	ldi	r24, 0x02	; 2
    1852:	95 e0       	ldi	r25, 0x05	; 5
    1854:	96 9f       	mul	r25, r22
    1856:	90 01       	movw	r18, r0
    1858:	97 9f       	mul	r25, r23
    185a:	30 0d       	add	r19, r0
    185c:	11 24       	eor	r1, r1
    185e:	e2 0f       	add	r30, r18
    1860:	f3 1f       	adc	r31, r19
    1862:	90 81       	ld	r25, Z
    1864:	92 60       	ori	r25, 0x02	; 2
    1866:	90 83       	st	Z, r25
    1868:	08 95       	ret
    186a:	8b e0       	ldi	r24, 0x0B	; 11
    186c:	08 95       	ret
    186e:	82 e0       	ldi	r24, 0x02	; 2
    1870:	08 95       	ret

00001872 <qtm_m324pb_ptc_handler_eoc>:
    1872:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1876:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    187a:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    187e:	e0 91 77 01 	lds	r30, 0x0177	; 0x800177 <current_measure_channel>
    1882:	f0 91 78 01 	lds	r31, 0x0178	; 0x800178 <current_measure_channel+0x1>
    1886:	ee 0f       	add	r30, r30
    1888:	ff 1f       	adc	r31, r31
    188a:	40 91 93 01 	lds	r20, 0x0193	; 0x800193 <qtm_raw_data_measurements_ptr>
    188e:	50 91 94 01 	lds	r21, 0x0194	; 0x800194 <qtm_raw_data_measurements_ptr+0x1>
    1892:	e4 0f       	add	r30, r20
    1894:	f5 1f       	adc	r31, r21
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	92 2b       	or	r25, r18
    189a:	91 83       	std	Z+1, r25	; 0x01
    189c:	80 83       	st	Z, r24
    189e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <good_eocs>
    18a2:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <good_eocs+0x1>
    18a6:	01 96       	adiw	r24, 0x01	; 1
    18a8:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <good_eocs+0x1>
    18ac:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <good_eocs>
    18b0:	89 2b       	or	r24, r25
    18b2:	21 f4       	brne	.+8      	; 0x18bc <qtm_m324pb_ptc_handler_eoc+0x4a>
    18b4:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <ptc_lockups+0x1>
    18b8:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <ptc_lockups>
    18bc:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <current_measure_channel>
    18c0:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <current_measure_channel+0x1>
    18c4:	01 96       	adiw	r24, 0x01	; 1
    18c6:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <current_measure_channel+0x1>
    18ca:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <current_measure_channel>
    18ce:	73 db       	rcall	.-2330   	; 0xfb6 <select_next_channel_to_measure>
    18d0:	81 11       	cpse	r24, r1
    18d2:	09 c0       	rjmp	.+18     	; 0x18e6 <qtm_m324pb_ptc_handler_eoc+0x74>
    18d4:	84 e0       	ldi	r24, 0x04	; 4
    18d6:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <touch_seq_lib_state>
    18da:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <current_measure_channel>
    18de:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <current_measure_channel+0x1>
    18e2:	9c db       	rcall	.-2248   	; 0x101c <qtm_measure_node>
    18e4:	05 c0       	rjmp	.+10     	; 0x18f0 <qtm_m324pb_ptc_handler_eoc+0x7e>
    18e6:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <ptc_seq_measure_complete_pointer>
    18ea:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <ptc_seq_measure_complete_pointer+0x1>
    18ee:	09 95       	icall
    18f0:	81 e0       	ldi	r24, 0x01	; 1
    18f2:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <ptc_eoc_ok_flag>
    18f6:	08 95       	ret

000018f8 <__umulhisi3>:
    18f8:	a2 9f       	mul	r26, r18
    18fa:	b0 01       	movw	r22, r0
    18fc:	b3 9f       	mul	r27, r19
    18fe:	c0 01       	movw	r24, r0
    1900:	a3 9f       	mul	r26, r19
    1902:	70 0d       	add	r23, r0
    1904:	81 1d       	adc	r24, r1
    1906:	11 24       	eor	r1, r1
    1908:	91 1d       	adc	r25, r1
    190a:	b2 9f       	mul	r27, r18
    190c:	70 0d       	add	r23, r0
    190e:	81 1d       	adc	r24, r1
    1910:	11 24       	eor	r1, r1
    1912:	91 1d       	adc	r25, r1
    1914:	08 95       	ret

00001916 <_exit>:
    1916:	f8 94       	cli

00001918 <__stop_program>:
    1918:	ff cf       	rjmp	.-2      	; 0x1918 <__stop_program>
